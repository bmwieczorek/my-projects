<?xml version="1.0" encoding="UTF-8"?>
<!--
 This is a WordPress eXtended RSS file generated by WordPress as an export of your site.
 It contains information about your site's posts, pages, comments, categories, and other content.
 You may use this file to transfer that content from one site to another.
 This file is not intended to serve as a complete backup of your site.

 To import this information into a WordPress site follow these steps:
 1. Log in to that site as an administrator.
 2. Go to Tools: Import in the WordPress admin panel.
 3. Install the "WordPress" importer from the list.
 4. Activate & Run Importer.
 5. Upload this file using the form provided on that page.
 6. You will first be asked to map the authors in this export file to users
    on the site. For each author, you may choose to map to an
    existing user on the site or to create a new user.
 7. WordPress will then import each of the posts, pages, comments, categories, etc.
    contained in this file into your site.
-->
<!-- generator="WordPress.com" created="2017-09-07 08:24"-->
<rss version="2.0" xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:wp="http://wordpress.org/export/1.2/">
  <channel>
<title>Bartosz Wieczorek's blog</title>
<link>https://bmwieczorek.wordpress.com</link>
<description>Some small ready solutions I find sometimes useful to reuse :-)</description>
<pubDate>Thu, 07 Sep 2017 08:24:22 +0000</pubDate>
<language>en</language>
<wp:wxr_version>1.2</wp:wxr_version>
<wp:base_site_url>http://wordpress.com/</wp:base_site_url>
<wp:base_blog_url>https://bmwieczorek.wordpress.com</wp:base_blog_url>
<wp:author>
  <wp:author_login>bmwieczorek</wp:author_login>
  <wp:author_email>bmwieczorek@gmail.com</wp:author_email>
  <wp:author_display_name><![CDATA[Bartosz Wieczorek]]></wp:author_display_name>
  <wp:author_first_name><![CDATA[]]></wp:author_first_name>
  <wp:author_last_name><![CDATA[]]></wp:author_last_name>
</wp:author>
<wp:category>
  <wp:term_id>7561814</wp:term_id>
  <wp:category_nicename>architectural-patterns</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Architectural patterns]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>137393839</wp:term_id>
  <wp:category_nicename>atomicboolean</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[AtomicBoolean]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>237866161</wp:term_id>
  <wp:category_nicename>atomiclong</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[AtomicLong]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>5469</wp:term_id>
  <wp:category_nicename>backup</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[backup]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>2674</wp:term_id>
  <wp:category_nicename>bash</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[bash]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>2185</wp:term_id>
  <wp:category_nicename>best-practices</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Best practices]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>2075170</wp:term_id>
  <wp:category_nicename>big-data</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[big data]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>1484672</wp:term_id>
  <wp:category_nicename>checkstyle</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[checkstyle]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>12763</wp:term_id>
  <wp:category_nicename>collections</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[collections]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>45809</wp:term_id>
  <wp:category_nicename>configuration</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[configuration]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>106153152</wp:term_id>
  <wp:category_nicename>constructor-reference</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[constructor reference]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>35659</wp:term_id>
  <wp:category_nicename>cpu</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[CPU]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>15545412</wp:term_id>
  <wp:category_nicename>cpu-time</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[cpu time]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>251096</wp:term_id>
  <wp:category_nicename>curl</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[curl]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>24433</wp:term_id>
  <wp:category_nicename>cygwin</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[cygwin]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>475</wp:term_id>
  <wp:category_nicename>database</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Database]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>4884</wp:term_id>
  <wp:category_nicename>design-patterns</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Design patterns]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>4504191</wp:term_id>
  <wp:category_nicename>docker</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[docker]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>18466</wp:term_id>
  <wp:category_nicename>eclipse</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[eclipse]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>391499</wp:term_id>
  <wp:category_nicename>egrep</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[egrep]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>3008450</wp:term_id>
  <wp:category_nicename>elapsed-time</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[elapsed time]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>97021</wp:term_id>
  <wp:category_nicename>esb</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[ESB]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>563381</wp:term_id>
  <wp:category_nicename>exception</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Exception]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>45</wp:term_id>
  <wp:category_nicename>firefox</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[firefox]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>6576203</wp:term_id>
  <wp:category_nicename>fork-join</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[fork join]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>23417522</wp:term_id>
  <wp:category_nicename>forkjoin</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[ForkJoin]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>105070222</wp:term_id>
  <wp:category_nicename>forkjoinpool</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[ForkJoinPool]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>74717692</wp:term_id>
  <wp:category_nicename>functional-interface</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[functional interface]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>1418072</wp:term_id>
  <wp:category_nicename>garbage-collector</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[garbage collector]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>4134</wp:term_id>
  <wp:category_nicename>gc</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[gc]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>209196</wp:term_id>
  <wp:category_nicename>git</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[git]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>5603054</wp:term_id>
  <wp:category_nicename>github</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[github]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>320746</wp:term_id>
  <wp:category_nicename>grep</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[grep]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>3874816</wp:term_id>
  <wp:category_nicename>group-by</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[group by]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>550095</wp:term_id>
  <wp:category_nicename>groupby</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[groupBy]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>410778901</wp:term_id>
  <wp:category_nicename>happens-before-guarantee</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[happens-before-guarantee]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>17907</wp:term_id>
  <wp:category_nicename>hibernate</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Hibernate]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>42733363</wp:term_id>
  <wp:category_nicename>intelij</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[intelij]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>114384</wp:term_id>
  <wp:category_nicename>intellij</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[intellij]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>461221</wp:term_id>
  <wp:category_nicename>interrupt</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[interrupt]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>1017</wp:term_id>
  <wp:category_nicename>java</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Java]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>406384976</wp:term_id>
  <wp:category_nicename>java-basisc</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[java basisc]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>17710662</wp:term_id>
  <wp:category_nicename>java-memory-model</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Java Memory Model]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>44066545</wp:term_id>
  <wp:category_nicename>java8</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[java8]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>1835690</wp:term_id>
  <wp:category_nicename>jconsole</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[jconsole]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>44411892</wp:term_id>
  <wp:category_nicename>jdk8</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[jdk8]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>102270</wp:term_id>
  <wp:category_nicename>junit</wp:category_nicename>
  <wp:category_parent>java</wp:category_parent>
  <wp:cat_name><![CDATA[Junit]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>38959511</wp:term_id>
  <wp:category_nicename>jvisualvm</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[jvisualvm]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>461295</wp:term_id>
  <wp:category_nicename>jvm</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[jvm]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>172054</wp:term_id>
  <wp:category_nicename>lambda</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[lambda]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>610</wp:term_id>
  <wp:category_nicename>linux</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Linux]]></wp:cat_name>
  <wp:category_description><![CDATA[Linux/UNIX administration, installation instructions, useful commands, tips ...]]></wp:category_description>
</wp:category>
<wp:category>
  <wp:term_id>2419702</wp:term_id>
  <wp:category_nicename>liskov</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Liskov]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>808</wp:term_id>
  <wp:category_nicename>mac</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[mac]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>47862</wp:term_id>
  <wp:category_nicename>maven</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[maven]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>35546411</wp:term_id>
  <wp:category_nicename>maven-assembly-plugin</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[maven-assembly-plugin]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>210</wp:term_id>
  <wp:category_nicename>me</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[me]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>1471</wp:term_id>
  <wp:category_nicename>memory</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[memory]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>106153150</wp:term_id>
  <wp:category_nicename>method-reference</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[method reference]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>32519</wp:term_id>
  <wp:category_nicename>monitor</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[monitor]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>111949</wp:term_id>
  <wp:category_nicename>monitoring</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[monitoring]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>2813143</wp:term_id>
  <wp:category_nicename>multi-threaded</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[multi-threaded]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>4419</wp:term_id>
  <wp:category_nicename>mysql</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[mysql]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>885642</wp:term_id>
  <wp:category_nicename>nohup</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[nohup]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>411830481</wp:term_id>
  <wp:category_nicename>number-of-threads-running</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[number of threads running]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>411259209</wp:term_id>
  <wp:category_nicename>number-of-threads-started</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[number of threads started]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>414887963</wp:term_id>
  <wp:category_nicename>operatingsystemmxbean</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[OperatingSystemMXBean]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>3766</wp:term_id>
  <wp:category_nicename>oracle</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Oracle]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>327612</wp:term_id>
  <wp:category_nicename>parallel</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[parallel]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>71707682</wp:term_id>
  <wp:category_nicename>parallel-stream</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[parallel stream]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>164433</wp:term_id>
  <wp:category_nicename>parallelism</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[parallelism]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>414887966</wp:term_id>
  <wp:category_nicename>process-cpu-load</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[process cpu load]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>9628</wp:term_id>
  <wp:category_nicename>proxy</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[proxy]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>412679780</wp:term_id>
  <wp:category_nicename>ps-marksweep</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[PS MarkSweep]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>412679783</wp:term_id>
  <wp:category_nicename>ps-scavenge</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[PS Scavenge]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>8403515</wp:term_id>
  <wp:category_nicename>race-condition</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[race condition]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>18240</wp:term_id>
  <wp:category_nicename>reduce</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[reduce]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>54025</wp:term_id>
  <wp:category_nicename>regex</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[regex]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>6291</wp:term_id>
  <wp:category_nicename>remember</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[remember]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>27813</wp:term_id>
  <wp:category_nicename>run</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[run]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>312256</wp:term_id>
  <wp:category_nicename>scala</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[scala]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>37293</wp:term_id>
  <wp:category_nicename>sed</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[sed]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>11271</wp:term_id>
  <wp:category_nicename>soa</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[SOA]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>9486</wp:term_id>
  <wp:category_nicename>spring</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[spring]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>27884023</wp:term_id>
  <wp:category_nicename>spring-beans</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[spring-beans]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>115393</wp:term_id>
  <wp:category_nicename>springframework</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Springframework]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>49320</wp:term_id>
  <wp:category_nicename>ssh</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[ssh]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>28055</wp:term_id>
  <wp:category_nicename>start</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[start]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>94039</wp:term_id>
  <wp:category_nicename>stream</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[stream]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>164684</wp:term_id>
  <wp:category_nicename>svn</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[svn]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>141950</wp:term_id>
  <wp:category_nicename>synchronization</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[synchronization]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>1083147</wp:term_id>
  <wp:category_nicename>synchronized</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[synchronized]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>740</wp:term_id>
  <wp:category_nicename>system</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[system]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>414887971</wp:term_id>
  <wp:category_nicename>system-cpu-load</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[system cpu load]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>1663</wp:term_id>
  <wp:category_nicename>templates</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[templates]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>23851</wp:term_id>
  <wp:category_nicename>text-editor</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[text editor]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>9396160</wp:term_id>
  <wp:category_nicename>thread-dump</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[thread dump]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>4732780</wp:term_id>
  <wp:category_nicename>thread-pool</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[thread pool]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>4355412</wp:term_id>
  <wp:category_nicename>threadpool</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[threadpool]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>57505</wp:term_id>
  <wp:category_nicename>threads</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[threads]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>255</wp:term_id>
  <wp:category_nicename>ubuntu</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[ubuntu]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>1</wp:term_id>
  <wp:category_nicename>uncategorized</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>9203</wp:term_id>
  <wp:category_nicename>unix</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[unix]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>9139826</wp:term_id>
  <wp:category_nicename>user-time</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[user time]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>200772</wp:term_id>
  <wp:category_nicename>volatile</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[volatile]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>800</wp:term_id>
  <wp:category_nicename>windows</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[windows]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>6852</wp:term_id>
  <wp:category_nicename>xml</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[xml]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>326023</wp:term_id>
  <wp:category_nicename>xsd</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[xsd]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>214618</wp:term_id>
  <wp:category_nicename>concurrency</wp:category_nicename>
  <wp:category_parent>java</wp:category_parent>
  <wp:cat_name><![CDATA[Concurrency]]></wp:cat_name>
</wp:category>
<wp:tag>
  <wp:term_id>536424</wp:term_id>
  <wp:tag_slug>11g</wp:tag_slug>
  <wp:tag_name><![CDATA[11g]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>178443</wp:term_id>
  <wp:tag_slug>annotation</wp:tag_slug>
  <wp:tag_name><![CDATA[annotation]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>70930481</wp:term_id>
  <wp:tag_slug>apache-avro</wp:tag_slug>
  <wp:tag_name><![CDATA[apache-avro]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1871262</wp:term_id>
  <wp:tag_slug>append</wp:tag_slug>
  <wp:tag_name><![CDATA[append]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1277566</wp:term_id>
  <wp:tag_slug>assume</wp:tag_slug>
  <wp:tag_name><![CDATA[Assume]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>137393839</wp:term_id>
  <wp:tag_slug>atomicboolean</wp:tag_slug>
  <wp:tag_name><![CDATA[AtomicBoolean]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>237866161</wp:term_id>
  <wp:tag_slug>atomiclong</wp:tag_slug>
  <wp:tag_name><![CDATA[AtomicLong]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>828530</wp:term_id>
  <wp:tag_slug>avro</wp:tag_slug>
  <wp:tag_name><![CDATA[avro]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>5469</wp:term_id>
  <wp:tag_slug>backup</wp:tag_slug>
  <wp:tag_name><![CDATA[backup]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2674</wp:term_id>
  <wp:tag_slug>bash</wp:tag_slug>
  <wp:tag_name><![CDATA[bash]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>372436505</wp:term_id>
  <wp:tag_slug>bash-nohup</wp:tag_slug>
  <wp:tag_name><![CDATA[bash nohup]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7711196</wp:term_id>
  <wp:tag_slug>callable</wp:tag_slug>
  <wp:tag_name><![CDATA[Callable]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>211721</wp:term_id>
  <wp:tag_slug>case</wp:tag_slug>
  <wp:tag_name><![CDATA[case]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>6527763</wp:term_id>
  <wp:tag_slug>case-insensitive</wp:tag_slug>
  <wp:tag_name><![CDATA[case insensitive]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>44346740</wp:term_id>
  <wp:tag_slug>changing-password</wp:tag_slug>
  <wp:tag_name><![CDATA[changing password]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1484672</wp:term_id>
  <wp:tag_slug>checkstyle</wp:tag_slug>
  <wp:tag_name><![CDATA[checkstyle]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>49904</wp:term_id>
  <wp:tag_slug>choice</wp:tag_slug>
  <wp:tag_name><![CDATA[choice]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>17966630</wp:term_id>
  <wp:tag_slug>cloudera</wp:tag_slug>
  <wp:tag_name><![CDATA[cloudera]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>12763</wp:term_id>
  <wp:tag_slug>collections</wp:tag_slug>
  <wp:tag_name><![CDATA[collections]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>504913215</wp:term_id>
  <wp:tag_slug>completable-future</wp:tag_slug>
  <wp:tag_name><![CDATA[completable future]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>273817858</wp:term_id>
  <wp:tag_slug>completablefuture</wp:tag_slug>
  <wp:tag_name><![CDATA[CompletableFuture]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>23910571</wp:term_id>
  <wp:tag_slug>completionservice</wp:tag_slug>
  <wp:tag_name><![CDATA[CompletionService]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>42182797</wp:term_id>
  <wp:tag_slug>concurrency-2</wp:tag_slug>
  <wp:tag_name><![CDATA[concurrency]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>45809</wp:term_id>
  <wp:tag_slug>configuration</wp:tag_slug>
  <wp:tag_name><![CDATA[configuration]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>106153152</wp:term_id>
  <wp:tag_slug>constructor-reference</wp:tag_slug>
  <wp:tag_name><![CDATA[constructor reference]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>639907</wp:term_id>
  <wp:tag_slug>count</wp:tag_slug>
  <wp:tag_name><![CDATA[count]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>35659</wp:term_id>
  <wp:tag_slug>cpu</wp:tag_slug>
  <wp:tag_name><![CDATA[CPU]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1094307</wp:term_id>
  <wp:tag_slug>cpu-load</wp:tag_slug>
  <wp:tag_name><![CDATA[cpu load]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>15545412</wp:term_id>
  <wp:tag_slug>cpu-time</wp:tag_slug>
  <wp:tag_name><![CDATA[cpu time]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>251096</wp:term_id>
  <wp:tag_slug>curl</wp:tag_slug>
  <wp:tag_name><![CDATA[curl]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>59540</wp:term_id>
  <wp:tag_slug>custom</wp:tag_slug>
  <wp:tag_name><![CDATA[custom]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>24433</wp:term_id>
  <wp:tag_slug>cygwin</wp:tag_slug>
  <wp:tag_name><![CDATA[cygwin]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>6113879</wp:term_id>
  <wp:tag_slug>data-partitioning</wp:tag_slug>
  <wp:tag_name><![CDATA[data partitioning]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>662</wp:term_id>
  <wp:tag_slug>default</wp:tag_slug>
  <wp:tag_name><![CDATA[default]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>4504191</wp:term_id>
  <wp:tag_slug>docker</wp:tag_slug>
  <wp:tag_name><![CDATA[docker]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2592185</wp:term_id>
  <wp:tag_slug>eager-loading</wp:tag_slug>
  <wp:tag_name><![CDATA[eager loading]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>18466</wp:term_id>
  <wp:tag_slug>eclipse</wp:tag_slug>
  <wp:tag_name><![CDATA[eclipse]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>422815008</wp:term_id>
  <wp:tag_slug>eclipse-intelij</wp:tag_slug>
  <wp:tag_name><![CDATA[eclipse intelij]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>391499</wp:term_id>
  <wp:tag_slug>egrep</wp:tag_slug>
  <wp:tag_name><![CDATA[egrep]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>3008450</wp:term_id>
  <wp:tag_slug>elapsed-time</wp:tag_slug>
  <wp:tag_name><![CDATA[elapsed time]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>563381</wp:term_id>
  <wp:tag_slug>exception</wp:tag_slug>
  <wp:tag_name><![CDATA[Exception]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>75195523</wp:term_id>
  <wp:tag_slug>executioncompletionservice</wp:tag_slug>
  <wp:tag_name><![CDATA[ExecutionCompletionService]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7711197</wp:term_id>
  <wp:tag_slug>executorservice</wp:tag_slug>
  <wp:tag_name><![CDATA[ExecutorService]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2100741</wp:term_id>
  <wp:tag_slug>factorial</wp:tag_slug>
  <wp:tag_name><![CDATA[factorial]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>213321</wp:term_id>
  <wp:tag_slug>filter</wp:tag_slug>
  <wp:tag_name><![CDATA[filter]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>18317147</wp:term_id>
  <wp:tag_slug>findany</wp:tag_slug>
  <wp:tag_name><![CDATA[findAny]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>6576203</wp:term_id>
  <wp:tag_slug>fork-join</wp:tag_slug>
  <wp:tag_name><![CDATA[fork join]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>23417522</wp:term_id>
  <wp:tag_slug>forkjoin</wp:tag_slug>
  <wp:tag_name><![CDATA[ForkJoin]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>105070222</wp:term_id>
  <wp:tag_slug>forkjoinpool</wp:tag_slug>
  <wp:tag_name><![CDATA[ForkJoinPool]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>74717692</wp:term_id>
  <wp:tag_slug>functional-interface</wp:tag_slug>
  <wp:tag_name><![CDATA[functional interface]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1418072</wp:term_id>
  <wp:tag_slug>garbage-collector</wp:tag_slug>
  <wp:tag_name><![CDATA[garbage collector]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>4134</wp:term_id>
  <wp:tag_slug>gc</wp:tag_slug>
  <wp:tag_name><![CDATA[gc]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>209196</wp:term_id>
  <wp:tag_slug>git</wp:tag_slug>
  <wp:tag_name><![CDATA[git]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>27407308</wp:term_id>
  <wp:tag_slug>git-checkout</wp:tag_slug>
  <wp:tag_name><![CDATA[git checkout]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>463322849</wp:term_id>
  <wp:tag_slug>git-common-ancestor</wp:tag_slug>
  <wp:tag_name><![CDATA[git common ancestor]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>461920586</wp:term_id>
  <wp:tag_slug>git-interactive-rebase-with-squash</wp:tag_slug>
  <wp:tag_name><![CDATA[git interactive rebase with squash]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>15875752</wp:term_id>
  <wp:tag_slug>git-log</wp:tag_slug>
  <wp:tag_name><![CDATA[git log]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>8384805</wp:term_id>
  <wp:tag_slug>git-merge</wp:tag_slug>
  <wp:tag_name><![CDATA[git merge]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>463130738</wp:term_id>
  <wp:tag_slug>git-merge-fast-forward</wp:tag_slug>
  <wp:tag_name><![CDATA[git merge fast-forward]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>463188773</wp:term_id>
  <wp:tag_slug>git-merge-squash</wp:tag_slug>
  <wp:tag_name><![CDATA[git merge squash]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>26359908</wp:term_id>
  <wp:tag_slug>git-pull</wp:tag_slug>
  <wp:tag_name><![CDATA[git pull]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>162326493</wp:term_id>
  <wp:tag_slug>git-pull-rebase</wp:tag_slug>
  <wp:tag_name><![CDATA[git pull rebase]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>452643417</wp:term_id>
  <wp:tag_slug>git-pull-request</wp:tag_slug>
  <wp:tag_name><![CDATA[git pull request]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>452643408</wp:term_id>
  <wp:tag_slug>git-rebase-2</wp:tag_slug>
  <wp:tag_name><![CDATA[git rebase]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>465002496</wp:term_id>
  <wp:tag_slug>git-rebase-vs-merge</wp:tag_slug>
  <wp:tag_name><![CDATA[git rebase vs merge]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>464779364</wp:term_id>
  <wp:tag_slug>git-rebase-workflow-for-team</wp:tag_slug>
  <wp:tag_name><![CDATA[git rebase workflow for team]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>30307469</wp:term_id>
  <wp:tag_slug>git-reset</wp:tag_slug>
  <wp:tag_name><![CDATA[git reset]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>236425364</wp:term_id>
  <wp:tag_slug>git-reset-hard</wp:tag_slug>
  <wp:tag_name><![CDATA[git reset --hard]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>462007674</wp:term_id>
  <wp:tag_slug>git-squash-commits</wp:tag_slug>
  <wp:tag_name><![CDATA[git squash commits]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>56697929</wp:term_id>
  <wp:tag_slug>git-stash</wp:tag_slug>
  <wp:tag_name><![CDATA[git stash]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>465054124</wp:term_id>
  <wp:tag_slug>git-unintentional-merge</wp:tag_slug>
  <wp:tag_name><![CDATA[git unintentional merge]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>465071273</wp:term_id>
  <wp:tag_slug>git-unintentional-merge-commit</wp:tag_slug>
  <wp:tag_name><![CDATA[git unintentional merge commit]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>180114410</wp:term_id>
  <wp:tag_slug>git-vs-svn</wp:tag_slug>
  <wp:tag_name><![CDATA[git vs svn]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>177900103</wp:term_id>
  <wp:tag_slug>git-workflow</wp:tag_slug>
  <wp:tag_name><![CDATA[git workflow]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>446760830</wp:term_id>
  <wp:tag_slug>git-merge-2</wp:tag_slug>
  <wp:tag_name><![CDATA[git-merge]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>8384806</wp:term_id>
  <wp:tag_slug>git-rebase</wp:tag_slug>
  <wp:tag_name><![CDATA[git-rebase]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>453091429</wp:term_id>
  <wp:tag_slug>github-password</wp:tag_slug>
  <wp:tag_name><![CDATA[GitHub password]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>320746</wp:term_id>
  <wp:tag_slug>grep</wp:tag_slug>
  <wp:tag_name><![CDATA[grep]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>3874816</wp:term_id>
  <wp:tag_slug>group-by</wp:tag_slug>
  <wp:tag_name><![CDATA[group by]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>550095</wp:term_id>
  <wp:tag_slug>groupby</wp:tag_slug>
  <wp:tag_name><![CDATA[groupBy]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>410778902</wp:term_id>
  <wp:tag_slug>happens-before-guarantee-2</wp:tag_slug>
  <wp:tag_name><![CDATA[happens-before guarantee]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>17907</wp:term_id>
  <wp:tag_slug>hibernate</wp:tag_slug>
  <wp:tag_name><![CDATA[Hibernate]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1205751</wp:term_id>
  <wp:tag_slug>hive</wp:tag_slug>
  <wp:tag_name><![CDATA[hive]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>422815461</wp:term_id>
  <wp:tag_slug>ide-comparizon</wp:tag_slug>
  <wp:tag_name><![CDATA[ide comparizon]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>42733363</wp:term_id>
  <wp:tag_slug>intelij</wp:tag_slug>
  <wp:tag_name><![CDATA[intelij]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>114384</wp:term_id>
  <wp:tag_slug>intellij</wp:tag_slug>
  <wp:tag_name><![CDATA[intellij]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>461221</wp:term_id>
  <wp:tag_slug>interrupt</wp:tag_slug>
  <wp:tag_name><![CDATA[interrupt]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>244873611</wp:term_id>
  <wp:tag_slug>intstream</wp:tag_slug>
  <wp:tag_name><![CDATA[IntStream]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>168756482</wp:term_id>
  <wp:tag_slug>isinterrupted</wp:tag_slug>
  <wp:tag_name><![CDATA[isInterrupted]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2549795</wp:term_id>
  <wp:tag_slug>java-2</wp:tag_slug>
  <wp:tag_name><![CDATA[java]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1406368</wp:term_id>
  <wp:tag_slug>java-basics</wp:tag_slug>
  <wp:tag_name><![CDATA[java basics]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>17710662</wp:term_id>
  <wp:tag_slug>java-memory-model</wp:tag_slug>
  <wp:tag_name><![CDATA[Java Memory Model]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>44066545</wp:term_id>
  <wp:tag_slug>java8</wp:tag_slug>
  <wp:tag_name><![CDATA[java8]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1835690</wp:term_id>
  <wp:tag_slug>jconsole</wp:tag_slug>
  <wp:tag_name><![CDATA[jconsole]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>44411892</wp:term_id>
  <wp:tag_slug>jdk8</wp:tag_slug>
  <wp:tag_name><![CDATA[jdk8]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>37812075</wp:term_id>
  <wp:tag_slug>junit-2</wp:tag_slug>
  <wp:tag_name><![CDATA[junit]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>38959511</wp:term_id>
  <wp:tag_slug>jvisualvm</wp:tag_slug>
  <wp:tag_name><![CDATA[jvisualvm]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>461295</wp:term_id>
  <wp:tag_slug>jvm</wp:tag_slug>
  <wp:tag_name><![CDATA[jvm]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>3815160</wp:term_id>
  <wp:tag_slug>keymap</wp:tag_slug>
  <wp:tag_name><![CDATA[keymap]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>172054</wp:term_id>
  <wp:tag_slug>lambda</wp:tag_slug>
  <wp:tag_name><![CDATA[lambda]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2592186</wp:term_id>
  <wp:tag_slug>lazy-loading</wp:tag_slug>
  <wp:tag_name><![CDATA[lazy loading]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>34922710</wp:term_id>
  <wp:tag_slug>linux-2</wp:tag_slug>
  <wp:tag_name><![CDATA[linux]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2419702</wp:term_id>
  <wp:tag_slug>liskov</wp:tag_slug>
  <wp:tag_name><![CDATA[Liskov]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>808</wp:term_id>
  <wp:tag_slug>mac</wp:tag_slug>
  <wp:tag_name><![CDATA[mac]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>40477</wp:term_id>
  <wp:tag_slug>map</wp:tag_slug>
  <wp:tag_name><![CDATA[map]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>35546411</wp:term_id>
  <wp:tag_slug>maven-assembly-plugin</wp:tag_slug>
  <wp:tag_name><![CDATA[maven-assembly-plugin]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7751034</wp:term_id>
  <wp:tag_slug>max-value</wp:tag_slug>
  <wp:tag_name><![CDATA[max value]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>210</wp:term_id>
  <wp:tag_slug>me</wp:tag_slug>
  <wp:tag_name><![CDATA[me]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1471</wp:term_id>
  <wp:tag_slug>memory</wp:tag_slug>
  <wp:tag_name><![CDATA[memory]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>106153150</wp:term_id>
  <wp:tag_slug>method-reference</wp:tag_slug>
  <wp:tag_name><![CDATA[method reference]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>140512293</wp:term_id>
  <wp:tag_slug>min-value</wp:tag_slug>
  <wp:tag_name><![CDATA[min value]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>32519</wp:term_id>
  <wp:tag_slug>monitor</wp:tag_slug>
  <wp:tag_name><![CDATA[monitor]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>111949</wp:term_id>
  <wp:tag_slug>monitoring</wp:tag_slug>
  <wp:tag_name><![CDATA[monitoring]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>578837485</wp:term_id>
  <wp:tag_slug>msck-repair-table</wp:tag_slug>
  <wp:tag_name><![CDATA[msck repair table]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2813143</wp:term_id>
  <wp:tag_slug>multi-threaded</wp:tag_slug>
  <wp:tag_name><![CDATA[multi-threaded]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>57118580</wp:term_id>
  <wp:tag_slug>n1-selects</wp:tag_slug>
  <wp:tag_name><![CDATA[n+1 selects]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>204754</wp:term_id>
  <wp:tag_slug>notify</wp:tag_slug>
  <wp:tag_name><![CDATA[notify]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>411830481</wp:term_id>
  <wp:tag_slug>number-of-threads-running</wp:tag_slug>
  <wp:tag_name><![CDATA[number of threads running]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>411259209</wp:term_id>
  <wp:tag_slug>number-of-threads-started</wp:tag_slug>
  <wp:tag_name><![CDATA[number of threads started]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>414887963</wp:term_id>
  <wp:tag_slug>operatingsystemmxbean</wp:tag_slug>
  <wp:tag_name><![CDATA[OperatingSystemMXBean]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>843149</wp:term_id>
  <wp:tag_slug>optional</wp:tag_slug>
  <wp:tag_name><![CDATA[Optional]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>10650591</wp:term_id>
  <wp:tag_slug>ora-12514</wp:tag_slug>
  <wp:tag_name><![CDATA[ORA-12514]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>3766</wp:term_id>
  <wp:tag_slug>oracle</wp:tag_slug>
  <wp:tag_name><![CDATA[Oracle]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>16988468</wp:term_id>
  <wp:tag_slug>oracle-express-edition</wp:tag_slug>
  <wp:tag_name><![CDATA[Oracle Express Edition]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1172302</wp:term_id>
  <wp:tag_slug>oracle-xe</wp:tag_slug>
  <wp:tag_name><![CDATA[Oracle XE]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>529047655</wp:term_id>
  <wp:tag_slug>oracleservicexe</wp:tag_slug>
  <wp:tag_name><![CDATA[OracleServiceXE]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>529047657</wp:term_id>
  <wp:tag_slug>oraclexetnslistener</wp:tag_slug>
  <wp:tag_name><![CDATA[OracleXETNSListener]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>28235579</wp:term_id>
  <wp:tag_slug>orelse</wp:tag_slug>
  <wp:tag_name><![CDATA[orElse]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1902</wp:term_id>
  <wp:tag_slug>osx</wp:tag_slug>
  <wp:tag_name><![CDATA[osx]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>327612</wp:term_id>
  <wp:tag_slug>parallel</wp:tag_slug>
  <wp:tag_name><![CDATA[parallel]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>71707682</wp:term_id>
  <wp:tag_slug>parallel-stream</wp:tag_slug>
  <wp:tag_name><![CDATA[parallel stream]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>164433</wp:term_id>
  <wp:tag_slug>parallelism</wp:tag_slug>
  <wp:tag_name><![CDATA[parallelism]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>245123</wp:term_id>
  <wp:tag_slug>parts</wp:tag_slug>
  <wp:tag_name><![CDATA[parts]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1285258</wp:term_id>
  <wp:tag_slug>passwd</wp:tag_slug>
  <wp:tag_name><![CDATA[passwd]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>37471</wp:term_id>
  <wp:tag_slug>password</wp:tag_slug>
  <wp:tag_name><![CDATA[password]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>40208</wp:term_id>
  <wp:tag_slug>pattern</wp:tag_slug>
  <wp:tag_name><![CDATA[pattern]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>855164</wp:term_id>
  <wp:tag_slug>port-forwarding</wp:tag_slug>
  <wp:tag_name><![CDATA[port forwarding]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>414887966</wp:term_id>
  <wp:tag_slug>process-cpu-load</wp:tag_slug>
  <wp:tag_name><![CDATA[process cpu load]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>414996162</wp:term_id>
  <wp:tag_slug>property-default-value</wp:tag_slug>
  <wp:tag_name><![CDATA[property default value]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>9628</wp:term_id>
  <wp:tag_slug>proxy</wp:tag_slug>
  <wp:tag_name><![CDATA[proxy]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>412679780</wp:term_id>
  <wp:tag_slug>ps-marksweep</wp:tag_slug>
  <wp:tag_name><![CDATA[PS MarkSweep]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>412679783</wp:term_id>
  <wp:tag_slug>ps-scavenge</wp:tag_slug>
  <wp:tag_name><![CDATA[PS Scavenge]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1431644</wp:term_id>
  <wp:tag_slug>quickstart</wp:tag_slug>
  <wp:tag_name><![CDATA[quickstart]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>8403515</wp:term_id>
  <wp:tag_slug>race-condition</wp:tag_slug>
  <wp:tag_name><![CDATA[race condition]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>426624</wp:term_id>
  <wp:tag_slug>recursion</wp:tag_slug>
  <wp:tag_name><![CDATA[recursion]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>18240</wp:term_id>
  <wp:tag_slug>reduce</wp:tag_slug>
  <wp:tag_name><![CDATA[reduce]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>589051567</wp:term_id>
  <wp:tag_slug>remap-winkey-windows-key-to-ctrlkey-ctrl-key</wp:tag_slug>
  <wp:tag_name><![CDATA[remap winkey windows key to ctrlkey ctrl key]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>6291</wp:term_id>
  <wp:tag_slug>remember</wp:tag_slug>
  <wp:tag_name><![CDATA[remember]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1298272</wp:term_id>
  <wp:tag_slug>replace</wp:tag_slug>
  <wp:tag_name><![CDATA[replace]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>280010</wp:term_id>
  <wp:tag_slug>rsync</wp:tag_slug>
  <wp:tag_name><![CDATA[rsync]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>27813</wp:term_id>
  <wp:tag_slug>run</wp:tag_slug>
  <wp:tag_name><![CDATA[run]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>312256</wp:term_id>
  <wp:tag_slug>scala</wp:tag_slug>
  <wp:tag_name><![CDATA[scala]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>778497</wp:term_id>
  <wp:tag_slug>schema</wp:tag_slug>
  <wp:tag_name><![CDATA[schema]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>37293</wp:term_id>
  <wp:tag_slug>sed</wp:tag_slug>
  <wp:tag_name><![CDATA[sed]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>234468</wp:term_id>
  <wp:tag_slug>sequence</wp:tag_slug>
  <wp:tag_name><![CDATA[sequence]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>18068</wp:term_id>
  <wp:tag_slug>shortcuts</wp:tag_slug>
  <wp:tag_name><![CDATA[shortcuts]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>11496</wp:term_id>
  <wp:tag_slug>spel</wp:tag_slug>
  <wp:tag_name><![CDATA[SpEL]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>9486</wp:term_id>
  <wp:tag_slug>spring</wp:tag_slug>
  <wp:tag_name><![CDATA[spring]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>414996158</wp:term_id>
  <wp:tag_slug>spring-expression-lanuguage</wp:tag_slug>
  <wp:tag_name><![CDATA[spring expression lanuguage]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>27884023</wp:term_id>
  <wp:tag_slug>spring-beans</wp:tag_slug>
  <wp:tag_name><![CDATA[spring-beans]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>49320</wp:term_id>
  <wp:tag_slug>ssh</wp:tag_slug>
  <wp:tag_name><![CDATA[ssh]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>28055</wp:term_id>
  <wp:tag_slug>start</wp:tag_slug>
  <wp:tag_name><![CDATA[start]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>94039</wp:term_id>
  <wp:tag_slug>stream</wp:tag_slug>
  <wp:tag_name><![CDATA[stream]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1687404</wp:term_id>
  <wp:tag_slug>substring</wp:tag_slug>
  <wp:tag_name><![CDATA[substring]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>164684</wp:term_id>
  <wp:tag_slug>svn</wp:tag_slug>
  <wp:tag_name><![CDATA[svn]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1083147</wp:term_id>
  <wp:tag_slug>synchronized</wp:tag_slug>
  <wp:tag_name><![CDATA[synchronized]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>740</wp:term_id>
  <wp:tag_slug>system</wp:tag_slug>
  <wp:tag_name><![CDATA[system]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>414887971</wp:term_id>
  <wp:tag_slug>system-cpu-load</wp:tag_slug>
  <wp:tag_name><![CDATA[system cpu load]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>21209044</wp:term_id>
  <wp:tag_slug>tail-recursion</wp:tag_slug>
  <wp:tag_name><![CDATA[tail recursion]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1663</wp:term_id>
  <wp:tag_slug>templates</wp:tag_slug>
  <wp:tag_name><![CDATA[templates]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>12932</wp:term_id>
  <wp:tag_slug>thread</wp:tag_slug>
  <wp:tag_name><![CDATA[thread]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>9396160</wp:term_id>
  <wp:tag_slug>thread-dump</wp:tag_slug>
  <wp:tag_name><![CDATA[thread dump]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>4732780</wp:term_id>
  <wp:tag_slug>thread-pool</wp:tag_slug>
  <wp:tag_name><![CDATA[thread pool]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>4355412</wp:term_id>
  <wp:tag_slug>threadpool</wp:tag_slug>
  <wp:tag_name><![CDATA[threadpool]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>57505</wp:term_id>
  <wp:tag_slug>threads</wp:tag_slug>
  <wp:tag_name><![CDATA[threads]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>25910</wp:term_id>
  <wp:tag_slug>top</wp:tag_slug>
  <wp:tag_name><![CDATA[top]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>29990909</wp:term_id>
  <wp:tag_slug>tortoisegit</wp:tag_slug>
  <wp:tag_name><![CDATA[TortoiseGit]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>255</wp:term_id>
  <wp:tag_slug>ubuntu</wp:tag_slug>
  <wp:tag_name><![CDATA[ubuntu]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>9203</wp:term_id>
  <wp:tag_slug>unix</wp:tag_slug>
  <wp:tag_name><![CDATA[unix]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>9139826</wp:term_id>
  <wp:tag_slug>user-time</wp:tag_slug>
  <wp:tag_name><![CDATA[user time]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>53079</wp:term_id>
  <wp:tag_slug>validation</wp:tag_slug>
  <wp:tag_name><![CDATA[validation]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>989685</wp:term_id>
  <wp:tag_slug>virtualbox</wp:tag_slug>
  <wp:tag_name><![CDATA[virtualbox]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>200772</wp:term_id>
  <wp:tag_slug>volatile</wp:tag_slug>
  <wp:tag_name><![CDATA[volatile]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>448096</wp:term_id>
  <wp:tag_slug>wait</wp:tag_slug>
  <wp:tag_name><![CDATA[wait]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>800</wp:term_id>
  <wp:tag_slug>windows</wp:tag_slug>
  <wp:tag_name><![CDATA[windows]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>4822</wp:term_id>
  <wp:tag_slug>words</wp:tag_slug>
  <wp:tag_name><![CDATA[words]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>6852</wp:term_id>
  <wp:tag_slug>xml</wp:tag_slug>
  <wp:tag_name><![CDATA[xml]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>326023</wp:term_id>
  <wp:tag_slug>xsd</wp:tag_slug>
  <wp:tag_name><![CDATA[xsd]]></wp:tag_name>
</wp:tag>
<generator>http://wordpress.com/</generator>
<image>
		<url>https://s2.wp.com/i/buttonw-com.png</url>
		<title>Bartosz Wieczorek&#039;s blog</title>
		<link>https://bmwieczorek.wordpress.com</link>
	</image>
	<item>
  <title>About me</title>
  <link>https://bmwieczorek.wordpress.com/about/</link>
  <pubDate>Thu, 10 Jan 2008 15:18:30 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false"/>
  <description/>
  <content:encoded><![CDATA[I am Java, J2EE and SQL developer &amp; Linux fan :-)

More about me you can find on my home page
<a title="www.bartoszwieczorek.eu/cv" href="http://bartoszwieczorek.eu/cv">http://bartoszwieczorek.eu/cv</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2</wp:post_id>
  <wp:post_date>2008-01-10 15:18:30</wp:post_date>
  <wp:post_date_gmt>2008-01-10 15:18:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>about</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>md5sum</title>
  <link>https://bmwieczorek.wordpress.com/2008/01/10/md5-sum/</link>
  <pubDate>Thu, 10 Jan 2008 15:57:55 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/2008/01/10/md5-sum/</guid>
  <description/>
  <content:encoded><![CDATA[#calculate md5 check sum of a file and print it out to stdout
<b>md5sum file</b>
06187709687154b49de400a8b0d42059 file

#calculate md5 check sums of all files in a  current folder and save them in text file for future verification
<b>md5sum </b><b>*  &gt; md5sum.txt</b>
<div align="left"># verify the check sums for the files in a current foldern
<b>md5sum </b><b>-c md5sum.txt</b>
<div align="left">file1 OK</div>
<div align="left">file2 OK</div>
</div>
<div align="left"></div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3</wp:post_id>
  <wp:post_date>2008-01-10 15:57:55</wp:post_date>
  <wp:post_date_gmt>2008-01-10 15:57:55</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>md5-sum</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
</item>
<item>
  <title>procmail</title>
  <link>https://bmwieczorek.wordpress.com/2008/01/12/procmail/</link>
  <pubDate>Sat, 12 Jan 2008 19:04:05 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/2008/01/12/procmail/</guid>
  <description/>
  <content:encoded><![CDATA[.procmailrc:

#cannot forward an alias to an alias

:0 c
* ^(To:|Cc:|Bcc:|Resent-To:).*(webmaster@xxx\.org|dakrak@student)
! xxx@yyy.pl

* ^(To:|Cc:|Bcc:|Resent-To:).*(rajd|szef)@xxx\.org
! xxx1@yyy.pl
! xxx2@yyy.pl

#delete not matched
: 0
/dev/null]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>4</wp:post_id>
  <wp:post_date>2008-01-12 19:04:05</wp:post_date>
  <wp:post_date_gmt>2008-01-12 19:04:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>procmail</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
</item>
<item>
  <title>run java program with libs from cmd line in bash</title>
  <link>https://bmwieczorek.wordpress.com/2008/01/14/run-java-program-with-libs-from-cmd-line-in-bash/</link>
  <pubDate>Mon, 14 Jan 2008 14:34:45 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/2008/01/14/run-java-program-with-libs-from-cmd-line-in-bash/</guid>
  <description/>
  <content:encoded><![CDATA[#resolve directory absolute path
scriptname=$(echo $0 | sed s/.*\\///g)

if [ "$0" = "./$scriptname" ];then
abspath=$(echo `pwd`/$0 | sed "s/\/$scriptname//g" | sed 's/\/\.//g')
else
abspath=$(echo $0 | sed "s/\/$scriptname//g")
fi

#find java libraries and separate them with colon
jars=$(find $abspath/lib/ -name \*.jar | xargs echo | sed s/\ /:/g)

#run the main class in JavaClas in xxx.yyy.zzz package
java -classpath $jars xxx.yyy.zzz.JavaClass]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>5</wp:post_id>
  <wp:post_date>2008-01-14 14:34:45</wp:post_date>
  <wp:post_date_gmt>2008-01-14 14:34:45</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>run-java-program-with-libs-from-cmd-line-in-bash</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <wp:comment>
    <wp:comment_id>11</wp:comment_id>
    <wp:comment_author><![CDATA[Robert]]></wp:comment_author>
    <wp:comment_author_email>robertmbugus@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bmwieczorek.wordpress.com/2008/01/14/run-java-program-with-libs-from-cmd-line-in-bash/</wp:comment_author_url>
    <wp:comment_author_IP>41.222.13.131</wp:comment_author_IP>
    <wp:comment_date>2008-03-20 08:15:43</wp:comment_date>
    <wp:comment_date_gmt>2008-03-20 08:15:43</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[fantastic]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2008-03-20 08:15:43</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>svn ignore multiple files and directories using cnd line</title>
  <link>https://bmwieczorek.wordpress.com/2008/01/15/svn-ignore-mutliple-files-and-directories-using-command-line/</link>
  <pubDate>Tue, 15 Jan 2008 16:06:06 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/2008/01/15/svn-ignore-mutliple-files-and-directories-using-command-line/</guid>
  <description/>
  <content:encoded><![CDATA[#before
svn st
?      eclipse-classes
?      .classpath
?      .project
?      target
?      .settings

#ignore all files and directiories in the current directory
svn propset svn:ignore '.*
&gt; target
&gt; eclipse-classes' .
property 'svn:ignore' set on '.'

#after, just commit the changes
svn st
M     .]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>6</wp:post_id>
  <wp:post_date>2008-01-15 16:06:06</wp:post_date>
  <wp:post_date_gmt>2008-01-15 16:06:06</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>svn-ignore-mutliple-files-and-directories-using-command-line</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="svn"><![CDATA[svn]]></category>
</item>
<item>
  <title>radio and TV mms streaming using totem</title>
  <link>https://bmwieczorek.wordpress.com/2008/01/21/radio-and-tv-mms-streaming-using-totem/</link>
  <pubDate>Mon, 21 Jan 2008 22:30:07 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/2008/01/21/radio-and-tv-mms-streaming-using-totem/</guid>
  <description/>
  <content:encoded><![CDATA[#install totem-xine rather that gstreamer
sudo apt-get install totem-xine

#update the apt sources list for Ubuntu gutsy (7.10) with medibuntu
wget http://www.medibuntu.org/sources.list.d/gutsy.list -O /etc/apt/sources.list.d/medibuntu.list

#add the medibuntu key
wget http://packages.medibuntu.org/medibuntu-key.gpg -O - | sudo apt-key add -

#update and install w32codecs
sudo apt-get update
sudo apt-get install w32codecs libdvdcss2]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>7</wp:post_id>
  <wp:post_date>2008-01-21 22:30:07</wp:post_date>
  <wp:post_date_gmt>2008-01-21 22:30:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>radio-and-tv-mms-streaming-using-totem</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <wp:comment>
    <wp:comment_id>23</wp:comment_id>
    <wp:comment_author><![CDATA[invittytob]]></wp:comment_author>
    <wp:comment_author_email>sweet0608@ua.fm</wp:comment_author_email>
    <wp:comment_author_url>http://www.imeem.com/people/UrLHU6j</wp:comment_author_url>
    <wp:comment_author_IP>189.83.231.89</wp:comment_author_IP>
    <wp:comment_date>2008-08-03 14:10:20</wp:comment_date>
    <wp:comment_date_gmt>2008-08-03 14:10:20</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thank you]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2008-08-03 14:10:20</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>sed examples</title>
  <link>https://bmwieczorek.wordpress.com/2008/02/26/sed-examples/</link>
  <pubDate>Tue, 26 Feb 2008 14:14:07 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=8</guid>
  <description/>
  <content:encoded><![CDATA[eg. 1.  we have lots of records like:

5173230|1947953|Łódz
5317879|2207629|Łomza

we want only the last column:

execute:
cat file | sed 's/.*|//g' (the same as cat file | sed s/.*|//g)

result:
Łódz
Łomza

e.g. 2, delete all files that are not added to svn.
before:
svn st
?      provider/mapdb.script
?      provider/mysql-clean.script

execute:
svn st | awk '{print $2}' | xargs rm

result:
svn st

(no files)

e.g. 3.
A pom.xml file has a line with contents:
&lt;version&gt;0.9&lt;\version&gt;
We want to get the value between the version tags:

execute:
cat pom.xml | grep version | head -1 | sed 's/.*&lt;version&gt;\(.*\)&lt;\version&gt;.*/\1/'

result:
0.9

e.g. 4
Parse ip address from the ifconfig output

before:
/sbin/ifconfig
eth0      Link encap:Ethernet  HWaddr 00:15:C5:F2:55:D8
inet addr:192.168.49.140  Bcast:192.168.49.255  Mask:255.255.255.0
inet6 addr: fe80::215:c5ff:fef2:55d8/64 Scope:Link

execute:
/sbin/ifconfig | grep Bcast | sed 's/.*addr:\([0-9\.]*\).*/\1/'

result:
192.168.49.140]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>8</wp:post_id>
  <wp:post_date>2008-02-26 14:14:07</wp:post_date>
  <wp:post_date_gmt>2008-02-26 14:14:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>sed-examples</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <category domain="category" nicename="svn"><![CDATA[svn]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>svn merge (within the same branch)</title>
  <link>https://bmwieczorek.wordpress.com/2008/03/10/svn-merge/</link>
  <pubDate>Mon, 10 Mar 2008 21:18:40 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=9</guid>
  <description/>
  <content:encoded><![CDATA[Let's say you work on a 'pom.xml' file that has been committed into svn at revision 22918. (0.22-SNAPSHOT)

Then you changed the pom.xml file and again committed at revision 22921. (0.222-SNAPSHOT)

Then you locally modified the pom.xml (0.2-SNAPSHOT) but you want to get the initial pom.xml (from revision 22918) and you want to check in this file:

svn merge -r HEAD:22918 pom.xml

then you get the conflict:

C    pom.xml

and the following files:

svn st

?      pom.xml.merge-left.r22921
?      pom.xml.merge-right.r22918
?      pom.xml.working
C      pom.xml

the pom.xml:

[...]

&lt;&lt;&lt;&lt;&lt;&lt;&lt; .working
&lt;version&gt;0.2-SNAPSHOT&lt;/version&gt;
=======
&lt;version&gt;0.22-SNAPSHOT&lt;/version&gt;
&gt;&gt;&gt;&gt;&gt;&gt;&gt; .merge-right.r22918

[...]

You correct the changes to have only :

&lt;version&gt;0.2-SNAPSHOT&lt;/version&gt;

save the pom.xml and tell svn that you resolved the conflict:

svn resolved

the commit the correct version

svn ci -m"proper 0.22-SNAPSHOT version"]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>9</wp:post_id>
  <wp:post_date>2008-03-10 21:18:40</wp:post_date>
  <wp:post_date_gmt>2008-03-10 21:18:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>svn-merge</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="svn"><![CDATA[svn]]></category>
</item>
<item>
  <title>svn merge from the release branch to the trunk</title>
  <link>https://bmwieczorek.wordpress.com/2008/03/10/svn-merge-from-the-branch-to-a-trunk/</link>
  <pubDate>Mon, 10 Mar 2008 22:15:46 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=10</guid>
  <description/>
  <content:encoded><![CDATA[Let's say we develop in trunk (main branch).We decide to make a 0.24 branch for the release:
<div align="left"><code>svn mkdir svn://hostname/repo/myproject/braches -m"create branch folder"</code></div>
<div align="left"><code>svn mkdir svn://hostname/repo/myproject/braches -m"create 0.24 branch"</code></div>
<div align="left"> <code>svn copy svn://hostname/repo/myproject/trunk svn://hostname/repo/myproject/branches/0.24/</code></div>
Now we make a fix in the branch, commit the fix and merge that back to the trunk:
<div align="left"><code>cd branch/0.24</code></div>
We need to get the revision at which the branch 0.24 was created:
<div align="left"><code>svn log --stop-on-copy</code></div>
<div align="left"><code>------------------------------------------------------------------------
r22929 | bawi | 2008-03-10 22:52:20 +0100 (Mon, 10 Mar 2008) | 1 line</code>copy for branch 0.24
------------------------------------------------------------------------</div>
We switch back to the trunk:
<div align="left"><code>svn switch svn://hostname/repo/myproject/trunk</code></div>
You can make sure that you are not in the trunk by:
<div align="left"> <code>svn info</code></div>
<div align="left"></div>
<div align="left"><code>[...]</code>
<code> Path: .</code>
<code> URL: svn://hostname/repo/myproject/trunk</code>
<code> [...]</code>
<code></code></div>
We merge all the changes from the moment of creating the branch (revision 22929) to latest revision (HEAD) from the branch to the trunk (we are now in the trunk):
<div align="left"><code>svn merge -r 22929:HEAD svn://hostname/repo/myproject/branches/0.24</code></div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>10</wp:post_id>
  <wp:post_date>2008-03-10 22:15:46</wp:post_date>
  <wp:post_date_gmt>2008-03-10 22:15:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>svn-merge-from-the-branch-to-a-trunk</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="svn"><![CDATA[svn]]></category>
</item>
<item>
  <title>bash - cut</title>
  <link>https://bmwieczorek.wordpress.com/2008/03/12/bash/</link>
  <pubDate>Wed, 12 Mar 2008 00:03:26 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=11</guid>
  <description/>
  <content:encoded><![CDATA[#CUT: get the second field, after the delimiter '='

echo a=1 | cut -d "=" -f 2

result 1

#evalute first condition, if true (means that $? is 0), then second is not evaluated (logical or). If file does not exist nor is executable, then exit

[ -x /usr/sbin/openvpn ] || exit  0]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>11</wp:post_id>
  <wp:post_date>2008-03-12 00:03:26</wp:post_date>
  <wp:post_date_gmt>2008-03-12 00:03:26</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>bash</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>archive svn modified files</title>
  <link>https://bmwieczorek.wordpress.com/2008/03/27/archive-svn-modified-files/</link>
  <pubDate>Thu, 27 Mar 2008 10:22:09 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=12</guid>
  <description/>
  <content:encoded><![CDATA[#archive  all svn modified filed
svn st | grep ^M | awk '{ print $2}' | xargs tar czf changed.tar.gz

#list contents of the archive
tar -tf changed.tar.gz]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>12</wp:post_id>
  <wp:post_date>2008-03-27 10:22:09</wp:post_date>
  <wp:post_date_gmt>2008-03-27 10:22:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>archive-svn-modified-files</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <category domain="category" nicename="svn"><![CDATA[svn]]></category>
</item>
<item>
  <title>Spring AOP 2.0 in a nutshell</title>
  <link>https://bmwieczorek.wordpress.com/2008/04/02/spring-aop-20-in-a-nutshell/</link>
  <pubDate>Wed, 02 Apr 2008 14:04:13 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=13</guid>
  <description/>
  <content:encoded><![CDATA[Theory

Addresses <i>cross-cutting concerns</i>, i.e. functionality that affects application in many points, e.g. logging, security, transaction managament - many methods have logging functionality applied.  Cross-cutting concerns can be modularized into special objects, called <i>aspects.</i> This functionality is defined in one place and you declaratively specify when and where it is used without changing the code of the classes (called <i>target</i>) for which you apply these new features. Let's say that the business logic is to call a method the sings a song and we want to intercept this method before it is envoked, after it is returned, when it throws an exception and and new feature at that moment of program execution. The <i>advice</i> defines when to intercept the method (before,after-returning, after-throwing, around (effectively first three altogether) and introduction) and what to do when it is intercepted, i.e. what an aspect does and when it does it. In the next step, we need to specify the method to which the interception is applied. We can define where in the code the advice should be applied by specifying <i>joinpoints</i>. The regular expression matching a (sub)set of joinpoints is called <i>pointcut, </i>e.g. in AspectJ-style:

execution(&lt;return_type&gt; &lt;class_name&gt;.&lt;method_name&gt;(&lt;set_of_params&gt;) e.g.:

execution(* *.perform(..))' matches method named 'perform' on any class with any number of  arguments

execution(* Performer+.perform(..)) matches ant perform method which is executed on a Performer, returning any type.

An<i>  advisor </i>specifies the advice and the pointcut.

In spring AOP pointcuts define only methods, the AspectJ pointcuts are more general. Internally once the target is advised, the <i>proxy</i> object is created, that wraps the String-managed beans. This process is called <i>weaving</i>. The weaving can be done during at compilation and classload time (AspectJ) and during the runtime, i.e. execution of the program (Spring AOP).

Sping AOP can be configured in 4 ways:

- classic proxy-based AOP (all versions of Spring)

- @AspectJ annotation-driven aspects (from Spring 2.0)

- pure-POJO aspects (from Spring 2.0)

- injected AspectJ aspects  (all versions of Spring)

First three solutions are proxy-based AOP, limited to method interception. For other interception (e.g. property or contructor) consider injecting Spring beans into AspectJ aspects  (defines more fine-grained control, but yet another language to learn ;-)

In Spring AOP the aspects are implemented as proxies that handles method calls, perform additional aspect logic and then invokes the target methods. Spring does not create proxied classes until they are needed by the application, when the beans are loaded from BeanFactory.

If your target proxy implements an interface(s), that exposes required methods, then Spring will generate a new class that implements necessary interfaces, weave in any advice and proxy any calls to these interfaces to your target class (preferable solution).

Otherwise, Spring will generate subclass to your target class and delegate calls to the subclass to your target class. Methods marked as final in target class are not allowed

Examplary configuration]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>13</wp:post_id>
  <wp:post_date>2008-04-02 14:04:13</wp:post_date>
  <wp:post_date_gmt>2008-04-02 14:04:13</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>spring-aop-20-in-a-nutshell</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="category" nicename="springframework"><![CDATA[Springframework]]></category>
</item>
<item>
  <title>TVP mms streaming for ubuntu gutsy 7.10</title>
  <link>https://bmwieczorek.wordpress.com/2008/06/18/tvp-mms-streaming-for-ubuntu-gutsy-710/</link>
  <pubDate>Wed, 18 Jun 2008 12:18:06 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=14</guid>
  <description/>
  <content:encoded><![CDATA[Currently I did not manage to support multiple streaming redirections directly (news from www.itvp.pl) using vlc, totem and mplayer.

The workaround I found is use the mimms as a mms downloader and redirect the stream to vlc, like that:

mimms -c mms://212.191.227.122/.../1.wmv - | vlc -]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>14</wp:post_id>
  <wp:post_date>2008-06-18 12:18:06</wp:post_date>
  <wp:post_date_gmt>2008-06-18 12:18:06</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>tvp-mms-streaming-for-ubuntu-gutsy-710</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Setting subversion in 5 mins on Ubuntu</title>
  <link>https://bmwieczorek.wordpress.com/2008/06/18/setting-subversion-in-5-mins-on-ubuntu/</link>
  <pubDate>Wed, 18 Jun 2008 14:53:37 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=15</guid>
  <description/>
  <content:encoded><![CDATA[#get packages
sudo apt-get install subversion

#create repository (write access required to the repository location)
sudo svnadmin create /repository

#add user(s), edit 2 files:

/repository/conf/passwd:
[users]
bawi = bawi

/repository/conf/svnserve.conf 
[general]
anon-access = read
auth-access = write
password-db = passwd

#start subversion as daemon:
sudo svnserve -d

#restarting subversion can be done via 
sudo kill svn_pid
sudo svnserve -d
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>15</wp:post_id>
  <wp:post_date>2008-06-18 14:53:37</wp:post_date>
  <wp:post_date_gmt>2008-06-18 14:53:37</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>setting-subversion-in-5-mins-on-ubuntu</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <category domain="category" nicename="svn"><![CDATA[svn]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>How to find a great job</title>
  <link>https://bmwieczorek.wordpress.com/2008/09/26/how-to-find-a-great-job/</link>
  <pubDate>Fri, 26 Sep 2008 08:21:19 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=25</guid>
  <description/>
  <content:encoded><![CDATA[<strong>Applying for the job</strong>

Common beliefs which are NOT TRUE and make it hard for a job candidate to find a great position fast:
<ul>
	<li>always send CV in a printed format or via the Internet,</li>
	<li>always contact HR only,</li>
	<li>HR always carefully reads your CV from beginning to end,</li>
	<li>HR recruiter knows exactly what is needed/expected for a certain position,</li>
	<li>HR job is to reject you, not to accept you</li>
	<li>give the minimum expected salary in CV</li>
</ul>
What to do then:
<ol>
	<li>keep it secret that you are looking for a job,</li>
	<li>avoid contacting HR as they are to filter out candidates who in their opinion don't meet the job requirements/criteria,</li>
	<li>if possible, always contact directly the team leader/manager who makes a decision whether to hire you or not (HR will not like it, but HR recruiters ofter do the same when they look for the work for themselves)</li>
	<li>don't reveal the minimum expected salary:
<ul>
	<li>if the min is too high, it is most likely that you'll be rejected without even an interview</li>
	<li>assuming that you eventually get to the interview and you would even convince the employer to pay more for your qualifications - if your min is much lower than average salary for that position, then you're likely to be rejected as well as a person with few skills</li>
	<li>min salary reduces your negotiation possibilities</li>
	<li>job agencies are paid only when the candidate is eventually hired, min salary filters out extra unnecessary work for them</li>
</ul>
</li>
</ol>
<strong>Preparations</strong>

You can find a great job faster when you have:
<ol>
	<li>a job, don't postpone looking for a job to the point hen you are in the desperate need for a new one</li>
	<li>a knowledge of your market and respected people</li>
	<li>an opinion of a skillful person inside and outside the company</li>
	<li>colleagues or even bosses that are willing to recommend you</li>
	<li>reliable contacts outside the company to get references and information about a position</li>
</ol>
This all takes a lot of time - start thinking about preparations for the new one in the first day of your current job!

Inside the current company - what to do
<ol>
	<li>first, learn as much as possible about your current job to do your best</li>
	<li>then, learn from the others on different positions, in different projects, by e.g. voluntarily helping them, even on your overtime</li>
	<li>look for the tasks that lead you to contacts beyond your current tasks, especially putting you in the leader position</li>
</ol>
Outside
<ol>
	<li>you need to be known in your profession also outside the current company</li>
	<li>sign up for professional associations and be active on the meetings and gatherings</li>
	<li>write articles 1to professional magazines, give presentations</li>
	<li>offer help to the leaders and cooperate with them when possible</li>
	<li>successful people are active everywhere, of course choose reasonably</li>
</ol>
<strong>Whenever you have any achievements - write them down and collect them in a register.</strong>

<strong>Planning all the steps makes your job search and preparations more efficient and logical.</strong>

All the work concerning looking for the job consists of 3 phases:
<ol>
	<li>how to be invited for the interview
<ul>
	<li>create your cumulative CV and constantly update to present what you have to offer</li>
	<li>choose 5 of your most significant achievements regarding the the you apply for</li>
	<li>create small CVs specially dedicated for a certain position that you will send directly to the employer and to the headhunters/work agencies.</li>
	<li>start to collect job offers but don't replay back to them until you are finished the preparations</li>
	<li>to gain more confidence, practice phone conversations with your friends as if you are being interviewed</li>
	<li>everyday call to leader/managers/directors and talk to them, not their secretaries</li>
	<li>make many phone interviews, even to companies that you are less interested in</li>
	<li>make appointments with work agencies and head hunters (choose max 5 of them)</li>
	<li>register all replays, even the negative ones (write down the names, complanies, later you can re-send your offers)</li>
	<li>resending the second offer should be written about 3 weeks after the first one</li>
</ul>
</li>
	<li>how to sell your services skillfully during the interview
<ul>
	<li>learn as much as possible about the interviewer, company, its products</li>
	<li>write down questions you want to ask and you will be probably asked</li>
	<li>prepare for each interview separately</li>
	<li>accept every offer of an interview</li>
	<li>remember: only interviews can give you a job</li>
</ul>
</li>
	<li>how to negotiate the offer successfully</li>
</ol>
Make a plan for each phase!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>25</wp:post_id>
  <wp:post_date>2008-09-26 08:21:19</wp:post_date>
  <wp:post_date_gmt>2008-09-26 08:21:19</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>how-to-find-a-great-job</wp:post_name>
  <wp:status>private</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>wget - recursively download all files from certain directory listed by apache</title>
  <link>https://bmwieczorek.wordpress.com/2008/10/01/wget-recursively-download-all-files-from-certain-directory-listed-by-apache/</link>
  <pubDate>Wed, 01 Oct 2008 13:36:54 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=39</guid>
  <description/>
  <content:encoded><![CDATA[Case: recursively download all the files that are in the 'ddd'  folder for the url 'http://hostname/aaa/bbb/ccc/ddd/'

Solution:
wget -r -np -nH --cut-dirs=3 -R index.html http://hostname/aaa/bbb/ccc/ddd/

Explanation:
It will download all files and subfolders in ddd directory:
recursively (-r), 
not going to upper directories, like ccc/... (-np), 
not saving files to hostname folder (-nH), 
but to ddd by omitting first 3 folders aaa, bbb, ccc (--cut-dirs=3), 
excluding index.html files (-R index.html)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>39</wp:post_id>
  <wp:post_date>2008-10-01 13:36:54</wp:post_date>
  <wp:post_date_gmt>2008-10-01 13:36:54</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>wget-recursively-download-all-files-from-certain-directory-listed-by-apache</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_0939479d032d5bad2521faa1dd2122f3</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_a7e475a4d8e132370ad08418521b4421</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_1cbf82fb509ffb54cd4782db78e49654</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_4af1c93c0168567c621c8c5debd7b785</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c3582126c4c43a0b237b41e2a787cadc</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_8389aac2ecef78e3b8a4b69acf03a15a</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_07fc1bf6f42ab57c00be1bde924ac847</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_49ec131adc7bc577c8533e95fd2fcdca</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_37e8e5553d2685a96bac8514bdda36fc</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_cf6b26adebd51dbfe4739d1f87df8825</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_26e32728903ea55469f989d2e094c85b</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_d4f8d7aef30a710dc28caee4deadd4fc</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_37f117a3ef2936dec29b69fe3a79a4bd</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_e1e7b34442324979a6bf31c178954512</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_572dfb744ee49cc6097e6efd9bf9381d</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c3209dcbd59df7d7d6056773e1f50973</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_d42138a88350cb75375051334d513e42</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>37</wp:comment_id>
    <wp:comment_author><![CDATA[Thiago]]></wp:comment_author>
    <wp:comment_author_email>fotopaisagem@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www</wp:comment_author_url>
    <wp:comment_author_IP>187.42.223.19</wp:comment_author_IP>
    <wp:comment_date>2009-08-24 04:48:47</wp:comment_date>
    <wp:comment_date_gmt>2009-08-24 04:48:47</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[is there any way to do this from a Windows Vista OS machine?

thx]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2009-08-24 04:48:47</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360322.1819698810577392578125;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>42</wp:comment_id>
    <wp:comment_author><![CDATA[Coalwater]]></wp:comment_author>
    <wp:comment_author_email>coalwater5@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>41.153.143.225</wp:comment_author_IP>
    <wp:comment_date>2010-03-05 05:33:32</wp:comment_date>
    <wp:comment_date_gmt>2010-03-05 05:33:32</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[well thanks for the post, it's useful but i have a small comment, the "-cut-dirs" it's a long option that should use the double "-" so it would be "--cut-dirs" because if you only use one it will assume that its like -c -u -t and so on, and since there is no -u option in wget it would return and error.
so simply it should be --cut-dirs with 2 "-"]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2010-03-05 05:33:32</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360322.2492001056671142578125;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>43</wp:comment_id>
    <wp:comment_author><![CDATA[Coalwater]]></wp:comment_author>
    <wp:comment_author_email>coalwater5@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>41.153.143.225</wp:comment_author_IP>
    <wp:comment_date>2010-03-05 05:36:21</wp:comment_date>
    <wp:comment_date_gmt>2010-03-05 05:36:21</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[ok well apparently it's not your fault lol, i guess some how the double "-" gets to be 1 "-" after posting, hmm lol]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>42</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2010-03-05 05:36:21</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360322.2857830524444580078125;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>350</wp:comment_id>
    <wp:comment_author><![CDATA[Mike]]></wp:comment_author>
    <wp:comment_author_email>mmoroz@lohika.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>193.108.44.18</wp:comment_author_IP>
    <wp:comment_date>2011-02-23 16:38:16</wp:comment_date>
    <wp:comment_date_gmt>2011-02-23 15:38:16</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks, you saved my time...]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1298475496.7393";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1298476354</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1298476355.3267";s:7:"message";s:50:"bmwieczorek changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"bmwieczorek";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-02-23 15:38:16</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>354</wp:comment_id>
    <wp:comment_author><![CDATA[Anthony]]></wp:comment_author>
    <wp:comment_author_email>jaded17@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://wingheart3.com</wp:comment_author_url>
    <wp:comment_author_IP>69.5.110.105</wp:comment_author_IP>
    <wp:comment_date>2011-06-29 04:56:06</wp:comment_date>
    <wp:comment_date_gmt>2011-06-29 02:56:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Ok, so I tried this.
wget -r -np -R index.php http://wingheart3.com/blog_pics/uploads/

and beause there is a index.php file there in the directory, its not downloading anything which is not making any sense..
Any thoughts?]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1309316166.6918";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-06-29 02:56:06</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360322.6418058872222900390625;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>352</wp:comment_id>
    <wp:comment_author><![CDATA[repat]]></wp:comment_author>
    <wp:comment_author_email>repat@repat.de</wp:comment_author_email>
    <wp:comment_author_url>http://repat.de</wp:comment_author_url>
    <wp:comment_author_IP>141.22.88.14</wp:comment_author_IP>
    <wp:comment_date>2011-03-21 10:08:41</wp:comment_date>
    <wp:comment_date_gmt>2011-03-21 09:08:41</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks, these little things are sometimes so helpful:)]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1300698522.0001";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-03-21 09:08:41</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360322.5017640590667724609375;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>355</wp:comment_id>
    <wp:comment_author><![CDATA[Kevin Ohashi]]></wp:comment_author>
    <wp:comment_author_email>blogs@ohashi.us</wp:comment_author_email>
    <wp:comment_author_url>http://www.kevinohashi.com</wp:comment_author_url>
    <wp:comment_author_IP>173.13.234.141</wp:comment_author_IP>
    <wp:comment_date>2011-07-28 22:50:04</wp:comment_date>
    <wp:comment_date_gmt>2011-07-28 20:50:04</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I needed to use 
wget -r -np -nH -P --cut-dirs=3 http://url.com/folder1/2/3/

(without the -P it wasn't working)

Hopefully that helps anyone else who uses this and runs into the problem of 'invalid option -- u']]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1311886205.6096";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-07-28 20:50:04</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360322.908938884735107421875;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>356</wp:comment_id>
    <wp:comment_author><![CDATA[Senapathy Thirugnanasambandam]]></wp:comment_author>
    <wp:comment_author_email>tsenapathy@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.facebook.com/profile.php?id=1280462337</wp:comment_author_url>
    <wp:comment_author_IP>82.219.14.93</wp:comment_author_IP>
    <wp:comment_date>2011-08-24 11:09:36</wp:comment_date>
    <wp:comment_date_gmt>2011-08-24 09:09:36</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Great, I owe 10 minutes of my life time to you.  

Pls command me what (good things) can I do for you :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1314176976.401";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>facebook</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value/>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>1280462337</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1314466532</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1314466532.2113";s:7:"message";s:50:"bmwieczorek changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"bmwieczorek";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-08-24 09:09:36</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>357</wp:comment_id>
    <wp:comment_author><![CDATA[Dutch Gecko]]></wp:comment_author>
    <wp:comment_author_email>dutch.gecko@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>84.83.181.228</wp:comment_author_IP>
    <wp:comment_date>2011-09-07 21:20:08</wp:comment_date>
    <wp:comment_date_gmt>2011-09-07 19:20:08</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks so much, I'm amazed that information as useful as this isn't more readily available.]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1315423208.9048";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360323.059391021728515625;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-09-07 19:20:08</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>358</wp:comment_id>
    <wp:comment_author><![CDATA[uksurd]]></wp:comment_author>
    <wp:comment_author_email>vanbug@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/uksurd</wp:comment_author_url>
    <wp:comment_author_IP>141.30.193.8</wp:comment_author_IP>
    <wp:comment_date>2011-09-22 18:03:33</wp:comment_date>
    <wp:comment_date_gmt>2011-09-22 16:03:33</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Awesome, saved so much of time but I used

wget -r -nH -R index.html http://abcd/folder/

Sukhdeep Singh]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1316707413.2245";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360323.2632749080657958984375;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-09-22 16:03:33</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>366</wp:comment_id>
    <wp:comment_author><![CDATA[Using the normal CDF in AMPL with shared libraries | Ben Lockwood]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://benlockwood.com/2012/01/11/calculating-the-normal-cdf-in-ampl-with-shared-libraries/</wp:comment_author_url>
    <wp:comment_author_IP>72.232.7.51</wp:comment_author_IP>
    <wp:comment_date>2012-01-11 22:16:49</wp:comment_date>
    <wp:comment_date_gmt>2012-01-11 21:16:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] but this didn&#8217;t work quickly for me, so I used wget to download the whole thing, as described here, with the following [...]]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1326316609.9706";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360323.7097189426422119140625;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-01-11 21:16:49</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>363</wp:comment_id>
    <wp:comment_author><![CDATA[Tillmann Kah]]></wp:comment_author>
    <wp:comment_author_email>tillmannkrieger@googlemail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.facebook.com/profile.php?id=100000774192302</wp:comment_author_url>
    <wp:comment_author_IP>91.89.72.51</wp:comment_author_IP>
    <wp:comment_date>2011-10-31 17:24:52</wp:comment_date>
    <wp:comment_date_gmt>2011-10-31 16:24:52</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[You should use the value index.html* for -R option, because the dir listing has some other links to index.html with parameters, which, I guess, you don´t want to download.

Alternatively, you could use the ?F=0 get-parameter for Apache´s mod_autoindex module, where these links for sorting arent´t shown.

The best solution might be to use a php script on server side which generates a custom format, but obviously this isn´t always possible.]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>100000774192302</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>facebook</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value/>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1320078292.6474";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360323.6093499660491943359375;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-10-31 16:24:52</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>362</wp:comment_id>
    <wp:comment_author><![CDATA[sethjust]]></wp:comment_author>
    <wp:comment_author_email>seth.just@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://sethjust.com</wp:comment_author_url>
    <wp:comment_author_IP>134.10.30.239</wp:comment_author_IP>
    <wp:comment_date>2011-10-24 10:00:36</wp:comment_date>
    <wp:comment_date_gmt>2011-10-24 08:00:36</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks! Great tip!]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1319443236.9898";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360323.4547049999237060546875;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-10-24 08:00:36</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>376</wp:comment_id>
    <wp:comment_author><![CDATA[nerf12345]]></wp:comment_author>
    <wp:comment_author_email>na@na.com</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/nerf12345</wp:comment_author_url>
    <wp:comment_author_IP>4.59.220.130</wp:comment_author_IP>
    <wp:comment_date>2012-03-13 21:28:49</wp:comment_date>
    <wp:comment_date_gmt>2012-03-13 20:28:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA["–cut-dirs=3" should be "--cut-dirs=3"]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1331670529.8889";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1331720083</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1331720083.9721";s:7:"message";s:50:"bmwieczorek changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"bmwieczorek";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-03-13 20:28:49</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>381</wp:comment_id>
    <wp:comment_author><![CDATA[Gn0m3]]></wp:comment_author>
    <wp:comment_author_email>rogelio@yopmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>216.10.193.24</wp:comment_author_IP>
    <wp:comment_date>2012-04-17 17:19:36</wp:comment_date>
    <wp:comment_date_gmt>2012-04-17 15:19:36</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I think you meant --cut-dirs= 3]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1334822897.5345";s:7:"message";s:50:"bmwieczorek changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"bmwieczorek";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1334822897</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1334675976.5729";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-04-17 15:19:36</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>382</wp:comment_id>
    <wp:comment_author><![CDATA[Marcos Rondinelli]]></wp:comment_author>
    <wp:comment_author_email>marcosrondinelli@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>177.112.109.246</wp:comment_author_IP>
    <wp:comment_date>2012-04-18 14:55:21</wp:comment_date>
    <wp:comment_date_gmt>2012-04-18 12:55:21</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks, good tip!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1334822858</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1334822858.9477";s:7:"message";s:50:"bmwieczorek changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"bmwieczorek";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1334753722.4876";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-04-18 12:55:21</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>394</wp:comment_id>
    <wp:comment_author><![CDATA[zioproto]]></wp:comment_author>
    <wp:comment_author_email>zioproto@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://zioproto.ninux.org/</wp:comment_author_url>
    <wp:comment_author_IP>79.26.22.87</wp:comment_author_IP>
    <wp:comment_date>2012-07-27 23:11:18</wp:comment_date>
    <wp:comment_date_gmt>2012-07-27 21:11:18</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks ! I will make an alias for this ! :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343744174</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343744174.8540210723876953125;s:7:"message";s:50:"bmwieczorek changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"bmwieczorek";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343423479.0751240253448486328125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"zioproto";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-27 21:11:18</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>397</wp:comment_id>
    <wp:comment_author><![CDATA[Oceanography Lucas Barbedo de Freitas]]></wp:comment_author>
    <wp:comment_author_email>lucasbarbedo@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>150.163.4.178</wp:comment_author_IP>
    <wp:comment_date>2012-08-08 15:32:44</wp:comment_date>
    <wp:comment_date_gmt>2012-08-08 13:32:44</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[fantastic! Neymar does something like your play football for Brazil. :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1344432765.63593006134033203125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1344433397</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1344433397.50411510467529296875;s:7:"message";s:50:"bmwieczorek changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"bmwieczorek";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-08-08 13:32:44</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>398</wp:comment_id>
    <wp:comment_author><![CDATA[ZAY]]></wp:comment_author>
    <wp:comment_author_email>az@ayz.hu</wp:comment_author_email>
    <wp:comment_author_url>http://www.zayblog.com</wp:comment_author_url>
    <wp:comment_author_IP>108.162.181.145</wp:comment_author_IP>
    <wp:comment_date>2012-12-09 16:45:14</wp:comment_date>
    <wp:comment_date_gmt>2012-12-09 15:45:14</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[You will need something like double dash before the cut, not single dash.]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1355067914.40001010894775390625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360324.45384502410888671875;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-12-09 15:45:14</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>399</wp:comment_id>
    <wp:comment_author><![CDATA[kraz]]></wp:comment_author>
    <wp:comment_author_email>krazonline@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>108.213.210.218</wp:comment_author_IP>
    <wp:comment_date>2013-01-15 13:25:22</wp:comment_date>
    <wp:comment_date_gmt>2013-01-15 12:25:22</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[thanks for this post, it helped me]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358252722.6793229579925537109375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1358277181</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358277181.2339808940887451171875;s:7:"message";s:50:"bmwieczorek changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"bmwieczorek";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-01-15 12:25:22</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>400</wp:comment_id>
    <wp:comment_author><![CDATA[Hapsias]]></wp:comment_author>
    <wp:comment_author_email>hapsias@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>213.157.88.237</wp:comment_author_IP>
    <wp:comment_date>2013-01-16 12:29:06</wp:comment_date>
    <wp:comment_date_gmt>2013-01-16 11:29:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks for the post. But I have a question, is it possible to download "subfolders" in /ddd/? Like if there are /ddd/a/, /ddd/b/, /ddd/c/ folder example. I have a case that would need something like that. And there is .zip file when you enter the subfolder. http://hostname/aaa/bbb/ccc/ddd/a/ At this url it would download .zip file called a.

Is this even possible? But thaks for advance.]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358335746.601192951202392578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360324.52618694305419921875;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-01-16 11:29:06</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>393</wp:comment_id>
    <wp:comment_author><![CDATA[MaXzzz]]></wp:comment_author>
    <wp:comment_author_email>fredas@yopmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>91.121.150.68</wp:comment_author_IP>
    <wp:comment_date>2012-07-08 07:03:42</wp:comment_date>
    <wp:comment_date_gmt>2012-07-08 05:03:42</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[He meant --cut-dirs=3 instead of -cut-dirs=3
Thanks again for this very useful tip!!]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1341723822.9482";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360324.2892749309539794921875;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-08 05:03:42</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>403</wp:comment_id>
    <wp:comment_author><![CDATA[Download recursivo con wget | Tomas Melikoff]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://tomas.melikoff.com/download-recursivo-con-wget/</wp:comment_author_url>
    <wp:comment_author_IP>81.88.49.16</wp:comment_author_IP>
    <wp:comment_date>2013-02-26 21:44:28</wp:comment_date>
    <wp:comment_date_gmt>2013-02-26 20:44:28</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] Esta información ha sido traducida y adaptada desde el siguiente sitio. [...]]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1361911468.962750911712646484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360324.7553560733795166015625;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-02-26 20:44:28</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>404</wp:comment_id>
    <wp:comment_author><![CDATA[kredyty prywatne]]></wp:comment_author>
    <wp:comment_author_email>carmine_butler@t-online.de</wp:comment_author_email>
    <wp:comment_author_url>http://vocescubanas.com/cubafotosocial/2011/06/17/camilo-canel/</wp:comment_author_url>
    <wp:comment_author_IP>36.68.141.206</wp:comment_author_IP>
    <wp:comment_date>2013-02-28 06:59:27</wp:comment_date>
    <wp:comment_date_gmt>2013-02-28 05:59:27</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[What's up to all, the contents present at this web page are truly remarkable for people knowledge, well, keep up the good work fellows.]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1362031168.6431910991668701171875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360324.8149509429931640625;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-02-28 05:59:27</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>405</wp:comment_id>
    <wp:comment_author><![CDATA[Wget: download site recursively | TooMeeK]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://toomeek.waw.pl/blog/?p=2641</wp:comment_author_url>
    <wp:comment_author_IP>89.72.80.107</wp:comment_author_IP>
    <wp:comment_date>2013-03-16 12:28:39</wp:comment_date>
    <wp:comment_date_gmt>2013-03-16 11:28:39</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] Source. Thx for that! [...]]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1363433319.908646106719970703125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360324.955028057098388671875;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-03-16 11:28:39</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>406</wp:comment_id>
    <wp:comment_author><![CDATA[使用 wget 下载一个目录下的所有文件 | XJ&#039;s life log]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.xjliu.net/blog/?p=591</wp:comment_author_url>
    <wp:comment_author_IP>64.90.55.84</wp:comment_author_IP>
    <wp:comment_date>2013-04-16 21:44:38</wp:comment_date>
    <wp:comment_date_gmt>2013-04-16 19:44:38</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] 今天想下载 MIT 的李代数课程笔记，参见网页：http://math.mit.edu/classes/18.745/Notes/. 突然间忘了 wget 的用法，如果直接将上述 URL 作为 wget 的参数的话，只会下载 index.html 文件。上网搜了一下，发现需要用到以下参数，所以写此日志记录之. 我参考了以下网站 http://bmwieczorek.wordpress.com/2008/10/01/wget-recursively-download-all-files-from-certain-directo... [...]]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360325.07693004608154296875;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-04-16 19:44:38</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>407</wp:comment_id>
    <wp:comment_author><![CDATA[SATHEESARAN]]></wp:comment_author>
    <wp:comment_author_email>satheesaran@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>209.132.188.34</wp:comment_author_IP>
    <wp:comment_date>2013-05-02 13:12:06</wp:comment_date>
    <wp:comment_date_gmt>2013-05-02 11:12:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[But still I am getting the mysterious index.html* files. Like index.html?C=M;O=A]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1367493126.88477802276611328125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360325.1496479511260986328125;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-05-02 11:12:06</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>402</wp:comment_id>
    <wp:comment_author><![CDATA[Joseph Lust]]></wp:comment_author>
    <wp:comment_author_email>lifeoflust@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/joelust</wp:comment_author_url>
    <wp:comment_author_IP>71.232.45.17</wp:comment_author_IP>
    <wp:comment_date>2013-02-02 06:18:29</wp:comment_date>
    <wp:comment_date_gmt>2013-02-02 05:18:29</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks, just what I needed!]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1359782310.23132991790771484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:7:"joelust";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360324.642201900482177734375;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-02-02 05:18:29</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>410</wp:comment_id>
    <wp:comment_author><![CDATA[André]]></wp:comment_author>
    <wp:comment_author_email>andre_eis@terra.com.br</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>189.47.225.178</wp:comment_author_IP>
    <wp:comment_date>2013-06-07 16:19:23</wp:comment_date>
    <wp:comment_date_gmt>2013-06-07 14:19:23</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Tks, it worked fine!]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1370614764.0362169742584228515625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360325.4273440837860107421875;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-06-07 14:19:23</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>413</wp:comment_id>
    <wp:comment_author><![CDATA[Vegetarian]]></wp:comment_author>
    <wp:comment_author_email>lakdf@sdlkf.org</wp:comment_author_email>
    <wp:comment_author_url>http://crunchbang.org/</wp:comment_author_url>
    <wp:comment_author_IP>68.6.32.250</wp:comment_author_IP>
    <wp:comment_date>2013-09-08 06:27:39</wp:comment_date>
    <wp:comment_date_gmt>2013-09-08 04:27:39</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks very much, this helps a lot.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1378614460.0909531116485595703125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1378808372</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1378808373.3031060695648193359375;s:7:"message";s:50:"bmwieczorek changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"bmwieczorek";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-09-08 04:27:39</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>425</wp:comment_id>
    <wp:comment_author><![CDATA[Patate]]></wp:comment_author>
    <wp:comment_author_email>pommedeterre@worlofpotatoes.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>193.52.103.20</wp:comment_author_IP>
    <wp:comment_date>2013-10-04 09:08:20</wp:comment_date>
    <wp:comment_date_gmt>2013-10-04 07:08:20</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Good post ! 
Works with firefox ESR : 
wget -r -np -nH --cut-dirs=7 -R index.html* http://ftp.mozilla.org/pub/mozilla.org/firefox/releases/latest-esr/win32/fr/ --output-document=/home/jo/Téléchargements/update/firefox_esr_last.exe]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1380870500.3784930706024169921875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360326.707725048065185546875;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-10-04 07:08:20</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>432</wp:comment_id>
    <wp:comment_author><![CDATA[Claire]]></wp:comment_author>
    <wp:comment_author_email>claire-halligan@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://alasbarricadas.org/ateneo/index.php/Simply_Exactly_just_what_Is_An_Ohio_Mud_Run</wp:comment_author_url>
    <wp:comment_author_IP>5.34.247.122</wp:comment_author_IP>
    <wp:comment_date>2013-11-18 03:37:27</wp:comment_date>
    <wp:comment_date_gmt>2013-11-18 02:37:27</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[It's hard to find knowledgeable people in this particular subject, but you 
sound like you know what you're talking about! Thanks]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1384742247.858234882354736328125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360326.937870025634765625;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-11-18 02:37:27</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>433</wp:comment_id>
    <wp:comment_author><![CDATA[midtcutttingnnan.prohosts.org]]></wp:comment_author>
    <wp:comment_author_email>etta_francois@zoho.com</wp:comment_author_email>
    <wp:comment_author_url>http://midtcutttingnnan.prohosts.org</wp:comment_author_url>
    <wp:comment_author_IP>91.210.100.37</wp:comment_author_IP>
    <wp:comment_date>2013-11-22 04:23:10</wp:comment_date>
    <wp:comment_date_gmt>2013-11-22 03:23:10</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thank you for the auspicious writeup. It in reality used to be a entertainment account 
it. Glance advanced to more introduced agreeable from you!
However, how can we communicate?]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>16862129112</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1385090590</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1385090590.5276930332183837890625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360327.0658090114593505859375;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-11-22 03:23:10</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>419</wp:comment_id>
    <wp:comment_author><![CDATA[shiva]]></wp:comment_author>
    <wp:comment_author_email>agratourpackage@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.agratourpackages.co.in</wp:comment_author_url>
    <wp:comment_author_IP>125.63.120.55</wp:comment_author_IP>
    <wp:comment_date>2013-09-19 12:25:03</wp:comment_date>
    <wp:comment_date_gmt>2013-09-19 10:25:03</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[We offer same day Agra tour, one day Agra tour from Delhi, day tour Agra, Agra tour by Bus, Agra tour by car, Agra Tours, Agra Packages, Agra tour packages, day trip to Agra, Agra sightseeing tour, budget tour Agra, Agra travel, car rental in Agra, Taxi hire in Agra, Tempo traveller on rent Agra, Agra Tourism, Delhi Agra Jaipur Tour, tour and travel services in Agra, tourist taxi Agra.]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1379586303.8511550426483154296875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360325.7565109729766845703125;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-09-19 10:25:03</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>421</wp:comment_id>
    <wp:comment_author><![CDATA[Karunakar Reddy]]></wp:comment_author>
    <wp:comment_author_email>karunakar.rdyn@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>https://plus.google.com/101142952661508339801</wp:comment_author_url>
    <wp:comment_author_IP>183.82.4.5</wp:comment_author_IP>
    <wp:comment_date>2013-09-21 06:48:34</wp:comment_date>
    <wp:comment_date_gmt>2013-09-21 04:48:34</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[-cut-dirs=2 is not working in unix....except that everything is good]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1379738914.9788091182708740234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>googleplus</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>https://lh4.googleusercontent.com/-09qVzjgyqgw/AAAAAAAAAAI/AAAAAAAAAC0/wrUibRFDHaY/photo.jpg?sz=50</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>101142952661508339801</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360326.01585102081298828125;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-09-21 04:48:34</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>422</wp:comment_id>
    <wp:comment_author><![CDATA[sunny]]></wp:comment_author>
    <wp:comment_author_email>tashkenttour@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.tashkenttourpackage.com</wp:comment_author_url>
    <wp:comment_author_IP>125.63.117.248</wp:comment_author_IP>
    <wp:comment_date>2013-09-21 14:09:46</wp:comment_date>
    <wp:comment_date_gmt>2013-09-21 12:09:46</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[We offer Tashkent tour packages, Tashkent tour from Delhi, Tashkent tour, Tashkent group tour packages, Delhi to Tashkent trip, Uzbekistan Holiday Packages from Delhi, India, Uzbekistan tour packages, Tashkent Night life tour, Tashkent vacation packages, tourist place in Uzbekistan, Tashkent tour packages from India, Delhi, Tashkent tourism package, travel packages to Tashkent.]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1379765386.529859066009521484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360326.222568988800048828125;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-09-21 12:09:46</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>431</wp:comment_id>
    <wp:comment_author><![CDATA[WST]]></wp:comment_author>
    <wp:comment_author_email>admin@jsmart.web.id</wp:comment_author_email>
    <wp:comment_author_url>http://averkov.web.id</wp:comment_author_url>
    <wp:comment_author_IP>95.153.167.153</wp:comment_author_IP>
    <wp:comment_date>2013-10-31 20:28:04</wp:comment_date>
    <wp:comment_date_gmt>2013-10-31 19:28:04</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[It’s WordPress making a substitution…]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>376</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1383247684.875070095062255859375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:9:"sylabulus";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360326.886538028717041015625;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-10-31 19:28:04</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>434</wp:comment_id>
    <wp:comment_author><![CDATA[Rumesh]]></wp:comment_author>
    <wp:comment_author_email>realbanda@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://linuxanswer.org</wp:comment_author_url>
    <wp:comment_author_IP>112.135.93.143</wp:comment_author_IP>
    <wp:comment_date>2013-11-25 08:35:12</wp:comment_date>
    <wp:comment_date_gmt>2013-11-25 07:35:12</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks.. Exact all the details with simple explanations. Love it!]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1385364912.7132589817047119140625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1385364912</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>17004002838</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360327.2309510707855224609375;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-11-25 07:35:12</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>547</wp:comment_id>
    <wp:comment_author><![CDATA[Mummy Ninja]]></wp:comment_author>
    <wp:comment_author_email>me@mummyninja.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.mummyninja.com/</wp:comment_author_url>
    <wp:comment_author_IP>114.108.235.152</wp:comment_author_IP>
    <wp:comment_date>2014-04-11 20:25:21</wp:comment_date>
    <wp:comment_date_gmt>2014-04-11 18:25:21</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Oh great. It thought it's impossible at first. My MO is zip it first then wget it from another server. But this one is also a useful tip.]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1397240721.798719882965087890625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"mummyninja";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>23245306127</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1397240722</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360327.5229089260101318359375;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-04-11 18:25:21</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>548</wp:comment_id>
    <wp:comment_author><![CDATA[mummyninja]]></wp:comment_author>
    <wp:comment_author_email>me@mummyninja.com</wp:comment_author_email>
    <wp:comment_author_url>http://mummyninja.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>114.108.235.152</wp:comment_author_IP>
    <wp:comment_date>2014-04-11 20:26:44</wp:comment_date>
    <wp:comment_date_gmt>2014-04-11 18:26:44</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Reblogged this on <a href="http://mummyninja.wordpress.com/2014/04/11/wget-recursively-download-all-files-from-certain-directory-listed-by-apache/" rel="nofollow">Mummy Ninja on Wordpress</a> and commented: 
A very nifty solution to transfer all files from one server to another via SSH using wget.]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>24814138</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1397240804.56881999969482421875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"mummyninja";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>23245328658</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1397240804</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>reblog_ping</wp:meta_key>
      <wp:meta_value>1</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360327.58076000213623046875;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-04-11 18:26:44</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1456</wp:comment_id>
    <wp:comment_author><![CDATA[kravi]]></wp:comment_author>
    <wp:comment_author_email>kravir@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>182.73.104.131</wp:comment_author_IP>
    <wp:comment_date>2015-04-09 11:43:33</wp:comment_date>
    <wp:comment_date_gmt>2015-04-09 09:43:33</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Better to use -R "index.html*" instead of -R index.html to exclude download of "index.html?blah=blah" kind of files]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1428679535</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1428679535.29988193511962890625;s:7:"message";s:50:"bmwieczorek changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"bmwieczorek";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1428572613.82674407958984375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>9369404446</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1428679535</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1428577436.6773269176483154296875;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>657</wp:comment_id>
    <wp:comment_author><![CDATA[Sam]]></wp:comment_author>
    <wp:comment_author_email>sampath.kambar@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>202.140.56.33</wp:comment_author_IP>
    <wp:comment_date>2014-05-20 14:29:55</wp:comment_date>
    <wp:comment_date_gmt>2014-05-20 12:29:55</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[When i use this, it downloads all files and folders. But the files will be of ZERO kilo bytes :( . Please help]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360327.9250910282135009765625;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-05-20 12:29:55</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1400588995.9808290004730224609375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>24072570395</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1400588996</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>554</wp:comment_id>
    <wp:comment_author><![CDATA[Cleydyr Albuquerque]]></wp:comment_author>
    <wp:comment_author_email>cleydyr@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>https://plus.google.com/110647954720208700663</wp:comment_author_url>
    <wp:comment_author_IP>177.41.14.155</wp:comment_author_IP>
    <wp:comment_date>2014-04-15 16:45:04</wp:comment_date>
    <wp:comment_date_gmt>2014-04-15 14:45:04</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks a lot. First hit in Google for a reason. :D

I'd like to add that if you have a robots.txt in the site and it disallows [search engine indexing] for the directory you're downloading from, then you can't download recursively just with that command. So you have to add -e robots=off among the wget parameters.

Best]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1397573104.598781108856201171875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1397573104</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>googleplus</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>https://lh4.googleusercontent.com/-PfHHouTPPPQ/AAAAAAAAAAI/AAAAAAAAChY/Yf9WA_TIn_w/photo.jpg?sz=50</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>110647954720208700663</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>23320111575</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360327.8234279155731201171875;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-04-15 14:45:04</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1363</wp:comment_id>
    <wp:comment_author><![CDATA[professional resume writers mississauga]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://all-about-medicare.com/resume-writing-services-mississauga</wp:comment_author_url>
    <wp:comment_author_IP>124.123.198.247</wp:comment_author_IP>
    <wp:comment_date>2014-10-31 02:24:46</wp:comment_date>
    <wp:comment_date_gmt>2014-10-31 01:24:46</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[<strong>professional resume writers mississauga</strong>

wget - recursively download all files from certain directory listed by apache | Bartosz Wieczorek's blog]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type>trackback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414723848.7762119770050048828125;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414718686.91571903228759765625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1366</wp:comment_id>
    <wp:comment_author><![CDATA[games include]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://forum.persionhistory74.ir/entry.php?120-X-Games-2009</wp:comment_author_url>
    <wp:comment_author_IP>59.90.180.236</wp:comment_author_IP>
    <wp:comment_date>2014-11-04 11:06:29</wp:comment_date>
    <wp:comment_date_gmt>2014-11-04 10:06:29</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[<strong>games include</strong>

wget - recursively download all files from certain directory listed by apache | Bartosz Wieczorek's blog]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type>trackback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1415095590.045236110687255859375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1415100699.8279850482940673828125;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1375</wp:comment_id>
    <wp:comment_author><![CDATA[prix d1899une machine ÃƒÂ  mettre sous pli]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.beccaccino.it/?long_df=0&amp;q=/roulette/fr/casino-roulette-neighbours.php</wp:comment_author_url>
    <wp:comment_author_IP>200.84.80.202</wp:comment_author_IP>
    <wp:comment_date>2014-11-11 21:20:44</wp:comment_date>
    <wp:comment_date_gmt>2014-11-11 20:20:44</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[<strong>prix d1899une machine ÃƒÂ  mettre sous pli</strong>

wget - recursively download all files from certain directory listed by apache | Bartosz Wieczorek's blog]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type>trackback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1415741381.5056979656219482421875;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1415737244.6742169857025146484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1381</wp:comment_id>
    <wp:comment_author><![CDATA[Calli]]></wp:comment_author>
    <wp:comment_author_email>gooly@gmx.at</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>62.178.208.57</wp:comment_author_IP>
    <wp:comment_date>2014-11-20 09:30:52</wp:comment_date>
    <wp:comment_date_gmt>2014-11-20 08:30:52</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi, I stumbled across your blog where I found the solution for my problem to dld only one folder - thank you very much !!!
I want to add another question.
If I download a folder with its subfolders not only the folders and files that I see are loaded but as well files like index.html, index.html@C=D;O=A, ...
Is there an option that all the files starting with index are ignored?]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>3473433852</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1416472253</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1416476755.62380504608154296875;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1416472252.814527034759521484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1368</wp:comment_id>
    <wp:comment_author><![CDATA[Dr. Mike Wendell]]></wp:comment_author>
    <wp:comment_author_email>theapparatus+wordpress@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://drmikessteakdinner.com</wp:comment_author_url>
    <wp:comment_author_IP>168.215.131.150</wp:comment_author_IP>
    <wp:comment_date>2014-11-04 20:43:11</wp:comment_date>
    <wp:comment_date_gmt>2014-11-04 19:43:11</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[As noted in the comments but messed up by wordpress, the hyphen in front of cut is actually 2 hyphens, not one.  Wordpress has a 'feature' where multiple hyphens are changed into a single long hyphen.  Wordpress messes with quotes as well.

Hope this helps]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1415130192.327663898468017578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>2876445709</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1415130193</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1415134202.05290508270263671875;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1700</wp:comment_id>
    <wp:comment_author><![CDATA[Udit Desai]]></wp:comment_author>
    <wp:comment_author_email>desaiuditd@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://incognitech.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>73.93.152.239</wp:comment_author_IP>
    <wp:comment_date>2016-06-19 06:15:16</wp:comment_date>
    <wp:comment_date_gmt>2016-06-19 04:15:16</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Ref: http://blog.incognitech.in/download-files-from-apache-server-listing-directory/

You can use following command:

    wget --execute="robots = off" --mirror --convert-links --no-parent --wait=5 

### Explanation with each options

- `wget`: Simple Command to make CURL request and download remote files to our local machine.
- `--execute="robots = off"`: This will ignore robots.txt file while crawling through pages. It is helpful if you're not getting all of the files.
- `--mirror`: This option will basically mirror the directory structure for the given URL. It's a shortcut for `-N -r -l inf --no-remove-listing` which means:
    - `-N`: don't re-retrieve files unless newer than local
    - `-r`: specify recursive download
    - `-l inf`: maximum recursion depth (inf or 0 for infinite)
    - `--no-remove-listing`: don't remove '.listing' files
- `--convert-links`: make links in downloaded HTML or CSS point to local files
- `--no-parent`: don't ascend to the parent directory
- `--wait=5`: wait 5 seconds between retrievals. So that we don't thrash the server.
- ``: This is the website url from where to download the files.

Happy Downloading :smiley:]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>46055224</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:3:{s:4:"time";d:1466314929.669578075408935546875;s:5:"event";s:9:"check-ham";s:4:"user";s:10:"desaiuditd";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:3:{s:4:"time";d:1466309717.2467329502105712890625;s:5:"event";s:9:"check-ham";s:4:"user";s:10:"desaiuditd";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Eclipse and Linux shortcuts</title>
  <link>https://bmwieczorek.wordpress.com/2008/11/02/eclipse-and-linux-shortcuts/</link>
  <pubDate>Sun, 02 Nov 2008 15:30:09 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=48</guid>
  <description/>
  <content:encoded><![CDATA[**************************************
ECLIPSE
**************************************
CTRL+SHITF+
r open resources
t open types
/ add block comment
\ remove block comment
c add/remove line comment

n class (overriden)
i interface
x xml
p package

ALT+SHIFT+
r rename
h open call hierachy (default CTRL+ALT+H overriden by Linux)

CTRL+
l go to line nr
z undo
y redo
h search
m min/max curr tab
j incr search
3 search
o search file/method
q go to last edit
e open editted files file
,/. go to last error/warning

*new - assign new eclipse shortcut: CTRL+3; type keys (choose Keys - General)

**************************************
LINUX (my own shortcuts)
**************************************
CTRL+ALT
pg/pd vol
d desktop
b firefox
h home]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>48</wp:post_id>
  <wp:post_date>2008-11-02 15:30:09</wp:post_date>
  <wp:post_date_gmt>2008-11-02 15:30:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>eclipse-and-linux-shortcuts</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Look for jar files that contain files which have a searched text </title>
  <link>https://bmwieczorek.wordpress.com/2008/11/04/look-for-jar-files-that-contain-files-which-have-a-searched-text/</link>
  <pubDate>Tue, 04 Nov 2008 11:46:39 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=58</guid>
  <description/>
  <content:encoded><![CDATA[Problem:
It happened that one of the jar files in my local repository contains a file (presumably a log4j.xml or log4j.properties) which has a text: test.log. Find that jar file and the check if it was in log4j.xml or log4j.property).

Solution (bash script):

<code>
#!/bin/bash 

#serch all jar files
for jar in $(find -name \*.jar); do

#for each jar, list all the log4j.xml or log4j.properties
files=$(unzip -l $jar | grep -i 'log4j\.[xml|properties]' | awk '{print $4}');

#iterate over found log4j.xml or log4j.properties
for file in $files; do

#check if the found file contains 'test.log'
if unzip -p $jar $file | grep -i 'test\.log'; then

#print the found jar and file name
echo " $jar $file ";
fi ;
done;
done;
</code>


Result (found):
log4j.appender.out.file=${basedir}/target/test.log
./org/apache/activemq/activeio-core/3.1.0/activeio-core-3.1.0-tests.jar log4j.properties<ins datetime="00"></ins><ins datetime="00"></ins>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>58</wp:post_id>
  <wp:post_date>2008-11-04 11:46:39</wp:post_date>
  <wp:post_date_gmt>2008-11-04 11:46:39</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>look-for-jar-files-that-contain-files-which-have-a-searched-text</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Ubuntu Gutsy 7.10 - subversion client (1.4x) not compatible with latest eclipse svn (1.5x)</title>
  <link>https://bmwieczorek.wordpress.com/2008/11/05/ubuntu-gutsy-710-subversion-client-14x-not-compatible-with-latest-eclipse-svn-15x/</link>
  <pubDate>Wed, 05 Nov 2008 09:47:34 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=75</guid>
  <description/>
  <content:encoded><![CDATA[#remove existing subversion package
sudo apt-get remove subversion
sudo apt-get autoremove subversion

#install subversion 1.5x from 
#<a href="http://subversion.tigris.org/getting.html#source-release">http://subversion.tigris.org/getting.html#source-release</a>

#At this moment Ubuntu Gutsy has latest svn 1.4x version, so we need to use hardy-backports - 1.5x
#http://packages.ubuntu.com/hardy-backports/subversion

#To do so, install
# libsvn1 from http://packages.ubuntu.com/hardy-backports/libsvn1
# libapr1 from http://packages.ubuntu.com/hardy/libapr1
# and finally subversion_1.5x from http://packages.ubuntu.com/hardy-backports/subversion
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>75</wp:post_id>
  <wp:post_date>2008-11-05 09:47:34</wp:post_date>
  <wp:post_date_gmt>2008-11-05 09:47:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ubuntu-gutsy-710-subversion-client-14x-not-compatible-with-latest-eclipse-svn-15x</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c8a117a1da0e21845cc4c49558f2a83b</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Java fundametals</title>
  <link>https://bmwieczorek.wordpress.com/2009/02/04/java-fundametals/</link>
  <pubDate>Wed, 04 Feb 2009 23:34:45 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=82</guid>
  <description/>
  <content:encoded><![CDATA[Encapsulation - put the data into class (capsule) along with the methods to access that data. Keep cohesion - ask yourself - what actions an object of the class will be responsible for. Use responsibility-driven design to determine grouping of the data and actions.

Data hiding - hide the internal implementation details of the class behind an interface (public methods in the class). Make member variables (fields) and internally used methods private and expose only the minimal set of public methods. Benefits:
- you can safely change the implementation without worrying that you will break existing code using that class
- do not access/mutate the fields directly, don't make them public, because:
a) some fields my be dependent on each other and by direct access the class may get into inconsistent state;
b) methods define possible operations performed on the data - it is easy to test/validate them - make the system work as expected
c) making everything public (especially all fields) would clutter the API
d) all public methods are visible - each needs to be documented
Don't expose the difference between stored data and derived data, to keep the design decisions hidden (e.g. use getSpeed() instead of calculateSpeed()).

The encapsulated class should expose as little as possible about its internal structures.
E.g.:
There is a class Route with a private array/collection of Position elements. Each position element contains private lat, long, unit type and geometry type.
- It is not a good idea to expose a public getter for a private array of Positions - public Position[] getPositions() - we cannot change that into the List implementation without affecting clients code (do not use names like getDataArray() or getTreeMap() )
- It that case it is better to have public void append(Position position) rather then public setPosition(int i, Position position). append(Position position) makes sure that the set position has the units and geometry uniformly set.
- The getPosition(int i) should return a defensive copy of requested position so that the client does not change the units and geometry via the obtained position reference for that particular position (Don't expose the implementation details - disallow a client to change the internal states of the objects - which may be used in internal calculations and as a result may give wrong results)
the units/geometry should be set explicitly.

Access control modifiers:
- public (visible to any class),
- default package (visible only within the package)
- protected (package visibility and also visible to any subclasses regardless of the package in which the subclass is defined)
- private (visible only withing that class)

Protected and public are part of API and should be documented.
Class member accessibility:
Defining class - all
Class in the same package - pub, prot and pack
Subclass in different package - pub &amp; prot
Non subclass in different package - pub

eg.
Given Circle class with protected 'r' property. PlaneCircle extends Circle. PlaneCircle is in different package than Circle.
public boolen isBigger(Circle c){
return (this.r &gt; c.r); //this.r - ok - accesses inherited field; c.r - illegal access; solution - both the same package, or (PlaneCircle c) as parameter.
}

UML visibility: + public, # protected, - private, ~ package

A class is a set of plan, that can be used to create objects.
A Java object is an instance of a class.
A a = new A(); allocates 2 chunks of memory - one for instantiated object, second (small) for reference variable (ref to the object).

volatile - prevent overriding (multi threading)

<strong>Initialization order</strong>
In case class Sub extends Base and the Sub class create new instance of Sub class in the main method:
1. all static fields and static initializers in declaration order from Base
2. all static fields and static initializers in declaration order from Sub
3. static main method from Sub (if program started via main method)
Variables are initialized before any non-static methods can be called—even the constructor
If the new Sub() is called from main method then:
4. non-static fields in Base 
5. execute constructor body in Base
6. non-static fields in Sub
7. execute constructor body in Sub

The very first thing a subclass constructor does is to call base class constructor (implicitly or via super()/super(args)). After that the rest of the subclass constructor body is executed. It is not possible put any code before super class constructor explicit call in the subclass constructor body.

<strong>Declaring an object</strong> (doesn't instantiate the object)
type name (e.g. Date today)

int i; (variable declaration)
abstract void myMethod(); (method declaration)

<strong>Instantiating an object</strong> (uses <code>new</code> operator, memory is allocated)
name = new + constructor (e.g. <code>today = new Date();</code>)

variable definition:
int i = 10;

method definition:
void myMethod(){
//do sth;
}

<strong>initializing an object</strong> - assigning values to the member variables, e.g.:
for the constructor:
<pre><code>Date(int year){
    this.year=year;
}</code></pre>
<code>today = new Date(12);</code>

<strong>Java "pass by value", i.e. pass the copy of (reference) value </strong>

<span style="font-family:Verdana,Arial,Helvetica;font-size:x-small;">Java passes parameters to methods using <em>pass by value</em> semantics.  That is, a copy of the value of each of the specified arguments to the  method call is passed to the method as its parameters. </span>

<span style="font-family:Verdana,Arial,Helvetica;font-size:x-small;">Note very clearly that a lot of people confuse the "reference" terminology  with respect to Java's <em>references to objects</em> and <em>pass by  reference</em> calling semantics.  The fact is, in dealing with Java's  <em>references</em> to objects, a copy of the <em>reference</em>'s value is  what is passed to the method -- it's <em>passed by value</em>.  This is,  for example, why you cannot mutate the (original, caller's) reference to  the object from inside the called method.</span>

<span style="font-family:Verdana,Arial,Helvetica;font-size:x-small;">From <a href="http://www.jguru.com/faq/view.jsp?EID=430996" target="_blank">http://www.jguru.com/faq/view.jsp?EID=430996</a>
</span>

<strong>ListedList</strong> consists of a sequence of nodes, each containing arbitrary data fields and one or two references ("links") pointing to the next and/or previous nodes. A linked list is a self-referential datatype because it contains a pointer or link to another data of the same type. Linked lists <strong>permit insertion and removal of nodes at any point in the list in constant time</strong>, but <strong>do not allow random access</strong>. Several different types of linked list exist: singly-linked lists, doubly-linked lists, and circularly-linked lists.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>82</wp:post_id>
  <wp:post_date>2009-02-04 23:34:45</wp:post_date>
  <wp:post_date_gmt>2009-02-04 23:34:45</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>java-fundametals</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[java-fundametalsencapsulation-d]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>34</wp:comment_id>
    <wp:comment_author><![CDATA[Pirsey]]></wp:comment_author>
    <wp:comment_author_email>vincie23del422@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://thepatchqg.blogspot.com</wp:comment_author_url>
    <wp:comment_author_IP>92.112.74.177</wp:comment_author_IP>
    <wp:comment_date>2009-04-24 11:16:55</wp:comment_date>
    <wp:comment_date_gmt>2009-04-24 11:16:55</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hey, cool tips. Perhaps I'll buy a bottle of beer to the man from that chat who told me to go to your site :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2009-04-24 11:16:55</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Desing patterns</title>
  <link>https://bmwieczorek.wordpress.com/2009/02/08/desing-patterns/</link>
  <pubDate>Sun, 08 Feb 2009 14:11:21 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=92</guid>
  <description/>
  <content:encoded><![CDATA[Strategy pattern
Encapsulate the problem that varies (algorithm) and program to an interface, not an implementation

Usage:
- related classes differ only in behavior (not data) - configure them with one of many behaviors
- many algorithms to solve problems
- algorithm uses data (internal structures) that client shouldn't know
- a class defines my behaviors - multiple condition statements in method(s)

Impl:
- All algorithms implement the same interface (with execute() method).
- The context class takes a reference to that algorithm interface via setter parameter - the reference of the particular algorithm obj is passed to the context. 
- The context calls its execute() method that internally calls the execute method on the specific algorithm implementation (delegate) via polimorphism. 

E.g. a component for file converter (doc to text/test to pdf ... converter)

Benefit
Building loosely coupled collection of interchangeable parts. This makes the software more extensible, maintainable and reusable. ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>92</wp:post_id>
  <wp:post_date>2009-02-08 14:11:21</wp:post_date>
  <wp:post_date_gmt>2009-02-08 14:11:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>desing-patterns</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Java static</title>
  <link>https://bmwieczorek.wordpress.com/2009/02/08/java-static/</link>
  <pubDate>Sun, 08 Feb 2009 16:41:59 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=97</guid>
  <description/>
  <content:encoded><![CDATA[static properties/methods:
- can be referenced without creating an instance of the class.
- are shared by all members and exist for all runtime
- are allocated when the class is loaded
- can only be declared in outer classes (top level type) or in static nested classes

static variables are used to:
-  to share data (be careful*, do not expose publicly )
-  to define constants (static final variable means "constant", usually used with public access as global constants e.g.
<code>public static final int PI = 3.14;</code>)

*Do not use static variables when multi-threading - several threads would override the same shared variable.

static methods are used:
- in utility classes (Utils.Math) - usually takes input parameters and return the result
- as factory methods
this classes should not be instantiated.

static method:
- is automatically final, so cannot be overridden, cannot be declared as abstract
- can always call/be called by  static methods/fields (common scenario)
- can always called by instance methods
- can call instance fields/methods only via their own object reference:

<code>
class A {
&nbsp; &nbsp; int i=0;
&nbsp; &nbsp; void doSth(){}</code>
<code>
&nbsp; &nbsp; static void call() {
&nbsp; &nbsp; &nbsp; &nbsp; A a = new A();
&nbsp; &nbsp; &nbsp; &nbsp; a.doSth();</code>
<code>
&nbsp; &nbsp; &nbsp; &nbsp; // it is not possible to directly access
&nbsp; &nbsp; &nbsp; &nbsp; // instance variables i or call directly
&nbsp; &nbsp; &nbsp; &nbsp; // instance directly instance method doSth()
</code><code>
&nbsp; &nbsp; &nbsp; &nbsp; // it won't compile:
&nbsp; &nbsp; &nbsp; &nbsp; // doSth();
&nbsp; &nbsp; &nbsp; &nbsp; // i=1;
</code><code>
&nbsp; &nbsp; &nbsp; &nbsp; // static methods do not have access to 'this',
&nbsp; &nbsp; &nbsp; &nbsp; // so it will also not compile:
&nbsp; &nbsp; &nbsp; &nbsp; // this.doSth();
&nbsp; &nbsp; &nbsp; &nbsp; // this.i=1;
&nbsp; &nbsp; }
}
</code>
there is no polimorphism, e.g. Child extends Parent, both have print() method printing its class name:

<code>Parent p = new Parent();
p.print(); // prints parent
Child c = new Child();
c.print(); // prints child
Parent pc = new Child();
pc.print(); // prints parent !! 
</code>

for instance methods, the 'child' would be printed via polimorphism, the overridden method will not be used

inheritance - in the different sense:
<code>Child</code> extends <code>Parent</code> and only <code>Parent</code> class have print implementation, then:
<code>Child.print()</code>
will call internally <code>Parent.print()</code>


<strong>static initializing block</strong>
<code>
class ClassWithStaticBlock {
&nbsp; &nbsp; static {
&nbsp; &nbsp; &nbsp; &nbsp; System.out.println("Static block");
&nbsp; &nbsp; }</code><code>
&nbsp; &nbsp; public ClassWithStaticBlock() {
&nbsp; &nbsp; &nbsp; &nbsp; System.out.println("Constructor body");
&nbsp; &nbsp; }
&nbsp; &nbsp; public static void doSth() {
&nbsp; &nbsp; &nbsp; &nbsp; System.out.println("Method body");
&nbsp; &nbsp; }
}</code>
<code>
public class InitializeByConstructor { 
&nbsp; &nbsp; public static void main(String[] args) {
&nbsp; &nbsp; &nbsp; &nbsp; new ClassWithStaticBlock();
&nbsp; &nbsp; &nbsp; &nbsp; new ClassWithStaticBlock();
&nbsp; &nbsp; }
}
</code>
Result:
<code>Static block
Constructor body
Constructor body</code>

or 

<code>public class InitializeByAccessingStaticMethod {
&nbsp; &nbsp; public static void main(String[] args) {
&nbsp; &nbsp; &nbsp; &nbsp; ClassWithStaticBlock.doSth();
&nbsp; &nbsp; }
}</code>

Result:
<code>Static block
Method body</code>

Initialization by constructor makes sense when class contains non-static instance fields. In case of all static methods/fields, refer to them by class name (not by class instance).

<strong>initialization order</strong>
<code>
class BaseClass {</code>
<code>
&nbsp;&nbsp;static String myBaseStaticText=basesay("base static");</code>
<code>
&nbsp; &nbsp; String myBaseText = basesay("base local field");</code>
<code>
&nbsp; &nbsp; public BaseClass() {
&nbsp; &nbsp; &nbsp; &nbsp; basesay("base constructor");
&nbsp; &nbsp; }</code>
<code>
&nbsp; &nbsp; static String basesay(String text) {
&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(text);
&nbsp; &nbsp; &nbsp; &nbsp; return text;
&nbsp; &nbsp; }
}</code>
<code>
public class InitializationTest extends BaseClass {</code>
<code>
&nbsp; &nbsp; static String myStaticText = say("static");</code>
<code>
&nbsp; &nbsp; String myText = say("local field");</code>
<code>
&nbsp; &nbsp; public InitializationTest() {
&nbsp; &nbsp; &nbsp; &nbsp; say("constructor");
&nbsp; &nbsp; }</code>
<code>
&nbsp; &nbsp; public static void main(String[] args) {
&nbsp; &nbsp; &nbsp; &nbsp; new InitializationTest();
&nbsp; &nbsp; }</code>
<code>
&nbsp; &nbsp; static String say(String text) {
&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(text);
&nbsp; &nbsp; &nbsp; &nbsp; return text;
&nbsp; &nbsp; }
}
</code>

Output:
<code>
base static
static
base local field
base constructor
local field
constructor
</code>

Static member (nested) class is instantiated independently from the enclosing outer class. There is no associated outer class object.
Non-static inner class objects always have an associated outer class object.

Static (and private/public/protected) keyword to declare a local field/class cannot be used inside the body of any method, only final and default access is permitted.

Anonymous classes are not allowed to declare static fields/methods. Anonymous classes when used in static context (inside static method or declaring&amp;initializing static member variable), have only access to static member variables (not to instance member variables). Anonymous classes used in non-static context have access to both static and non-static member variables.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>97</wp:post_id>
  <wp:post_date>2009-02-08 16:41:59</wp:post_date>
  <wp:post_date_gmt>2009-02-08 16:41:59</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>java-static</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Inner classes</title>
  <link>https://bmwieczorek.wordpress.com/2009/02/18/inner-classes/</link>
  <pubDate>Wed, 18 Feb 2009 14:32:25 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=115</guid>
  <description/>
  <content:encoded><![CDATA[<strong> Non-static inner class</strong>:
- holds the reference to the enclosing outer class: <code>Outer.<strong>this</strong></code>
- has access to both static and non-static fields/methods from the enclosing class:
<code>Outer.staticMethod()</code> or <code>Outer.<strong>this</strong>.nonStaticMethod()</code>
- cannot declare static fields/methods/inner classes (nested classes)
- can declare non-static fields/methods/inner classes
- is created in two steps by creating an instance of the outer class and then invoking the <code>.<strong>new</strong></code> and the inner class constructor on that instance reference:
<code>Outer o = <strong>new</strong> Outer();</code>
<code>Outer.NonStaticInner nsi = o.<strong>new</strong> NonStaticInner();</code>

<strong>Static inner class</strong> (nested class):
- doesn't hold the reference to the enclosing class
- has access only to static fields/methods from the enclosing class: <code>Outer.staticMethod()</code> or <code>Outer.staticField</code> 
- cannot access enclosing class instance methods/fields since it cannot use <code>Outer.<strong>this</strong></code>
- can declare both static and non-static fields/methods/inner classes
- is created directly by <code><strong>new</strong></code> and the inner class constructor
<code>Outer.StaticInner si = <strong>new</strong> Outer.StaticInner();</code>

Inheriting from an inner class
Due to the fact that inner class constructor must attach to a reference of the enclosing class object, a class inheriting from an inner class must have a constructor with a reference to the outer class as an argument and this constructor must explicitly call <code>super()</code> on that reference in order to compile:
<pre>public class ExtendingInner extends OuterWithInner.Inner {
   ExtendingInner(OuterWithInner owi) { owi.super(); }
   public static void main(String[] args) {
      new ExtendingInner(new OuterWithInner());
   }
}
</pre>

<strong>Usage</strong>

Static nested class: to declare a component that the enclosing type is composed of, this component does not use any other member fields/methods of the enclosing class, e.g. static class Entry&lt;K,V&gt;{K key; V value; + getters/setters} in the java.util.Map impls.

Non-static inner class: to adapt the view of enclosing type instance into view of unrelated class, e.g. view the enclosing class Entry[] array and present it as an interable collection, ie. private class MyIterator implements Iterator to iterate over entries and a getter method returning new instance of that iterator. The inner MyIterator class has to be non-static to access enclosing type entries.
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>115</wp:post_id>
  <wp:post_date>2009-02-18 14:32:25</wp:post_date>
  <wp:post_date_gmt>2009-02-18 14:32:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>inner-classes</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>RTTI (Runtime type information)</title>
  <link>https://bmwieczorek.wordpress.com/2009/02/27/rtti-runtime-type-information/</link>
  <pubDate>Fri, 27 Feb 2009 22:51:49 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=158</guid>
  <description/>
  <content:encoded><![CDATA[Reflection - discover and use information about objects and classes at runtime. In order to discover the type of an unknown object, the JVM will open and examine .class file (locally or on the network) at runtime and load the Class object. ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>158</wp:post_id>
  <wp:post_date>2009-02-27 22:51:49</wp:post_date>
  <wp:post_date_gmt>2009-02-27 22:51:49</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>rtti-runtime-type-information</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Java equals, == and !=</title>
  <link>https://bmwieczorek.wordpress.com/2009/03/06/java-equals-and/</link>
  <pubDate>Fri, 06 Mar 2009 21:58:20 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=160</guid>
  <description/>
  <content:encoded><![CDATA[Primitives:
int i = 1;
int ii = 1;
(i==ii) is true, (i!=ii) is false

Objects: 
== compares references (true only if they are the same references, point to the same memory)
obj.equals(obj2) - by default compares references unless explicitly overridden (

String:
String s = "text";
String ss = "text";
(s==ss) is true, (s.equals(ss)) true

class A{}
A a = new A();
A aa = new A();
(a==aa) is false, (a.equals(aa)) is false]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>160</wp:post_id>
  <wp:post_date>2009-03-06 21:58:20</wp:post_date>
  <wp:post_date_gmt>2009-03-06 21:58:20</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>java-equals-and</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>ORM with Hibernate</title>
  <link>https://bmwieczorek.wordpress.com/2009/03/07/orm-with-hibernate/</link>
  <pubDate>Sat, 07 Mar 2009 10:48:28 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=163</guid>
  <description/>
  <content:encoded><![CDATA[Layered architecture:
- defines interfaces for various concerns (presenstation,  business logic and persistance)
- layers communicate from top do bottom
- layer are dependent only on the layer directly below it and the are unaware of any other layers

Presentation - topmost layer, UI (user interface) logic responsible for presentation, control of page and screen navigation
Business - implementing business rules or system requirements, it may have its own business domain entities or reuse the model defined by the persistence layer
Persistence - responsible for storing and retrieving data from one or more data stores (e.g. database), this layer includes the business domain entities (necessarily at least metadata model)

Every application has a set of interceptors, infrastructural helper or utility classes that are used in every layer (e.g. Exception classes for error handling), they don't form a layer (outside layers).

DAO pattern (data access object) - hide complex JDBC code and non-portable SQL from business logic.

In high concurrency web and enterprise application, serialization cannot be used as a persistence mechanism because it isn't possible to retrieve any data without deserializing the entrire stream. It cannot be used in an arbitrary search or aggregation of large datasets. It's even not possible to access or update a single object or subset independently.

ORM (object/relational mapping) - automated and transparent persistence of objects in Java application to the tables in the relational database, using metadata that describes the mapping between the objects and the database.

ORM has an API for:
- basic operations: create, read, update and delete on object of persisted classe
- queries referring classes and properties of classes
- mapping metadata
- interact with transactional objects to perform dirty checking, lazy association fetching and other optimization functions.

Full ORM automatically creates SQL from a metadata-based description.
Efficient access to relational data is usually accomplished via table joins. You should avoid the <em>n+1 selects</em> problem and the <em>Cartesian product</em> problem (fetching to much data in a single select)
Object-oriented application usually access data by naviagating an object network (field.get...().get...()).

ORM advantages:
productivity
- no messy SQL
- no tedious persistence related code
- lets you focus on business logic
maintainability
- fewer lines of code:
-- system more understandable (focus on business problem)
-- easier to refactor
- no tight coupling between relational representation and domain model (easier to change)
performance
- written by performance experience people
- optimized for different databases

<strong>Hibernate</strong>
The persisted class should contain the identifier attribute (e.g. long Id with respective setters and getters) to allow the application to access database identity - the primary key value - of a persistent object. If two instances have the same identifier value, they represent the same row in the database.
No-argument constructor is a requirement (Hibernate use reflection on this constructor to instantiate objects).

Files:
in src package (src/main/java/com/bawi/... or src/main/resources/com/bawi...)
- A.java
- A.hbm.xml (mapping file for class A)
in src folder (src/main/java or resources)
hibernate.cfg.xml (configures datasource: driver, db connection settings, sql dialect, schema autogeneration ... and imports the mapping files *.hbm.xml)

Hibernate is usually initialized by building <code>SessionFactory</code> object (build only once - single instance, thread save, can be shared) from a <code>Configuration</code> object which is a representation of a configuration file. First the <code>hibernate.properties</code> in root of classpath is read, then <code>hibernate.cfg.xml</code>. Latter overrides the former.

<code>SessionFactory sessionFactory =
</code><code> new Configuration() //read /hibernate.properties
</code><code> .configure()</code><code> //or .configure("/a/b.hbm.xml") to read /hibernate.xml or /a/b.hbm.xml
</code><code> .setProperty(Environment.HBM2DDL_AUTO, "create") //optional to add/override existing conf
</code><code> .addResource("a/c.hbm.xml") //</code><code>optional to add/override existing mapping</code>
<code> .buildSessionFactory();
</code>

Hibernate Session - a single threaded non-shared object that represents a particular unit of work with the database. You can call store and load methods on the session object.

Transaction - you can programmatically set transation boundaries (via <code>session.beginTransaction()</code> and <code>transaction.commit()</code>), but it is optional.

HQL - object-oriented (hibernate) query language

<em>Automatic dirty checking</em> - load object via <code>session.get(...)</code>, modify loaded object via setters - hibernate will detect changes in object state and automatically update database (execute update sql query) without explicit <code>save()</code>.

<code>Cascading save</code> - if already persisted object will get the reference to the new object, then the new object will be automatically persisted (without explicit <code>save()</code>).

<em>transactional write-behind</em> - Hibernate reorders internally SQL statements in order to avoid foreign key violations.

<strong>Connection pooling</strong>
Instead of creating a connection to the database every time you want to do a unit of work, you should reuse connection from the connection pool - request a connection and return it back to the pool when finished. Acquiring connection from database is expensive (some databases create even a new server process for each connection). Connection pool:
- maintain idle connections (removes unused connections after timeout)
- cache prepared statements across requests for a connection (prepared statements are expensive to create)
Connection pooling can be provided by the application server, by the application itself or via 3rd party library.

With Hibernate a client doesn't directly request the connection pool, but call hibernate <code>session</code>,<code>query</code> and <code>transaction</code>, hibernate manages database connection pooling for you.
Unmanaged application runtime = without any application server.

Hibernate execute SQL statements <em>asynchronously</em>, usually when the transaction is committed.

<strong>Hibernate EntityManager </strong>(JPA compliant)
It is a wrapper around Hibernate Core that provides JPA programming interfaces. Create <code>persistence.xml</code> defining persistence unit and connection properties. The hibernate <code>hbm.xml</code> and/or java annotated  files are automatically scanned which can be very handy in big projects. Provides standarized and simplified configuration.

The JMX specification defines the following components:
■ The JMX MBean—A reusable component (usually infrastructural) that
exposes an interface for management (administration)
■ The JMX container—Mediates generic access (local or remote) to the MBean
■ The JMX client—May be used to administer any MBean via the JMX container]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>163</wp:post_id>
  <wp:post_date>2009-03-07 10:48:28</wp:post_date>
  <wp:post_date_gmt>2009-03-07 10:48:28</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>orm-with-hibernate</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="hibernate"><![CDATA[Hibernate]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[layered-architecture]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Filering content of filtered files</title>
  <link>https://bmwieczorek.wordpress.com/2009/03/10/filering-content-of-filtered-files/</link>
  <pubDate>Tue, 10 Mar 2009 12:46:42 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=191</guid>
  <description/>
  <content:encoded><![CDATA[Available files: 
a1:
a 1
aa 2

b1: 
b 1
bb 2

find -name 'a[1-2]' -exec cat {} \; | awk '{print $1}'  &gt; f]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>191</wp:post_id>
  <wp:post_date>2009-03-10 12:46:42</wp:post_date>
  <wp:post_date_gmt>2009-03-10 12:46:42</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>filering-content-of-filtered-files</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Architectural patterns</title>
  <link>https://bmwieczorek.wordpress.com/2009/07/25/architectural-patterns/</link>
  <pubDate>Sat, 25 Jul 2009 09:24:51 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=205</guid>
  <description/>
  <content:encoded><![CDATA[<strong>Model - View - Controller
</strong>- changes to UI should be easy, possible at runtime and should not impact functional core of the application
- 3 components of application: processing, output and input
- separation of the model from the view and controller allows multiple views of the same model

a) model - core data and functionality, independent of out- and input representations
b) view - obtain data from the model and display information to the user (&gt;=1 views)
c) controller - receives input from an associated view (e.g. button press) - events that are translated to request and sent to the model or to the view]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>205</wp:post_id>
  <wp:post_date>2009-07-25 09:24:51</wp:post_date>
  <wp:post_date_gmt>2009-07-25 09:24:51</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>architectural-patterns</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="architectural-patterns"><![CDATA[Architectural patterns]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>State pattern</title>
  <link>https://bmwieczorek.wordpress.com/2009/07/25/state-pattern/</link>
  <pubDate>Sat, 25 Jul 2009 20:55:46 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=210</guid>
  <description/>
  <content:encoded><![CDATA[<strong>State pattern allows an object to alter its behavior when its internal state changes (a), the object would appear to change its class (b).</strong>
A context (e.g. a state machine) has an internal state and public action methods which have different behavior based on the internal state. The implementation of these methods could have switch/case statements based on the state but this solution would be hardly extensible. Instead of that we could copy the context's public interface to the state interface and write concrete state classes implementing that state interface and providing implementation relevant for each state (ad a). Then when a request in made on the context, it delegates it to the method call on an appropriate  state. Internally they will do the business logic and may change the state of the context.

The concrete classes are registered in the context and initial state is set (e.g. created and initialized in context constructor). The constructor of each of these classes takes a parameter a reference to the context, so that the context state can be changed.

As a result, a new state will be encapsulated into a new class and we will avoid extensive switch/case of if statements.

The composition of the state classes (registration) allows us to reference different state objects what looks like change a class (ad b).

By encapsulating each state into class, we localize any changes that have to be made. State transitions can be controlled by state classes or by context. State classes can be shared among context instances (make context classes final static, they shouldn't have the any internal state).]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>210</wp:post_id>
  <wp:post_date>2009-07-25 20:55:46</wp:post_date>
  <wp:post_date_gmt>2009-07-25 20:55:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>state-pattern</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="design-patterns"><![CDATA[Design patterns]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Strategy pattern</title>
  <link>https://bmwieczorek.wordpress.com/2009/07/25/strategy-pattern/</link>
  <pubDate>Sat, 25 Jul 2009 21:56:57 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=216</guid>
  <description/>
  <content:encoded><![CDATA[Stratety pattern defines a group of algorithms, encapsulates each one and makes the interchangeable. Strategy lets the algorithm vary independently from the clients that use it.

When designing the application identify the aspects that:
- stay the same - then use inheritance so the subclasses reuse the code from superclass
- varies, then separate (encapsulate) them

These vary parts can then be changed or extended without affecting the ones that don't change.
It is not a good practice to use inheritance in case of varying parts since,e.g. if someone creates an abstract method in super class, then every super class is forced to implement (or provide empty impl) even if this method is not used at all.

Composition (has-a relationship) gives more flexibility, not only lets you encapsulate different implementations of a interfaced behavior (algorithms), but it also allows to change the behavior at runtime (via setters injecting new interfaced implementation and delegating the call to that impl).

Strategy pattern is an alternative to inheritance - where you are stuck with the behavior of the subclass even if you need to change it. With the strategy pattern you can configure different classes with different behavior by composing with a different object.

Example:
The main class contains a instance variable of the type of an interface that different algorithms implement. The main class has a setter method to assign the reference to that variable to a particular algorithm implementation. The call to the method of the main class will be delegated to the interfaced method of the concrete algorithm class.

The state pattern allows you get rid of many conditional statements and encapsulate behaviors into state objects. When you change the state object, the behavior will change.

The state and strategy patterns have the same class diagram, but they differ in intent:
- strategy configures context with a behavior/algorithm
- state allows context to change its behavior as its state changes]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>216</wp:post_id>
  <wp:post_date>2009-07-25 21:56:57</wp:post_date>
  <wp:post_date_gmt>2009-07-25 21:56:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>strategy-pattern</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="design-patterns"><![CDATA[Design patterns]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>OO basics and principles</title>
  <link>https://bmwieczorek.wordpress.com/2009/07/26/oo-basics-and-principles/</link>
  <pubDate>Sun, 26 Jul 2009 14:58:36 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=223</guid>
  <description/>
  <content:encoded><![CDATA[<strong>Basics</strong>
<ul>
	<li><strong>Abstraction </strong>(with information hiding allows to create a layer between a client and an internal implementation of a class, by exposing, extracting and implifying only the important data/behavior and hiding the irrelevant implementation details behind an abstract interface)</li>
	<li><strong>Encapsulation </strong>(putting behavior/data into a class based on a responsibility it should have; use data hiding concept to hide the internal implementation details of the class behind an interface (public methods in the class). Make member variables (fields) and internally used methods private and expose only the minimal set of public methods. )</li>
	<li><strong>Polymorphism </strong>(substitutability of objects with the same interface at run time)</li>
	<li><strong>Inheritance </strong>(ability to inherit behavior/data (methods/fields) by the subclass (derived class) from the superclass (base class); use the inheritance only when you want to achieve code reuse only for the common behavior/data that doesn't vary)</li>
</ul>
<strong>Principles</strong>
<ul>
	<li><strong>Encapsulate what varies</strong> (put behavior that changes into separate classes implementing a behavior interface; use inheritance for the common behavior that stays the same for all subclasses to achieve code reuse)</li>
	<li><strong>Favor composition over inheritance</strong> (enables flexibility - state/strategy design patterns where you can change implementation of the behavior at runtime)</li>
	<li><strong>Program to interfaces not implementations </strong>(enables changes of the implementation without code change)</li>
	<li><strong>create loosely coupled designs between objects that interact
</strong></li>
	<li><strong>Classes should be opened for extension but closed for modification</strong> (public final method in the super class defining main system flow which is using abstract non-final protected template methods defining specific implementations in the subclasses)</li>
	<li><strong>Depend on abstractions, do not depend on concrete classes</strong></li>
	<li><strong>Only talk to your friends</strong> (expose only the interface required, nothing more so that in case of internal implementation change you don't need to change clients code, encapsulation, data hiding and abstraction)</li>
	<li><strong>Don't call us, we will call you</strong> (let the framework call your methods when needed and is configured to do so, enables you create loosely coupled systems, e.g. spring framework)</li>
	<li><strong>A class should have only one reason to change </strong>(one class has only one responsibility, e.g. state class should only hold one state, more clear code)</li>
</ul>
<strong>Tips</strong>
<ul>
	<li> Hide the internal implementation details of the class behind an interface (public methods in the class). Make member variables (fields) and internally used methods private and expose only the minimal set of public methods.</li>
	<li> Your classes should not just have collections of fields and their accessors, not just storing data but provide behavior - so if you are making repeated calls for data using accessors, that's a sign that some behavior should be moved to the object that has the data.</li>
	<li> <strong>Reference (identity) objects</strong> describes an object that is only one in the real world, e.g. Customer. All objects referencing the customer will reference the same object and changes to a customer are available to all the users of the Customer. You compare the references to the Customer by comparing their identities. Multiple <strong>Value objects</strong> can represent the same object (many object of the date 1-Jan-2009), Value objects are all interchangeable copies. You compare value objects by comparing the values they represent (not identities). Value objects should be immutable so that you don't update the shared date unpredictably, just create an new date object. Value object may have identity but don't use it for equality.</li>
	<li>Avoid storing unrelated or different types of objects into same collection. To store items use value objects or data objects (as opposed to storing every attribute in an ArrayList or HashMap). Provide wrapper classes around your
collections API classes like ArrayList, HashMap etc).  E.g.: An order has an id and list of lineItems. Each lineItem has an id and productName. Good approach is to create an immutable final LineItem class via constructor  (new LineItem(Long id, String productName)) and final id and final productName and expose only getters for these properties. Then add/remove each LineItem via interfaced add/remove(LineItem li) that internally will call add/remove on ArrayList&lt;LineItem&gt; and expose interfaced interator of this list.</li>
</ul>
<div id="_mcePaste" style="overflow:hidden;position:absolute;left:-10000px;top:771px;width:1px;height:1px;">

<strong>Basics</strong>
<ul>
	<li><strong>Abstraction </strong>(with information hiding allows to create a layer between a client and an internal implementation of a class, by exposing, extracting and implifying only the important data/behavior and hiding the irrelevant implementation details behind an abstract interface)</li>
	<li><strong>Encapsulation </strong>(putting behavior/data into a class based on a responsibility it should have; use data hiding concept to hide the internal implementation details of the class behind an interface (public methods in the class). Make member variables (fields) and internally used methods private and expose only the minimal set of public methods. )</li>
	<li><strong>Polymorphism </strong>(substitutability of objects with the same interface at run time)</li>
	<li><strong>Inheritance </strong>(ability to inherit behavior/data (methods/fields) by the subclass (derived class) from the superclass (base class); use the inheritance only when you want to achieve code reuse only for the common behavior/data that doesn't vary)</li>
</ul>
<strong>Principles</strong>
<ul>
	<li><strong>Encapsulate what varies</strong> (put behavior that changes into separate classes implementing a behavior interface; use inheritance for the common behavior that stays the same for all subclasses to achieve code reuse)</li>
	<li><strong>Favor composition over inheritance</strong> (enables flexibility - state/strategy design patterns where you can change implementation of the behavior at runtime)</li>
	<li><strong>Program to interfaces not implementations </strong>(enables changes of the implementation without code change)</li>
	<li><strong>create loosely coupled designs between objects that interact
</strong></li>
	<li><strong>Classes should be opened for extension but closed for modification</strong> (public final method in the super class defining main system flow which is using abstract non-final protected template methods defining specific implementations in the subclasses)</li>
	<li><strong>Depend on abstractions, do not depend on concrete classes</strong></li>
	<li><strong>Only talk to your friends</strong> (expose only the interface required, nothing more so that in case of internal implementation change you don't need to change clients code, encapsulation, data hiding and abstraction)</li>
	<li><strong>Don't call us, we will call you</strong> (let the framework call your methods when needed and is configured to do so, enables you create loosely coupled systems, e.g. spring framework)</li>
	<li><strong>A class should have only one reason to change </strong>(one class has only one responsibility, e.g. state class should only hold one state, more clear code)</li>
</ul>
<strong>Tips</strong>
<ul>
	<li> Hide the internal implementation details of the class behind an interface (public methods in the class). Make member variables (fields) and internally used methods private and expose only the minimal set of public methods.</li>
	<li>Your classes should not just have collections of fields and their accessors, not just storing data but provide behavior - so if you are making repeated calls for data using accessors, that's a sign that some behavior should be moved to the object that has the data.</li>
	<li> <strong>Reference (identity) objects</strong> describes an object that is only one in the real world, e.g. Customer. All objects referencing the customer will reference the same object and changes to a customer are available to all the users of the Customer. You compare the references to the Customer by comparing their identities. Multiple <strong>Value objects</strong> can represent the same object (many object of the date 1-Jan-2009), Value objects are all interchangeable copies. You compare value objects by comparing the values they represent (not identities). Value objects should be immutable so that you don't update the shared date unpredictably, just create an new date object. Value object may have identity but don't use it for equality.</li>
	<li>Avoid storing unrelated or different types of objects into same collection. To store items use value objects or data objects (as opposed to storing every attribute in an ArrayList or HashMap). Provide wrapper classes around your
collections API classes like ArrayList, HashMap etc).  E.g.: An order has an id and list of lineItems. Each lineItem has an id and productName. Good approach is to create a LineItemValu</li>
</ul>
</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>223</wp:post_id>
  <wp:post_date>2009-07-26 14:58:36</wp:post_date>
  <wp:post_date_gmt>2009-07-26 14:58:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>oo-basics-and-principles</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="design-patterns"><![CDATA[Design patterns]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Adapter pattern</title>
  <link>https://bmwieczorek.wordpress.com/2009/07/26/adapter-pattern/</link>
  <pubDate>Sun, 26 Jul 2009 22:14:59 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=230</guid>
  <description/>
  <content:encoded><![CDATA[Adapter pattern

Suppose we have an HR system that uses a Billing System, e.g. a client of HR system wants full details of an employee, including salary. However, HR system doesn't have salary information stored in its database and needs to call billing system to get employee's salary. So the HR system calls <code>int getSalary(String employeeName, String employeePesel)</code> on the reference defined by Billing System interface.

Now suppose, that HR system wants to change the billing system to the 3rd party implementation, that has a different interface method to obtain employee payment: <code>Payment getPersonPayment(Person person)</code>. 

So we need to adapt HR system to the new Billing system interface. However, we don't want to change HR system implementation.

The solution is the following:
In the current code, HR system sets the implementation of Billing system via constructor or setter method. So we can set the implementation of the adapted 3rd party Billing System as long the adapted version matches the old billing system interface. The solution is to create an adapter class that implements this old billing system interface but internally the call to each overrided method will be delegated to the new 3rd party interface.


Draft: We have a class that doesn't apply to our target interface. We need to wrap our class with a new adapter class that implements the target interface and has a member variable of type of our class and sets it via constructor/setter. The call to the adapter class method is delegated internally to our class method call.

Suppose you change your 3rd party library, that has different interface than previous. You can't change vendor's interface and you don't want to change your existing code.

<strong>Wrapping an object</strong>
When an object A is said to "Wrap" object B it means that Object A HAS A reference to the Object B and deligates calls to it.
Putting an object as an member variable of another object(say domain object) for providing more functionality or for business purpose is called wrapping an object. Example: wrapper classes that wraps primitive types such that primitive type values can be treated as objects.
"Wrapping" an object means that a number of methods on an object defer control to another method hidden behind a private field.


]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>230</wp:post_id>
  <wp:post_date>2009-07-26 22:14:59</wp:post_date>
  <wp:post_date_gmt>2009-07-26 22:14:59</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adapter-pattern</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="design-patterns"><![CDATA[Design patterns]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>SOA fundamentals</title>
  <link>https://bmwieczorek.wordpress.com/2009/08/31/soa-fundamentals/</link>
  <pubDate>Mon, 31 Aug 2009 09:19:50 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=238</guid>
  <description/>
  <content:encoded><![CDATA[The key is independent services with defined interfaces that can be called to perform their tasks in a standard way, without a service having foreknowledge of the calling application, and without the application having or needing knowledge of how the service actually performs its tasks.

Using messages across defined message channels decreases the complexity of the end application, thereby allowing the developer of the application to focus on true application functionality instead of the intricate needs of a communication protocol.

SOA enables the creation of applications that are built by combining loosely coupled and interoperable services.

Service-Oriented Architecture (SOA) is an architectural approach (or style) for constructing complex software-intensive systems from a set of universally interconnected and interdependent building blocks, called services.

SOA promotes the goal of separating users (consumers) from the service implementations. Services can therefore be run on various distributed platforms and be accessed across networks. This can also maximize reuse of services.

A service comprises a stand-alone unit of functionality available only via a formally defined interface. Services can be some kind of "nano-enterprises" that are easy to produce and improve. Also services can be "mega-corporations" that are constructed as coordinated work of sub-ordinate services.

Services generally adhere to the following principles of service-orientation:
    * abstraction
    * autonomy
    * composability
    * discoverability
    * formal contract
    * loose coupling
    * reusability
    * statelessness

Implementation of services should be treated as separate projects from the larger project for three reasons:
    * It promotes the concept to the business that services can be delivered quickly and independently from the larger and slower-moving projects common in the organization. The business starts understanding systems and simplified user interfaces calling on services. This advocates agility.
    * It promotes the decoupling of services from its consuming project. This encourages good design where the service is designed without knowing who its consumers are.
    * Documentation and test artifacts of the service are not embedded within the detail of the larger project. This is important when the service needs to be reused later.

An indirect benefit of SOA is dramatically simplified testing. Services are autonomous, stateless, with fully documented interfaces, and separate from the cross-cutting concerns of the implementation. 

SOA-based environments can include many services that exchange messages to perform tasks. 

Applications running on either platform can also consume services running on the other as Web services that facilitates reuse. 

These services inter-operate based on a formal definition (or contract, e. g., WSDL) that is independent of the underlying platform and programming language. The interface definition hides the implementation of the language-specific service.

SOA: app frontend, service (contract, impl (business logic &amp; data) and iface), service repository and service bus.

Enterprise architects believe that SOA can help businesses respond more quickly and cost-effectively to changing market conditions[11]. This style of architecture promotes reuse at the macro (service) level rather than micro (classes) level. It can also simplify interconnection to – and usage of – existing IT (legacy) assets.

Web services can implement a service-oriented architecture. Web services make functional building-blocks accessible over standard Internet protocols independent of platforms and programming languages. These services can be new applications or just wrapped around existing legacy systems to make them network-enabled.

The service provider creates a Web service and possibly publishes its interface and access information to the service registry. 

As one of the most important benefits of SOA is its ease of reuse.

Some criticisms of SOA depend on the assumption that SOA is just another term for Web Services. For example, some critics claim SOA results in the addition of XML layers, introducing XML parsing and composition. In the absence of native or binary forms of Remote Procedure Call (RPC), applications could run slower and require more processing power, increasing costs.  

The service requester or Web service client locates entries in the broker registry using various find operations and then binds to the service provider in order to invoke one of its Web services.

RPC Web services present a distributed function (or method) call interface that is familiar to many developers.

Web services can also be used to implement an architecture according to Service-oriented architecture (SOA) concepts, where the basic unit of communication is a message, rather than an operation. This is often referred to as "message-oriented" services.

SOA Web services are supported by most major software vendors and industry analysts. Unlike RPC Web services, loose coupling is more likely, because the focus is on the "contract" that WSDL provides, rather than the underlying implementation details.

Middleware Analysts use Enterprise Service Buses which combine message-oriented processing and Web Services to create an Event-driven SOA. One example of an open-source ESB is Mule.

Finally, Representational State Transfer (REST) attempts to describe architectures which use HTTP or similar protocols by constraining the interface to a set of well-known, standard operations (like GET, POST, PUT, DELETE for HTTP). Here, the focus is on interacting with stateful resources, rather than messages or operations. 
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>238</wp:post_id>
  <wp:post_date>2009-08-31 09:19:50</wp:post_date>
  <wp:post_date_gmt>2009-08-31 09:19:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>soa-fundamentals</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="architectural-patterns"><![CDATA[Architectural patterns]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Class structure good practice</title>
  <link>https://bmwieczorek.wordpress.com/2009/10/11/class-structure-good-practice/</link>
  <pubDate>Sun, 11 Oct 2009 21:20:32 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=279</guid>
  <description/>
  <content:encoded><![CDATA[//members (excl. instance methods)
1. static member fields/methods/nested classes
2. instance member fields/inner classes

3. constructors

// public methods
4. implementation of interfaces (section per interface) +private helper methods
5. other public methods

//protected
6. protected abstract methods
7. protected methods for use for subclasses

//others
8. other impl methods]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>279</wp:post_id>
  <wp:post_date>2009-10-11 21:20:32</wp:post_date>
  <wp:post_date_gmt>2009-10-11 21:20:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>class-structure-good-practice</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Eclipse refactoring</title>
  <link>https://bmwieczorek.wordpress.com/2009/11/28/eclipse-refactoring/</link>
  <pubDate>Sat, 28 Nov 2009 10:38:30 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=282</guid>
  <description/>
  <content:encoded><![CDATA[<strong>Move method to another class (alt+shift+v)</strong>
Given: Class A contains method m and we want to move the method to class B.
Solution: Create a reference to class B in class A (if not exists), select method m (move the cursor to the method name and press alt+shift+arrow), refactor (alt+shift+t) and choose move option (or directly alt+shift+v to move the selected method)
Note: if you want to move a method which implementation references class fields, then the default move refactoring will extend method signature to include 'this' reference of original class. Clean up of that can be tedious. I suggest in this case to do the following:
1) extend method sygnature with class fields via 'introduce parameter' refactoring so that state to the method to be moved is only passed via paramters
2) move method to the destination class
3) create class fields in the destination class named the same as method parameters added in 1)
4) use change method signature shortcut to remove method parameters added in 1)


<strong>Push (move) method/field down to subclasses (push up to super classes)</strong>
Given: Class Subclass extends Superclass, we want to move (push down) the method m from Superclass to the Subclass.
Solution: select the method and press ctrl+shift+t (refactor menu for the selected method), choose push down (to move the method to subclasses) or push up (to move the method to the super class)

<strong>Extract interface from class</strong>
Given: Class MyImpl has public method myMethod (only public ones), we want to create interface MyInterface with myMethod that will be implemented by MyImpl class.
Solution: press ctrl+shitf+t (refactor menu) and choose public methods to be included in the extracted interface

<strong>Change the type of an object in the declaration to one of its supertypes</strong>
Given: Class Aex extends A, we have a declaration <code>Aex a</code>;  we want to refactor to <code>A a</code>.
Solution: Select the reference, press ctrl+shift+t and choose generalize type

<strong>Extract local variable (alt+shift+L)</strong>
Given: We want to extract into local variable what a method returns or a primitive or string used as a parameter, e.g. myM(), myM(1L) or myM("text")
Solution: Select the whole myM method expression, primitive 1L or string "text" and press alt+shift+L

<strong>Extract constant</strong>
The same as extract local variable but places it as a constant field (choose variable's definition and press alt+shift+t and choose extract constant)

<strong>Inline method's body or field's value</strong>
Given: <pre><code>String text="Hi";
myM(text);</code></pre>
we want to have <code>myM("Hi");</code> only.
Solution: In order to insert method's code or field's value, select the reference where it it used (not defined) and press alt+shift+I

<strong>Extracting (moving) method's block of code into a new separate method alt+shift+M</strong>
Given: if a method does more than one thing, is too long or we want to reuse some of its code, we can extract the block of the code into a separate helper method
Solution: Select the block of code and press alt+shift+M to extract it to the new separated method

<strong>Introduce parameter (move local variable to be used as a method's parameter)</strong>
Given:
caller: <code>ref.my()</code>
callee: <pre><code>void m(){
   String text = "Hi";
   System.out.println(text);
}</code></pre>
expected after refactoring:
caller: <code>m("Hi");</code>
callee: <pre>void m(String text) {
   System.out.println(text);
}</pre>
Solution: Select local variable value ("Hi"), press alt+shift+t and choose introduce method parameter (and inline the local variable to println method)

<strong>Move the local variable declaration to the top of the class</strong>
Solution: Select the variable's reference, refactor via choosing Convert local variable to field. In the dialog you can choose where it field will be initialized (method, constructor or at field declaration).

<strong>Create getters/setters for a field</strong>
Solution: Select field reference and refactor it via the encapsulate field option.

<strong>Create factory method</strong>
Solution: create conctructor, select in and refactor it with introduce factory option.


<strong>Shortcuts</strong>
Current class: (ctrl+)
<strong>O</strong>utline methods/fields ctrl+o
Go to next error/warning ctrl+.
Go to previous error/warning ctrl+,
Go to <strong>L</strong>ine number
<strong>F</strong>ind/replace text
<strong>O</strong>rganize imports ctrl+shift+O
static i<strong>m</strong>ports ctrl+shift+M on static method/field/enum
<strong>D</strong>elete the line ctrl+shift+D
Ctrl + Q for going to last edited place
<strong>2</strong>nd <strong>r</strong>ename for local renaming in file ctrl+2,r

<strong>Show in the view of other classes</strong>
<strong>type hierarchy view ctrl+t</strong> (e.g. when selected a method, it will list its declaration and all its implementations; when selected a type it will show its type hierarchy)
<strong>call/access hierarchy popup ctrl+alt+h</strong>, used for methods, fields, classes (use filters for results exclusion *Test classes)

Search (<strong>g</strong>o to)
declarations ctrl+g
references ctrl+shift+g
text ctrl+alt+g



Search in workspace (ctrl+shift+) for:
Open <strong>R</strong>esource ctrl+shift+R
Open <strong>T</strong>ype ctrl+shift+T
Open <strong>L</strong>isting of Eclipse shortcuts ctrl+shift+L (or Spring STS quick search)

Views/tabs:
F4 - type hierarchy
Shift+Alt+Q, P - package
Search opened tabs ctrl+e


<strong>Refactoring</strong> alt+shift+
<strong>L</strong>ocal variable extract
<strong>I</strong>nline method
<strong>C</strong>hange method signature
<strong>R</strong>ename
<strong>M</strong>ethod extraction
Mo<strong>v</strong>e method
Refac<strong>t</strong>or menu

Removing method: 
1) remove method body
2) click refactor/inline on method definition

]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>282</wp:post_id>
  <wp:post_date>2009-11-28 10:38:30</wp:post_date>
  <wp:post_date_gmt>2009-11-28 10:38:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>eclipse-refactoring</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="eclipse"><![CDATA[eclipse]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>395</wp:comment_id>
    <wp:comment_author><![CDATA[nanda]]></wp:comment_author>
    <wp:comment_author_email>umailnandu@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>115.249.209.53</wp:comment_author_IP>
    <wp:comment_date>2012-08-08 11:25:56</wp:comment_date>
    <wp:comment_date_gmt>2012-08-08 09:25:56</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[really useful commands]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1344422290.923942089080810546875;s:7:"message";s:50:"bmwieczorek changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"bmwieczorek";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1344422290</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1344417956.7215859889984130859375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-08-08 09:25:56</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>409</wp:comment_id>
    <wp:comment_author><![CDATA[Hugo]]></wp:comment_author>
    <wp:comment_author_email>hugojneves@hotmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>88.157.194.22</wp:comment_author_IP>
    <wp:comment_date>2013-05-31 17:08:27</wp:comment_date>
    <wp:comment_date_gmt>2013-05-31 15:08:27</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks for the tip on "Extracting (moving) method’s block of code into a new separate method".]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1370012908.01325893402099609375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1370084606</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1370084607.4695351123809814453125;s:7:"message";s:50:"bmwieczorek changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"bmwieczorek";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-05-31 15:08:27</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Remove polish characters</title>
  <link>https://bmwieczorek.wordpress.com/2009/12/16/remove-polish-characters/</link>
  <pubDate>Wed, 16 Dec 2009 19:40:57 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/2009/12/16/remove-polish-characters/</guid>
  <description/>
  <content:encoded><![CDATA[<strong>Scenario</strong>
directory contains many files which names contain spaces and are in polish encoding, e.g.:
ls -1
ą ć.txt
Ą ź.txt
We want to rename these files into: &#039;a c.txt&#039; and &#039;A z.txt&#039;
<strong>Solution</strong>
write a bash script renaming each file separately:
bawi@hp:~$ cat rename.sh 
#!/bin/bash

#remove spaces
r=$(echo $1 | sed &#039;s/ /_/g&#039;)

#remove polish characters
r=$(echo $1 | sed &#039;s/Ą/A/g&#039; | sed &#039;s/Ć/C/g&#039; | sed &#039;s/Ę/E/g&#039; | sed &#039;s/Ł/L/g&#039; | sed &#039;s/Ń/N/g&#039; | sed &#039;s/Ó/O/g&#039; | sed &#039;s/Ś/S/g&#039; | sed &#039;s/Ź/Z/g&#039; | sed &#039;s/Ż/Z/g&#039; | sed &#039;s/ą/a/g&#039; | sed &#039;s/ć/c/g&#039; | sed &#039;s/ę/e/g&#039; | sed &#039;s/ł/l/g&#039; | sed &#039;s/ń/n/g&#039; | sed &#039;s/ó/o/g&#039; | sed &#039;s/ś/s/g&#039; | sed &#039;s/ź/z/g&#039; | sed &#039;s/ż/z/g&#039;)

#to lower case
r=$(echo $1 | sed &#039;s/JPG/jpg/g&#039;)
#r=$(echo $r | sed &#039;s/JPG/jpg/g&#039;)

#echo &#039;&gt;&gt;&gt;&#039; &#034;$r&#034; &#039;&lt;&lt;&gt;&gt;&#039; &#034;$1&#034; &#039;|||&#039; &#034;$r&#034; &#039;&lt;&lt;&lt;&#039;;
#mv &quot;$1&quot;  &quot;$r&quot; 



Then execute the script via:
find -name \*.txt -exec ./rename.sh &quot;{}&quot; \;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>338</wp:post_id>
  <wp:post_date>2009-12-16 19:40:57</wp:post_date>
  <wp:post_date_gmt>2009-12-16 19:40:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>remove-polish-characters</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>linux bash simple scripts</title>
  <link>https://bmwieczorek.wordpress.com/2010/02/09/linux-bash-simple-scripts/</link>
  <pubDate>Tue, 09 Feb 2010 19:33:17 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=343</guid>
  <description/>
  <content:encoded><![CDATA[find -type f ! -name \*.sh | grep '\.sh$'
find -type f ! -name \*.sh -exec chmod -x "{}" \;
chmod -R og-w .]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>343</wp:post_id>
  <wp:post_date>2010-02-09 19:33:17</wp:post_date>
  <wp:post_date_gmt>2010-02-09 19:33:17</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>linux-bash-simple-scripts</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>encoding, ascii</title>
  <link>https://bmwieczorek.wordpress.com/2010/03/27/encoding-ascii/</link>
  <pubDate>Sat, 27 Mar 2010 17:25:25 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=347</guid>
  <description/>
  <content:encoded><![CDATA[<strong>ACSII</strong> - 7 bit character encoding for unaccented english letters (from 32 to 127: space = 32, "A"=65)
<strong>code pages</strong> - showed different ways to use other bits (from 128 to 255) depends where you lived (Central Europe Windows 1250: latin capital O with acute Ó = 211)
<strong>unicode</strong> - a single character set coverring all characters on planet ("A" = U+0041) (0x41=65 decimal)
<strong>UTF-8</strong> - system of storing a string of unicode code points  (U+hex number): on 1 byte for 0-127 code point, on 2 or more bytes for &gt;127 numbers. English text looks like exactly the same in UTF-8 as in ASCII or ANSI.

You need to know to the encoding of the text, don't assume it is ASCII. Use 
Content-Type: text/plain; charset="UTF-8" (e.g. in email header) or 
    
    
    


Traditional encodings may store only some of the code points correctly and change the others into question marks "?". UTF-8 can store any code point correctly. 
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>347</wp:post_id>
  <wp:post_date>2010-03-27 17:25:25</wp:post_date>
  <wp:post_date_gmt>2010-03-27 17:25:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>encoding-ascii</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Generics</title>
  <link>https://bmwieczorek.wordpress.com/2010/04/06/generics/</link>
  <pubDate>Tue, 06 Apr 2010 10:00:05 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=361</guid>
  <description/>
  <content:encoded><![CDATA[<strong>Generic class vs static generic method
</strong>
<pre>class A&lt;T&gt; {}
class B&lt;T extends Number&gt; {}
interface Comparable&lt;T&gt; {
    int compare(T t);
}
class D&lt;T extends Comparable&lt;T&gt;&gt; {}
// class Y&lt;?&gt; {} // doesn't compile
// class Z&lt;? extends Number&gt; {} //doesn't compile

class Utils {
    public static &lt;T&gt; T max(List&lt;T&gt; list) {
        return null; // impl omitted
    }
    public static &lt;T extends Comparable&lt;T&gt;&gt; T max(List&lt;? extends T&gt; list) {
        return null; // impl omitted
    }

    // generic static factory method
    public static &lt;K, V&gt; Map&lt;K, V&gt; createHashMap() {
        return new HashMap&lt;K, V&gt;();
    }
}

public class Example {
    public static void main(String[] args) {

        // explicitly specify the value of type parameter when invoking generic constructors
        A&lt;String&gt; a = new A&lt;String&gt;();
        B&lt;Integer&gt; b = new B&lt;Integer&gt;();

        // the value of type parameter is figured out by examining types of method arguments
        List&lt;Integer&gt; integers = Arrays.asList(1, 2, 3);
        Integer max = Utils.max(integers);
    }
}</pre>
<strong>If types T1, T2 are different,  then List&lt;T1&gt; is not a sub type and nor a super type of List&lt;T2&gt; (e.g. List&lt;Integer&gt; is not a sub type of List&lt;Object&gt;). </strong>

Even though a Circle is a Figure (<code>Circle extends Figure</code>), <code>List&lt;Circle&gt;</code> is NOT <code>List&lt;Figure&gt;</code> (<code>List&lt;Circle&gt;</code> doesn't extend <code>List&lt;Figure&gt;</code>). In order to add <code>List&lt;Circle&gt;</code> , you need to change from parameter type from<code> List&lt;Figure&gt;</code> to <code>List&lt;? extends Figure&gt;:</code>

Example 1:
<pre>// List&lt;Number&gt; list = new ArrayList&lt;Integer&gt;(); // doesn't compile
List&lt;? extends Number&gt; list = new ArrayList&lt;Integer&gt;();
List&lt;? super Number&gt; list2 = new ArrayList&lt;Object&gt;();</pre>
Example 2: <strong>(PECS = Producer - Extends, Consumer - Super)</strong>
<pre>public class Example {
    static void pushAll(List&lt;? extends Number&gt; list) {} // here list is a source of data for the method (producer - extends)
        static void popAll(List&lt;? super Number&gt; list) {} // here list is a consumer, gets populated as a result of method execution (consumer - super)
        public static void main(String[] args) {
        List&lt;Integer&gt; ints = new ArrayList&lt;Integer&gt;();
        pushAll(ints);
        List&lt;Object&gt; objs = new ArrayList&lt;Object&gt;();
        popAll(objs);
   }
}</pre>
Example 3:
<pre>class Figure {}
class Circle extends Figure {}

public class Example&lt;T&gt; {
    public void printExactTypes(List&lt;T&gt; list) { }
    public void printExtendingTypes(List&lt;? extends T&gt; list) { }
    public static void main(String[] args) {
        Example&lt;Figure&gt; example = new Example&lt;Figure&gt;();
        List&lt;Figure&gt; figures = Arrays.asList(new Figure(), new Circle());
        List&lt;Circle&gt; circles = Arrays.asList(new Circle());
        example.printExactTypes(figures);
        // geneficClass.printExactType(integers); // doesn't compile
        example.printExtendingTypes(figures);
        example.printExtendingTypes(circles);
    }
}</pre>
<strong>Wildcards vs type parameters</strong>

Use type wildcards (&lt;?&gt;, &lt;? super ...&gt;, &lt;? extends ...&gt;)  if type parameter appears only once in method declaration. Use type parameter (&lt;E&gt;) if it appears in one of the cases:
- method return type and at least one method parameter
- at least two method parameters

E.g.:
<pre>public class Example {
    public static void compare(List&lt;? extends Comparable&lt;?&gt;&gt; list) {}
    public static &lt;E extends Comparable&lt;E&gt;&gt; E compare(List&lt;? extends E&gt; list) {
        return null; // impl omitted
    }
}</pre>
<strong>Arrays vs Lists</strong>

Arrays: runtime check, compiles but throws ArrayStoreException at runtime:
<pre>Object[] os = new Integer[1];
    os[0] = "Hello";
    System.out.println(os[0]);</pre>
Arrays: Cannot create generic array:
<pre>static &lt;T&gt; T[] f(T[] ts) {
    new T[1];  // compilation error
    T[] objs = (T[]) new Object[100]; // casting to generic array
    return ts;
 }</pre>
Lists: Compile time type mismatch:
<pre>List&lt;Object&gt; os2 = new ArrayList&lt;Long&gt;();

</pre>
<strong>It is not recommended to use wildcards as return types.</strong>
<pre>public class Example {
    public static &lt;T&gt; List&lt;T&gt; merge(List&lt;T&gt; list1, List&lt;T&gt; list2) {
        return list2; // impl omitted
    }
    public static &lt;T&gt; List&lt;? extends T&gt; merge2(List&lt;? extends T&gt; list1, List&lt;? extends T&gt; list2) {
        return list2; // impl omitted
    }

    @SuppressWarnings("unchecked")
    public static &lt;T&gt; List&lt;T&gt; merge3(List&lt;? extends T&gt; list1, List&lt;? extends T&gt; list2) {
        return (List&lt;T&gt;) list2; // impl omitted
    }

    public static void main(String[] args) {
        List&lt;Car&gt; cars = Arrays.asList(new Car(), new Toyota());
        List&lt;Toyota&gt; toyotas = Arrays.asList(new Toyota(), new Toyota());

        // List&lt;Car&gt; cars2 = toyotas; // compilation failure
 
        // merge(cars, toyotas); // compilation failure

        List&lt;? extends Car&gt; merge2 = merge2(cars, toyotas);

        List&lt;Car&gt; merge3 = merge3(cars, toyotas);

        // List&lt;Car&gt; merge33 = merge3(toyotas, toyotas); // compilation failure

        List&lt;Car&gt; merge333 = Example.&lt;Car&gt; merge3(toyotas, toyotas);
 
    }
}

</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>361</wp:post_id>
  <wp:post_date>2010-04-06 10:00:05</wp:post_date>
  <wp:post_date_gmt>2010-04-06 10:00:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>generics</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Generic conversion between java domain models</title>
  <link>https://bmwieczorek.wordpress.com/2010/04/11/generic-object-creation/</link>
  <pubDate>Sun, 11 Apr 2010 14:18:43 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=395</guid>
  <description/>
  <content:encoded><![CDATA[Suppose we have two domain models: service and backend. Our goal is to write a conversion back and forth between these two models. It would be a straightforward task if both of the models would be available to each other. However, in this case due to an earlier design decision, the service model is used by the backend model but the backend model in not available to service model (unidirectional dependency). In other words, backend model can import service model elements, whereas service model doesn't have access to backend model.

The conversion from backend to service model is fairly easy. In each backend component you can write a method creating an instance of service model component populated with the data retrived from backend model.

The conversion from service <code>Person</code> to backend <code>ImPerson</code>, could look like this:
<pre><code>class ServiceToBackendConverter {
    public static ImPersonBase convert(PersonBase personBase) {
        if (personBase instanceof Mother) {
            return new ImMother((Mother) personBase);
        }
        throw new ConversionException("Conversion not defined for: " + personBase);
    }
}</code></pre>
The drawback of this implementation is that the more model elements you get, the more <code>instanceof</code>s you need to mantain.
The alternative solution to that could be a generic converter using annotated backend model elements, e.g.:
backend component (<code>ImMother</code>) is annotated to be convertable to appropriate service component (<code>Mother.class</code>). Generic converter stores internally <code>static HashMap</code> with the service class to backend class mapping. The convert method takes as argument an instance of service element, looks up the mapping for corresponding backend element class, looks up the backend element class constructors for the one accepting as parameter an instance of service element, invokes that constructor and returns the new backend element instance. There are two convert methods in generic converter. The one with one argument returns a generic <code>Object</code> that you need to cast to proper backend element type. The second method accepts as a second parameter the type of the converted element so no cast is needed.

<pre>// service model (without access to backend model)
// package generics.model.service
class PersonBase {}

class Mother extends PersonBase {
    private final String name;

    public Mother(String name) {
        this.name = name;
    }

    public String getName() {
        return name;
    }
}

// backend model
// package generics.model.backend
@Target(ElementType.TYPE)
@Retention(RetentionPolicy.RUNTIME)
@interface Convertable {
    Class&lt;?&gt; value();
}

abstract class ImPersonBase&lt;T extends PersonBase&gt; {
    abstract public String introduce();

    abstract public T convert();
}

@Convertable(Mother.class)
class ImMother extends ImPersonBase&lt;Mother&gt; {
    public String imName;

    public ImMother(String imName) {
        this.imName = imName;
    }

    // used by converter
    public ImMother(Mother mother) {
        this.imName = mother.getName();
    }

    public String introduce() {
        return getClass().getName() + ":" + imName;
    }

    public Mother convert() {
        return new Mother(imName);
    }
}

// package generics.converter
public class GenericAnnotatedConverter {
    private static Map&lt;Class&lt;?&gt;, Class&lt;?&gt;&gt; map = new HashMap&lt;Class&lt;?&gt;, Class&lt;?&gt;&gt;();
    static {
        registerAnnotated(ImMother.class);
    }

    public static void main(String[] args) throws Exception {

        ImMother imMother = new ImMother("Ania");

        // conversion from backend to service model
        Mother mother = imMother.convert();

        // conversion from service to backend model
        Object imConvert = GenericAnnotatedConverter.convert(mother);
        System.out.println(((ImMother) imConvert).introduce());

        ImPersonBase imPersonBase = GenericAnnotatedConverter.convert(mother, ImPersonBase.class);
        System.out.println(imPersonBase.introduce());

        imMother = GenericAnnotatedConverter.convert(mother, ImMother.class);
        System.out.println(imMother.introduce());
    }

    public static Object convert(Object serviceInstance) throws Exception {
        Class&lt;?&gt; serviceClass = serviceInstance.getClass();
        Class&lt;?&gt; backendClass = map.get(serviceClass);
        if (backendClass == null)
            throw new ConversionException("Could not find conversion mapping for " + serviceClass.getName()
                    + ". Register annotated backend element.");
        Constructor&lt;?&gt;[] backendConstructors = backendClass.getConstructors();
        for (Constructor&lt;?&gt; backendConstructor : backendConstructors) {
            Class&lt;?&gt;[] backendParameterTypes = backendConstructor.getParameterTypes();
            for (Class&lt;?&gt; backendParameterType : backendParameterTypes) {
                if (backendParameterType.isAssignableFrom(serviceInstance.getClass())) {
                    return backendClass.cast(backendConstructor.newInstance(serviceInstance));
                }
            }
        }
        throw new ConversionException("Could not find backend constructor for class " + backendClass
                + " with argument of type: " + serviceClass.getName());
    }

    public static &lt;T&gt; T convert(Object serviceInstance, Class&lt;T&gt; backendInterface) throws Exception {
        Class&lt;?&gt; serviceClass = serviceInstance.getClass();
        Class&lt;? extends T&gt; backendClass = map.get(serviceClass).asSubclass(backendInterface);
        Constructor&lt;?&gt;[] backendConstructors = backendClass.getConstructors();
        for (Constructor&lt;?&gt; backendConstructor : backendConstructors) {
            Class&lt;?&gt;[] backendParameterTypes = backendConstructor.getParameterTypes();
            for (Class&lt;?&gt; backendParameterType : backendParameterTypes) {
                if (backendParameterType.isAssignableFrom(serviceInstance.getClass())) {
                    return backendClass.cast(backendConstructor.newInstance(serviceInstance));
                }
            }
        }
        throw new ConversionException("Could not find backend constructor for class " + backendClass
                + " of type " + backendInterface.getName() + " with an argument of type: "
                + serviceClass.getName());
    }

    private static void registerAnnotated(Class&lt;?&gt; backendClass) {
        Convertable annotation = backendClass.getAnnotation(Convertable.class);
        Class&lt;?&gt; serviceClass = annotation.value();
        map.put(serviceClass, backendClass);
    }
}

// package generics.exception
class ConversionException extends RuntimeException {
    private static final long serialVersionUID = 1L;

    public ConversionException(String message) {
        super(message);
    }
}</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>395</wp:post_id>
  <wp:post_date>2010-04-11 14:18:43</wp:post_date>
  <wp:post_date_gmt>2010-04-11 14:18:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>generic-object-creation</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>tomcat</title>
  <link>https://bmwieczorek.wordpress.com/2010/05/28/tomcat/</link>
  <pubDate>Fri, 28 May 2010 13:43:59 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=434</guid>
  <description/>
  <content:encoded><![CDATA[Tomcat class or resource loading order:
    * Bootstrap classes of your JVM
    * System class loader classes (described above)
    * /WEB-INF/classes of your web application
    * /WEB-INF/lib/*.jar of your web application
    * $CATALINA_HOME/lib
    * $CATALINA_HOME/lib/*.jar
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>434</wp:post_id>
  <wp:post_date>2010-05-28 13:43:59</wp:post_date>
  <wp:post_date_gmt>2010-05-28 13:43:59</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>tomcat</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Find maven unused dependencies</title>
  <link>https://bmwieczorek.wordpress.com/2010/06/19/find-maven-unused-dependencies/</link>
  <pubDate>Sat, 19 Jun 2010 11:00:16 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=438</guid>
  <description/>
  <content:encoded><![CDATA[mvn dependency:analyze | sed  -n '/Unused/,/INFO/ p']]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>438</wp:post_id>
  <wp:post_date>2010-06-19 11:00:16</wp:post_date>
  <wp:post_date_gmt>2010-06-19 11:00:16</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>find-maven-unused-dependencies</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Design by Contract</title>
  <link>https://bmwieczorek.wordpress.com/2010/07/13/design-by-contract/</link>
  <pubDate>Tue, 13 Jul 2010 12:26:43 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=440</guid>
  <description/>
  <content:encoded><![CDATA[In Design by Contract, each method in a class can have a pre-condition and a post-condition attached to it. The pre-condition defines the criteria to be met before the method offers a certain behaviour and the post-condition is the state or behaviour offered by the method once the pre-conditions are met. 

<blockquote>A sub-type can only have weaker pre-conditions and stronger post-conditions than its base class. </blockquote>

]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>440</wp:post_id>
  <wp:post_date>2010-07-13 12:26:43</wp:post_date>
  <wp:post_date_gmt>2010-07-13 12:26:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>design-by-contract</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="design-patterns"><![CDATA[Design patterns]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Running multiple instances of tomcat on one machine (avoiding port conflicts)</title>
  <link>https://bmwieczorek.wordpress.com/2010/08/04/running-multiple-instances-of-tomcat-resolving-port-conflicts/</link>
  <pubDate>Wed, 04 Aug 2010 18:09:32 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=444</guid>
  <description/>
  <content:encoded><![CDATA[In tomcat ports are specified in conf/server.xml:

<pre>
bawi@hp:~/workspace/apache-tomcat-6.0.26$ cat conf/server.xml | grep port=\&quot;
&lt;Server port="8005" shutdown="SHUTDOWN"&gt;
&lt;Connector port="8080" protocol="HTTP/1.1"
port="8080" protocol="HTTP/1.1"
&lt;Connector port="8443" protocol="HTTP/1.1" SSLEnabled="true"
&lt;Connector port="8009" protocol="AJP/1.3" redirectPort="8443" /&gt;
</pre>

All ports match pattern 8xxx, so theoretically it is possible to define easily up to 65 different tomcat instances (from 1xxx to 65xxx). However, in order not to conflict with other ports on the system, I recommend defining 6 non-conflicting instances like 8080, 18080, ...., 58080 for the base 8080.

An easy solution is to define tomcat.port.prefix variable in bin/setenv.sh, set it to 1, ..., 5 for 18080, ..., 58080 respectively, i.e.:

<pre>
JAVA_OPTS=$JAVA_OPTS&quot; -Dtomcat.port.prefix=1&quot;
</pre>

and update the server.xml to get the result:

<pre>
bawi@hp:~/workspace/apache-tomcat-6.0.26$ cat conf/server.xml | grep port=\&quot;
&lt;Server port="${tomcat.port.prefix}8005" shutdown="SHUTDOWN"&gt;
&lt;Connector port="${tomcat.port.prefix}8080" protocol="HTTP/1.1"
port="${tomcat.port.prefix}8080" protocol="HTTP/1.1"
&lt;Connector port="${tomcat.port.prefix}8443" protocol="HTTP/1.1" SSLEnabled="true"
&lt;Connector port="${tomcat.port.prefix}8009" protocol="AJP/1.3" redirectPort="${tomcat.port.prefix}8443" /&gt;
</pre>

You can do it via command:
<pre>
sed -i &#039;s/ort=\&quot;/ort=\&quot;${tomcat.port.prefix}/g&#039; conf/server.xml
</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>444</wp:post_id>
  <wp:post_date>2010-08-04 18:09:32</wp:post_date>
  <wp:post_date_gmt>2010-08-04 18:09:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>running-multiple-instances-of-tomcat-resolving-port-conflicts</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>How to write good code</title>
  <link>https://bmwieczorek.wordpress.com/2010/08/06/how-to-write-good-code/</link>
  <pubDate>Fri, 06 Aug 2010 21:06:14 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=469</guid>
  <description/>
  <content:encoded><![CDATA[<strong>Why to spend more time on writing good code</strong>
	<li>From my observations, most of the time the quality of new code matches the state of the present code. As a result, if we let our code rotten a little bit, then people will stop caring about the quality and it will turn into mess eventually (broken window effect).</li>
	<li> It is worth to follow the rule that we leave the code better than it was by small refactorings (e.g. changing names of methods/variables to better ones), so that it will bring more pleasure to work with the code in the future.</li>
	<li> Productivity of the team significantly decreases as the code gets more messy.</li>
	<li> We want to keep the code clean all the time so that we don't need to rewrite the project again.</li>
<strong>What is good clean code</strong>
	<li>Is clearly focused on its purpose and not surrounded by extra irrelevant data. When objects or methods do no more that one thing, then objects should be divided into two or more and methods should be extracted to submethods specialized in one task.</li>
	<li>Has clear and minimal API providing one way rather than many ways of doing things.</li>
	<li>Is well tested by unit and acceptance tests.</li>
	<li>Has no duplications.</li>
	<li>Early implements tiny abstractions - e.g. piece of code that queries for objects should delegate calls to particular implementations, hidden by abstractions, to handle specific type of data store like file, db, memory etc.</li>
	<li>Class, variable and method names should be self-explanatory and clearly say what the do or what they represent and they are used, e.g.
<code>
int secondsSinceLogin;
int elapsedTimeInHours;
</code>
or instead method <code>copy(int[] a, int[] b)</code> write <code>copy(int[] source, int[] destination)</code>.</li>
	<li>Names should not introduce confussion, e.g. don't name a variable <code>productList</code> when it doesn't represent a <code>List</code> or even better avoid introducing names containing types, e.g. <code>userString </code>or <code>userList</code>, just call it <code>name </code>and <code>users</code>. By doing this you will avoid situations when after type refactoring you will get variable name not matching its type: e.g. <code>User userString</code>.</li>
	<li>Choose names that you would guess their meaming without comments or javadoc, e.g. class: <code>UserDao</code>, method: <code>User findById(long id)</code>. When constructor accepts two or more arguments of the same type, consider changing it to factory method having more descriptive name, e.g.:<code>class ConnectionChecker {</code>
<code>public static ConnectionChecker createWithTimeoutAndRetryIntervalInSeconds(int timeout, int retryInterval){ ... };
}</code>.</li>
	<li>Don't use names that are visually similar to each other, e.g. <code>int mmnm;</code> and <code>int mnmm;</code> Avoid using capital O and lower-case l as they are very similar to zero and one digits.</li>
	<li>Agree to one naming convention, don't use e.g. <code>ProductInfo</code>, <code>ProductData</code> at the same time. The names mean the almost the same.</li>
	<li>Use names that are easy to pronounce, e.g. instead <code>Date moddmymhs</code> use <code>Date modyficationTimestamp</code>.</li>
	<li>Single-letter characters like <code>i,j,k</code> can be used as counters only in small loops. Using them as regular variables in the code makes it has to remember what they mean. Remember, clarity is very important.</li>
	<li>Use well named variables that are easy searchable.</li>
	<li>Extract numbers into self-descriptive variables or constants.</li>
	<li>Consider using <code>enum</code>s to replace <code>int</code>s when defining types, e.g.  instead<code> public static final int MONDAY=1;
...
public static final int SUNDAY=7;</code>

use

<code>enum DAY {</code>
<code>MONDAY, ..., SUNDAY;</code>
<code>}</code></li>
	<li>Don't use Hungarian Notation - don't use member prefixes "_m" like int m_id in strongly typed languages such as Java. After some time, programmers will ignore the prefixes, what makes them useless and unnecessarily polluting the code.</li>
	<li>Use small classes and short methods so you can see variables declaration an its usage on one screen.</li>
	<li>Prefer the convention - don't prefix interfaces with legacy "I" but use suffix "Impl" for interface implementation classes.</li>
	<li>Try to be more specific about class names rather than suffixing them with general-purpose words like Manager, Processor, Data or Info. Use nouns for class names.</li>
	<li>Use verbs or verb phrases to for method names, e.g. <code>send()</code>, <code>deleteProduct()</code> or <code>isValid()</code>.</li>
	<li>Use <code>get</code>, <code>set</code> or <code>is</code> prefixes for accessors and mutators according to Java Beans standard</li>
	<li>Since not all IDEs support comments and/or argument names for auto-suggested methods, use names describing arguments for factory names, e.g. <code>Circle.createFromRadius(int radius);</code></li>
	<li>Be consistent for naming - agree to one concept - don't use at the same time one class <code>retrieveEmployer()</code>, in other <code>getCompany()</code> and in the third - <code>fetchPayment()</code>.</li>
	<li>Don't use the same word for different purposes, e.g. use <code>add()</code> for returning the sum of two numbers but <code>insert()</code> to add element into collection to avoid confusion.</li>
	<li>Use technical names for computer science terms, algorithms and patterns, e.g. <code>CompanyVisitor</code> for Visitor Pattern.</li>
	<li>Use names from the problem domain.</li>
	<li>Place the names in the meaningful context by enclosing them in well named classes, methods or namespaces. Only if that fails, use prefix for clarity:<code>class Person {</code>
<code>String addrState</code>
<code>String addrCity;</code>
<code>}</code>

Encapsulating address details in <code>Address</code> is a better approach (see below) but if it not possible for some reason,  then prefixing <code>state</code> with <code>addr</code> makes it clearer what <code>Person</code> <code>state</code> means.

<code>Address {</code>
<code>String state;</code>
<code>String city;</code>
<code>}</code>
<code>class Person {</code>
<code>Address address;</code>
<code>}</code>

<strong>Methods</strong>
Should be very small (less that 20 lines), small functions can have more descriptive names.

Should have maximum two level of indentation i.e. should have max two nested conditional structures (<code>if</code>, <code>while</code>, <code>for</code> etc ...).

For better readability conditional statement should contain just one line - a method call.

Refactor code from:
<code>if (condition1 || contition2 ... ) {
long block of code ...
}</code>
to
<code>if (areConditionsMet(args...)){
a call to helper method with descriptive name
}
private boolean areConditionsMet(args ...) {
return condition1 || contition2;
}</code>

Don't mix methods with different levels of abstraction in one function, i.e. don't mix high level render html method with low level method adding line break character.

Method should do only one thing at the level of abstraction described by its name.

Extract another method if its name is not a restatement of its implementation. It makes little sense to extract <code>if (contition) { doSth(); }</code> into <code>doSthIfCondition()</code>

Follow the top-down order in method location in a class, e.g. if a public method <code>m1()</code> contains two helper methods <code>m1.1()</code> and <code>m1.2()</code>, and each of these helper methods contain a separate helper method <code>m1.1.1()</code> and <code>m1.2.1()</code> and a common helper method <code>m1.12.1()</code>:
<pre>
            m1
           /   \
       m1.1    m1.2
      /    \    /    \
m1.1.1    m1.12.1    m1.2.1
</pre>
then the order of method definitions could be <code>m1()</code>, <code>m1.1()</code>, <code>m1.1.1()</code>, <code>m1.2()</code>, <code>m1.12.1()</code>, <code>m1.2.1()</code>.

Try to refactor <code>switch</code>-<code>case</code> statements which call different methods for each case into polymorphic execution (strategy pattern). The <code>switch</code>-<code>case</code> statements do more than one thing (violate Single Resposiblity Principle), tend to grow large and need to be changed whenever new behavior is added (violate Open Closed Principle - open for extension, closed for modification).


Do as little as possible inside constructors. If you want to test a method of a class, you need to instantiate it but not necessarily you want to execute all the logic just after instantiation. Furthermore, you cannot override constructor, so you cannot skip or change this extra logic that is done along the object creation. For testing purposes, you'd better provide a default-package-access constructor with arguments of its dependencies which assign these dependencies to class fields. By doing this, that you have flexibility to configure you class under test whatever you like, e.g. you can mock some dependencies. Sometimes certain object are instantiated / wired by a framework or created by others, so try to avoid putting logic into constructors. ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>469</wp:post_id>
  <wp:post_date>2010-08-06 21:06:14</wp:post_date>
  <wp:post_date_gmt>2010-08-06 21:06:14</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>how-to-write-good-code</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="best-practices"><![CDATA[Best practices]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>How to write deadlock in Java</title>
  <link>https://bmwieczorek.wordpress.com/2010/08/13/how-to-write-deadlock-in-java/</link>
  <pubDate>Fri, 13 Aug 2010 12:22:38 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=521</guid>
  <description/>
  <content:encoded><![CDATA[An example of deadlock in Java:

<code>class Ruller {
&nbsp;  private static final Ruller RULLER = new Ruller();
&nbsp;  private Ruller() {}
&nbsp;  public static Ruller getInstance() { return RULLER; }
&nbsp;  public synchronized void ruller() {
&nbsp;  &nbsp;  System.out.println("RULLER:" + currentThread());
&nbsp;  &nbsp;  Pen.pen();
&nbsp;  }
}</code>
<code>
class Pen {
&nbsp;  public static synchronized void pen() {
&nbsp;  &nbsp;  System.out.println("PEN:" + currentThread());
&nbsp;  &nbsp;  try { Thread.sleep(50); } 
&nbsp;  &nbsp;  catch(InterruptedException e){e.printStackTrace();}
&nbsp;  &nbsp;  Ruller.getInstance().ruller();
&nbsp;  };
}</code>
<code>
public class DeadlockExample {
&nbsp;  public static void main(String[] args) {
&nbsp;  &nbsp;  new Thread(new Runnable() {
&nbsp;  &nbsp;  &nbsp;  @Override
&nbsp;  &nbsp;  &nbsp;  public void run() {
&nbsp;  &nbsp;  &nbsp;  &nbsp;  Pen.pen();
&nbsp;  &nbsp;  &nbsp;  }
&nbsp;  &nbsp;  }).start();
&nbsp;  &nbsp;  Ruller.getInstance().ruller();
&nbsp;  }
}</code>

The output is (or opposite order):

<code>PEN:Thread-0
RULLER:Thread[main,5,main]</code>

Is this case, first <code>thread-0</code> (created and started programmatically) enters synchronized <code>pen()</code> method and sleeps 50 ms. While sleeping <code>main</code> thread enters synchronized <code>ruller()</code> method and immediately tries to access <code>pen()</code> method which has monitor locked on class <code>Pen</code> by <code>thread-0</code>. After <code>tread-0</code> finishes sleeping it tries to access <code>ruller() </code>method which is locked on singleton instance of <code>Ruller</code> class. Both methods are waiting for each other to proceed and application hangs.

Thread dump created by command <code>jstack pid</code> produces the following (or for Tomcat  <code>kill -3 pid</code>; output in <code>catalina.out</code>) :
<code>
"Thread-0" prio=10 tid=0x09535000 nid=0x4013 waiting for monitor entry [0x802fb000]
&nbsp;  java.lang.Thread.State: BLOCKED (on object monitor) at 
&nbsp;  deadlock.Ruller.ruller(DeadlockExample.java:16)
&nbsp;  - waiting to lock  (a deadlock.Ruller) at 
&nbsp;  deadlock.Pen.pen(DeadlockExample.java:29)
&nbsp;  - locked  (a java.lang.Class for deadlock.Pen) at&nbsp;  deadlock.DeadlockExample$1.run(DeadlockExample.java:38)
&nbsp;  at java.lang.Thread.run(Thread.java:619)
...
"main" prio=10 tid=0x09485800 nid=0x4004 waiting for monitor entry [0xb69a3000]
&nbsp;  java.lang.Thread.State: BLOCKED (on object monitor) at 
&nbsp;  deadlock.Pen.pen(DeadlockExample.java:23)
&nbsp;  - waiting to lock  (a java.lang.Class for deadlock.Pen) 
&nbsp;  at deadlock.Ruller.ruller(DeadlockExample.java:17)
&nbsp;  - locked  (a deadlock.Ruller) at 
&nbsp;  deadlock.DeadlockExample.main(DeadlockExample.java:41)
...
Found one Java-level deadlock:
=============================
"Thread-0":
&nbsp;  waiting to lock monitor 0x09507560 (object 0xa3ee89d0, a deadlock.Ruller),
&nbsp;  which is held by "main"
"main":
&nbsp;  waiting to lock monitor 0x095068e0 (object 0x80da7aa8, a java.lang.Class),
&nbsp;  which is held by "Thread-0"
</code>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>521</wp:post_id>
  <wp:post_date>2010-08-13 12:22:38</wp:post_date>
  <wp:post_date_gmt>2010-08-13 12:22:38</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>how-to-write-deadlock-in-java</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Java and Junit initialization order</title>
  <link>https://bmwieczorek.wordpress.com/2010/09/02/java-and-junit-initialization-order/</link>
  <pubDate>Thu, 02 Sep 2010 19:31:46 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=629</guid>
  <description/>
  <content:encoded><![CDATA[<strong>initialization order</strong>
<code>
class BaseClass {</code>
<code>
&nbsp;&nbsp;static String myBaseStaticText=basesay("base static");</code>
<code>
&nbsp; &nbsp; String myBaseText = basesay("base local field");</code>
<code>
&nbsp; &nbsp; public BaseClass() {
&nbsp; &nbsp; &nbsp; &nbsp; basesay("base constructor");
&nbsp; &nbsp; }</code>
<code>
&nbsp; &nbsp; static String basesay(String text) {
&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(text);
&nbsp; &nbsp; &nbsp; &nbsp; return text;
&nbsp; &nbsp; }
}</code>
<code>
public class InitializationTest extends BaseClass {</code>
<code>
&nbsp; &nbsp; static String myStaticText = say("static");</code>
<code>
&nbsp; &nbsp; String myText = say("local field");</code>
<code>
&nbsp; &nbsp; public InitializationTest() {
&nbsp; &nbsp; &nbsp; &nbsp; say("constructor");
&nbsp; &nbsp; }</code>
<code>
&nbsp; &nbsp; public static void main(String[] args) {
&nbsp; &nbsp; &nbsp; &nbsp; new InitializationTest();
&nbsp; &nbsp; }</code>
<code>
&nbsp; &nbsp; static String say(String text) {
&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(text);
&nbsp; &nbsp; &nbsp; &nbsp; return text;
&nbsp; &nbsp; }
}
</code>

Output:
<code>
base static
static
base local field
base constructor
local field
constructor
</code>


<strong>JUnit<code></strong>

<code>public class MyJunitTest {
</code>
<code>&nbsp; &nbsp; String text = staticSay("field");
&nbsp;&nbsp; static String staticText = staticSay("static field");
</code>
<code>&nbsp; &nbsp; public MyJunitTest() {
&nbsp; &nbsp; System.out.println("constructor");
&nbsp; &nbsp; }
</code>
<code>&nbsp; &nbsp; public MyJunitTest(String text) {
&nbsp; &nbsp; &nbsp; &nbsp; System.out.println("constructor: " + text);
&nbsp; &nbsp; }
</code>
<code>&nbsp; &nbsp; @Test
&nbsp; &nbsp; &nbsp; &nbsp; public void myTestCase1() {
&nbsp; &nbsp; }
</code>
<code>&nbsp; &nbsp; @Test
&nbsp; &nbsp; &nbsp; &nbsp; public void myTestCase2() {
&nbsp; &nbsp; }
</code>
<code>&nbsp; &nbsp; String say(String text) {
&nbsp; &nbsp; &nbsp; &nbsp; return staticSay(text);
&nbsp; &nbsp; }
</code>
<code>&nbsp; &nbsp; static String staticSay(String text) {
&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(text);
&nbsp; &nbsp; &nbsp; &nbsp; return text;
&nbsp; &nbsp; }
}</code>

Output:
<code>
static field
field
constructor
field
constructor</code>

<strong>Instantiate class</strong>
<code>public class InitializeClass {</code>
<code>
&nbsp; &nbsp; public static void main(String[] args) throws ...</code>
<code>
&nbsp; &nbsp; &nbsp; &nbsp; Class cl = 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Class.forName(MyJunitTest.class.getName());
&nbsp; &nbsp; &nbsp; &nbsp; Constructor defConstr = cl.getConstructor();
&nbsp; &nbsp; &nbsp; &nbsp; defConstr.newInstance();
&nbsp; &nbsp; &nbsp; &nbsp; Constructor constr = 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cl.getConstructor(String.class);
&nbsp; &nbsp; &nbsp; &nbsp; MyJunitTest instance = 
&nbsp; &nbsp; &nbsp; &nbsp; (MyJunitTest) constr.newInstance("with string");
&nbsp; &nbsp; &nbsp; &nbsp; instance.say("method with string");
&nbsp; &nbsp; &nbsp; &nbsp; Method[] methods = 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cl.getDeclaredMethods();
&nbsp; &nbsp; &nbsp; &nbsp; for (Method method : methods) {
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Test annotation = 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; method.getAnnotation(Test.class);
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (annotation != null) {
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println("Method " +
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "with @Test: " + method.getName());
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; }
}</code>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>629</wp:post_id>
  <wp:post_date>2010-09-02 19:31:46</wp:post_date>
  <wp:post_date_gmt>2010-09-02 19:31:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>java-and-junit-initialization-order</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Visitor pattern</title>
  <link>https://bmwieczorek.wordpress.com/2010/09/16/visitor-pattern/</link>
  <pubDate>Thu, 16 Sep 2010 22:13:20 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=652</guid>
  <description/>
  <content:encoded><![CDATA[<li>Used to decouple operations from object structure - object structure stays in one file, whereas some business methods on this structure are in separate file(s).</li>
<li>Used when object structure can't change but operations performed on it can.</li>
<li>Implementation: 
<ul>There is a <code>Visitor</code> interface with <code>visit(VisitedElement element)</code> method accepting as an argument a general base type <code>VisitedElement</code> of object hierarchy it wants to visit.</ul>
<ul>This hierachy of objects implements <code>VisitedElement</code> interface with <code>void accept(Visitor visitor)</code>. The implementation of the <code>accept</code> method is just a simple delegation to the visit method:</ul>
<code>class Book implements VisitedElement {
&nbsp; &nbsp; ...
&nbsp; &nbsp; public void accept(Visitor visitor){
&nbsp; &nbsp; &nbsp; &nbsp; visitor.visit(this);
&nbsp; &nbsp; }
}</code>
</li>
<li>As a result, every concrete visitor has access to the reference of an object in the hierarchy and can apply any operation on its structure.</li>
<li>We can have multiple visitor implementations so we can apply multiple operations on visited object data at runtime.</li>
<li>Note that you pass <code>this</code> reference of <code>VisitedElement</code> to a vistor's visit method.</li>
<li>A usecase scenario is that when you have a <code>VisitedElement</code> or a group of <code>VisitedElement</code>s you can do some business logic on the VisitedElement(s). You can do different business operations by calling <code>accept(Visitor vistor)</code> method with taking different Visitor implementations:
<code>
Visitor shopPromotionVistor=new ShopPromotionVistor();
Visitor webUrlVistor = new WebUrlVistor();
for (VistedElement element : elements){
&nbsp; &nbsp; element.accept(shopPromotionVistor);
&nbsp; &nbsp; element.accept(webUrlVistor);
} </code>

</li>

]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>652</wp:post_id>
  <wp:post_date>2010-09-16 22:13:20</wp:post_date>
  <wp:post_date_gmt>2010-09-16 22:13:20</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>visitor-pattern</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="design-patterns"><![CDATA[Design patterns]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Method overloading</title>
  <link>https://bmwieczorek.wordpress.com/2010/09/21/method-overloading/</link>
  <pubDate>Tue, 21 Sep 2010 09:28:49 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=672</guid>
  <description/>
  <content:encoded><![CDATA[<code>class Base {
&nbsp; String info() {
&nbsp; &nbsp; return "Base class";
&nbsp; }
}
</code>
<code>class Derived extends Base {
&nbsp; String info() {
&nbsp; &nbsp; return "Derived class";
&nbsp; }
}</code>
<code>
public class Handler {
</code>
<code>&nbsp; public static void main(String[] args) {
&nbsp; &nbsp; Handler handler = new Handler();
&nbsp; &nbsp; Base b = new Base();
&nbsp; &nbsp; handler.handle(b); // 1
&nbsp; &nbsp; Derived d = new Derived()
&nbsp; &nbsp; handler.handle(d); // 2
&nbsp; &nbsp; Base bd = new Derived()
&nbsp; &nbsp; handler.handle(bd); // 3
&nbsp; }</code>

<code>&nbsp; void handle(Base b) {
&nbsp; &nbsp; System.out.println("Base handling: " + b.info());
&nbsp; }</code>

<code>&nbsp; void handle(Derived d) {
&nbsp; &nbsp; System.out.println("Derived handling: " + d.info());
&nbsp; }</code>

<code>}</code>

Result:
<code>
Base handling: Base class
Derived handling: Derived class
Base handling: Derived class
</code>

The choice which overloaded method to use is made at compile time - there types are Base (1), Derived (2) and Base (3) - made by explicit cast to Base.

Note that in case of miss of method <code>void handle(Derived d)</code>, then the method <code>handle(Base)</code>would handle all types and the result would be:
<code>
Base handling: Base class
Base handling: Derived class
Base handling: Derived class
</code>

So in other words, if we have a type <code>Derived</code> which <code>extends</code> <code>Base</code>, then method <code>handle(Base)</code> will be executed always for object of type <code>Base</code> and <code>Derived</code> casted to <code>Base</code>. In case of miss of method <code>handle(Derived)</code>, then <code>handle(Base)</code> will also handle object of type <code>Derived</code>.
Method <code>handle(Derived)</code> will be only used for objects of type <code>Derived</code> that are not casted to <code>Base</code>.

]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>672</wp:post_id>
  <wp:post_date>2010-09-21 09:28:49</wp:post_date>
  <wp:post_date_gmt>2010-09-21 09:28:49</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>method-overloading</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Java concurrency Executors.newCachedThreadPool()</title>
  <link>https://bmwieczorek.wordpress.com/2010/09/23/java-concurrency-executors-newcachedthreadpool/</link>
  <pubDate>Thu, 23 Sep 2010 14:51:03 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=688</guid>
  <description/>
  <content:encoded><![CDATA[<code>import static java.lang.Thread.currentThread;
import static java.util.concurrent.Executors.newCachedThreadPool;</code>

<code>public class MyExecutors {</code>

  <code>&nbsp; public static void main(String[] args) {
&nbsp; &nbsp; ExecutorService es = newCachedThreadPool();
&nbsp; &nbsp; Runnable task = new Runnable() {</code>

          <code>&nbsp; &nbsp; &nbsp; @Override
            &nbsp; &nbsp; &nbsp; public void run() {
                &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(currentThread().getName());
                &nbsp; &nbsp; &nbsp; &nbsp; sleep(1000);
            &nbsp; &nbsp; &nbsp; }
        &nbsp; &nbsp; };</code>

       <code>&nbsp; &nbsp;  for (int i = 0; i &lt; 5; i++) {
            &nbsp; &nbsp; &nbsp; es.execute(task);
&nbsp; &nbsp; &nbsp;            sleep(500); // 1
        &nbsp; &nbsp; }
&nbsp; &nbsp;         exec.shutdown();
&nbsp;     }</code>

    <code>&nbsp; private static void sleep(int value) {
        &nbsp; &nbsp; try {
         &nbsp; &nbsp; &nbsp;    Thread.sleep(value);
        &nbsp; &nbsp; } catch (InterruptedException e) {
&nbsp; &nbsp; &nbsp;             e.printStackTrace();
&nbsp; &nbsp;         }
&nbsp;     }
}</code>

Result - reusing cached treads:
<code>pool-1-thread-1
pool-1-thread-2
pool-1-thread-1
pool-1-thread-2
pool-1-thread-1</code>

After removing <code>sleep(500)</code> for the loop (// 1), we immediately need 5 threads and reuse is not possible:
<code>pool-1-thread-1
pool-1-thread-3
pool-1-thread-2
pool-1-thread-4
pool-1-thread-5</code>
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>688</wp:post_id>
  <wp:post_date>2010-09-23 14:51:03</wp:post_date>
  <wp:post_date_gmt>2010-09-23 14:51:03</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>java-concurrency-executors-newcachedthreadpool</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="concurrency"><![CDATA[Concurrency]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Executors.newCachedThreadPool vs Executors.newSingleThreadExecutor()</title>
  <link>https://bmwieczorek.wordpress.com/2010/09/23/executors-newcachedthreadpool-vs-executors-newsinglethreadexecutor/</link>
  <pubDate>Thu, 23 Sep 2010 15:29:08 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=697</guid>
  <description/>
  <content:encoded><![CDATA[public class MyExecutors {

&nbsp; public static void main(String[] args) {
&nbsp; &nbsp; ExecutorService ec = Executors.newSingleThreadExecutor();
&nbsp; &nbsp; long start = System.currentTimeMillis();
&nbsp; &nbsp; Runnable task = new Runnable() {

&nbsp; &nbsp; &nbsp; @Override
&nbsp; &nbsp; &nbsp; public void run() {
&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(currentThread().getName());
&nbsp; &nbsp; &nbsp; &nbsp; sleep(1000);
&nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; };

&nbsp; &nbsp; for (int i = 0; i &lt; 5; i++) {
&nbsp; &nbsp; &nbsp; ec.execute(task);
&nbsp; &nbsp; }

&nbsp; &nbsp; ec.shutdown();
&nbsp; &nbsp; waitTenSeconds(ec);
&nbsp; &nbsp; long stop = System.currentTimeMillis();
&nbsp; &nbsp; System.out.println(&quot;Took: &quot; + (stop - start));
&nbsp; }

&nbsp; private static void waitTenSeconds(ExecutorService ec) {
&nbsp; &nbsp; try {
&nbsp; &nbsp; &nbsp; ec.awaitTermination(10, TimeUnit.SECONDS);
&nbsp; &nbsp; } catch (InterruptedException e) {
&nbsp; &nbsp; &nbsp; e.printStackTrace();
&nbsp; &nbsp; }
&nbsp; }

&nbsp; private static void sleep(int value) {
&nbsp; &nbsp; try {
&nbsp; &nbsp; &nbsp; Thread.sleep(value);
&nbsp; &nbsp; } catch (InterruptedException e) {
&nbsp; &nbsp; &nbsp; e.printStackTrace();
&nbsp; &nbsp; }
&nbsp; }
}


The result for <code>Executors.newSingleThreadExecutor() </code>is slow, since every task needs to executed by the same thread: 
<code>pool-1-thread-1
pool-1-thread-1
pool-1-thread-1
pool-1-thread-1
pool-1-thread-1
Took: 5006
</code>

With <code>Executors.newCachedThreadPool() </code>the result much faster, result is:
<code>pool-1-thread-1
pool-1-thread-2
pool-1-thread-3
pool-1-thread-4
pool-1-thread-5
Took: 1002
</code>
In the loop, executor service will create new threads on demand and we don't need to wait until thread finishes to reuse it.

With <code>Executors.newFixedThreadPool(2)</code> with number of thread set to less than loop count, it will reuse the existing threads, but will not create new one. The result is between <code>newCachedThreadPool()</code> and <code>newSingleThreadExecutor()</code>:
<code>pool-1-thread-1
pool-1-thread-2
pool-1-thread-1
pool-1-thread-2
pool-1-thread-2
Took: 3005</code>.

]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>697</wp:post_id>
  <wp:post_date>2010-09-23 15:29:08</wp:post_date>
  <wp:post_date_gmt>2010-09-23 15:29:08</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>executors-newcachedthreadpool-vs-executors-newsinglethreadexecutor</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="concurrency"><![CDATA[Concurrency]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_d7aec827dbe49e12520dc7f7765945bf</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_78e756a0ef6080f8ddda69a309368e81</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_1a00998aedaa81689a0f8750dd760c17</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_fd9c81d256f5b12c70cce695400a8b65</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_259f54d12ff6689212f083f2de7e2a96</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_29d4f4d22eaa642744f47428b61ceb92</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_46a041975e233390f532fd9023b9ef57</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_dcb4704395de4091c18f14925ed12eca</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_b4d237608bc9a19c901f376e1597406a</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_bb207ba0eeb60197354a5ce32940c649</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_b531a92cc3dc72bba9ad5d274e516ac3</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_a2ee2a5a64f29b747d5669615fa66778</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_a89445f60021401f566252ee18dc7aff</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_8974498d672275bec77acfbae9927fdf</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_f251b1d674b6cb4092143f4749c7be57</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_a405e6fca797140a6218be65bec36ee7</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_a08eb5251c0505b5fae2d3ac8cf4df13</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_7d5e00034466d9bd5c3e38e64d510f41</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_eeb23893b3a2451111f86c120a2d39b6</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_6a20a8bb03dc4f99e05d206f57a3ab76</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_1b473e6e97560c43322a6d228d579b4d</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_30679a425d6a7ad98ea352482c9c179b</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_514a77b40f6d14b3e9bf3bd59033a56d</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Readers, writers concurrency problem</title>
  <link>https://bmwieczorek.wordpress.com/2010/09/23/readers-writers-concurrency-problem/</link>
  <pubDate>Thu, 23 Sep 2010 16:50:51 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=708</guid>
  <description/>
  <content:encoded><![CDATA[<code>package concurency.locks;
</code>
<code>import static java.lang.System.currentTimeMillis;
import static java.lang.System.out;
import static java.lang.Thread.currentThread;</code>

<code>import java.util.concurrent.locks.ReadWriteLock;
import java.util.concurrent.locks.ReentrantReadWriteLock;</code>

<code>public class RWEx {</code>

<code>&nbsp; <strong>final ReadWriteLock lock = new ReentrantReadWriteLock();</strong></code>

<code>&nbsp; void read(int limit) {
&nbsp; &nbsp; <strong>lock.readLock().lock()</strong>;
&nbsp; &nbsp; try {
&nbsp; &nbsp; &nbsp; doWithLimit("read", limit);
&nbsp; &nbsp; } finally {
&nbsp; &nbsp; &nbsp;<strong> lock.readLock().unlock();</strong>
&nbsp; &nbsp; }
&nbsp; }</code>

<code>&nbsp; void write(int limit) {
&nbsp; &nbsp; <strong>lock.writeLock().lock();</strong>
&nbsp; &nbsp; try {
&nbsp; &nbsp; &nbsp; doWithLimit("write", limit);
&nbsp; &nbsp; } finally {
&nbsp; &nbsp; &nbsp; <strong>lock.writeLock().unlock();</strong>
&nbsp; &nbsp; }
&nbsp; }</code>

<code>&nbsp; void doWithLimit(String action, int limit) {
&nbsp; &nbsp; for (int i = limit; i &gt; 0; i--) {
&nbsp; &nbsp; &nbsp; String thread = currentThread().getName();
&nbsp; &nbsp; &nbsp; out.println(thread+","+action+",left "+i+sec());
&nbsp; &nbsp; &nbsp; sleepSeconds(1);
&nbsp; &nbsp; }
&nbsp; }</code>

<code>&nbsp; public static void main(String[] args) {
&nbsp; &nbsp; RWEx rw = new RWEx();
&nbsp; &nbsp; rw.createReader(rw, 3).start();
&nbsp; &nbsp; sleepSeconds(1);
&nbsp; &nbsp; rw.createReader(rw, 3).start();
&nbsp; &nbsp; rw.createWriter(rw, 3).start();
&nbsp; }</code>

<code>&nbsp; Thread createWriter(final RWEx rwEx, final int limit){
&nbsp; &nbsp; return new Thread(new Runnable() {</code>

<code>&nbsp; &nbsp; &nbsp; @Override
&nbsp; &nbsp; &nbsp; public void run() {
&nbsp; &nbsp; &nbsp; &nbsp; rwEx.write(limit);
&nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; });
&nbsp; }</code>

<code>&nbsp; Thread createReader(final RWEx rwEx, final int limit){
&nbsp; &nbsp; return new Thread(new Runnable() {</code>

<code>&nbsp; &nbsp; &nbsp; @Override
&nbsp; &nbsp; &nbsp; public void run() {
&nbsp; &nbsp; &nbsp; &nbsp; rwEx.read(limit);
&nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; });
&nbsp; }</code>

<code>&nbsp; static void sleepSeconds(int n) {
&nbsp; &nbsp; try {
&nbsp; &nbsp; &nbsp; Thread.sleep(1000 * n);
&nbsp; &nbsp; } catch (InterruptedException e) {
&nbsp; &nbsp; &nbsp; e.printStackTrace();
&nbsp; &nbsp; }
&nbsp; }</code>

<code>&nbsp; static String sec() {
&nbsp; &nbsp; long currentTimeMillis = currentTimeMillis();
&nbsp; &nbsp; long value = currentTimeMillis / 1000;
&nbsp; &nbsp; return ", second " + (value - (value / 100 * 100));
&nbsp; }</code>

<code>}</code>


Result:

// starting first reader

Thread-0,read,left 3, second 0
Thread-0,read,left 2, second 1

//starting second reader while first still running

Thread-1,read,left 3, second 1
Thread-0,read,left 1, second 2

// first reader finished, second still running

Thread-1,read,left 2, second 2
Thread-1,read,left 1, second 3

// second reader finished 

// writer finally got exclusive access 
// writer started 

Thread-2,write,left 3, second 4
Thread-2,write,left 2, second 5
Thread-2,write,left 1, second 6

// writer finished 

Note: each writer needs exclusive access for writing, readers can join reading readers.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>708</wp:post_id>
  <wp:post_date>2010-09-23 16:50:51</wp:post_date>
  <wp:post_date_gmt>2010-09-23 16:50:51</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>readers-writers-concurrency-problem</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="concurrency"><![CDATA[Concurrency]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Reentant locks</title>
  <link>https://bmwieczorek.wordpress.com/2010/09/23/reentant-locks/</link>
  <pubDate>Thu, 23 Sep 2010 17:42:41 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=730</guid>
  <description/>
  <content:encoded><![CDATA[<code>
public class ReentrLockEx {</code>

<code>&nbsp; final Lock lock = new ReentrantLock();</code>
<code>
&nbsp; void keepLock(int limit) {
&nbsp; &nbsp; String t = currentThread().getName();
&nbsp; &nbsp; lock.lock();
&nbsp; &nbsp; out.println(t + ",acquired and keeping lock+ ");
&nbsp; &nbsp; try {
&nbsp; &nbsp; &nbsp; for (int i = limit; i &gt; 0; i--) {
&nbsp; &nbsp; &nbsp; &nbsp; out.println(t+",keep lock, left"+i+","+sec());
&nbsp; &nbsp; &nbsp; &nbsp; sleepSeconds(1);
&nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; } finally {
&nbsp; &nbsp; &nbsp; lock.unlock();
&nbsp; &nbsp; }</code>

<code>&nbsp; }</code>

<code>&nbsp; void tryToAcquireLock() {
&nbsp; &nbsp; String thread = currentThread().getName();
&nbsp; &nbsp; out.println(thread + ",trying to aquire lock ");
&nbsp; &nbsp; boolean result = lock.tryLock();
&nbsp; &nbsp; try {
&nbsp; &nbsp; &nbsp; if (result)
&nbsp; &nbsp; &nbsp; &nbsp; out.println(thread + ",aquired lock ");
&nbsp; &nbsp; &nbsp; else
&nbsp; &nbsp; &nbsp; &nbsp; out.println(thread + ",failed to aquire");
&nbsp; &nbsp; } finally {
&nbsp; &nbsp; &nbsp; if (result)
&nbsp; &nbsp; &nbsp; &nbsp; lock.unlock();
&nbsp; &nbsp; }</code>

<code>&nbsp; }</code>

<code>&nbsp; void acquireLock() {
&nbsp; &nbsp; String thread = currentThread().getName();
&nbsp; &nbsp; out.println(thread + " aquire lock ");
&nbsp; &nbsp; lock.lock();
&nbsp; &nbsp; try {
&nbsp; &nbsp; &nbsp; System.out.println(thread + " aquired ");
&nbsp; &nbsp; } finally {
&nbsp; &nbsp; &nbsp; lock.unlock();
&nbsp; &nbsp; }
&nbsp; }</code>

<code>&nbsp; public static void main(String[] args) {
&nbsp; &nbsp; ReentrLockEx rlEx = new ReentrLockEx();
&nbsp; &nbsp; rlEx.createKeeping(rlEx, 5).start();
&nbsp; &nbsp; sleepSeconds(1);
&nbsp; &nbsp; rlEx.createTryToAcquire(rlEx).start();
&nbsp; &nbsp; sleepSeconds(1);
&nbsp; &nbsp; rlEx.createAquiring(rlEx).start();
&nbsp; }</code>
<code>
&nbsp; Thread createAquiring(final ReentrLockEx rlEx) {
&nbsp; &nbsp; return new Thread(new Runnable() {</code>

<code>&nbsp; &nbsp; &nbsp; @Override
&nbsp; &nbsp; &nbsp; public void run() {
&nbsp; &nbsp; &nbsp; &nbsp; rlEx.acquireLock();
&nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; });
&nbsp; }</code>

<code>&nbsp; Thread createKeeping(final ReentrLockEx rlEx, final int limit) {
&nbsp; &nbsp; return new Thread(new Runnable() {</code>

<code>&nbsp; &nbsp; &nbsp; @Override
&nbsp; &nbsp; &nbsp; public void run() {
&nbsp; &nbsp; &nbsp; &nbsp; rlEx.keepLock(limit);
&nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; });
&nbsp; }</code>

<code>&nbsp; Thread createTryToAcquire(final ReentrLockEx rlEx) {
&nbsp; &nbsp; return new Thread(new Runnable() {</code>

<code>&nbsp; &nbsp; &nbsp; @Override
&nbsp; &nbsp; &nbsp; public void run() {
&nbsp; &nbsp; &nbsp; &nbsp; rlEx.tryToAcquireLock();
&nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; });
&nbsp; }</code>
<code>
&nbsp; static void sleepSeconds(int n) {
&nbsp; &nbsp; try {
&nbsp; &nbsp; &nbsp; Thread.sleep(1000 * n);
&nbsp; &nbsp; } catch (InterruptedException e) {
&nbsp; &nbsp; &nbsp; e.printStackTrace();
&nbsp; &nbsp; }
&nbsp; }</code>

<code>&nbsp; static String sec() {
&nbsp; &nbsp; long currentTimeMillis = currentTimeMillis();
&nbsp; &nbsp; long value = currentTimeMillis / 1000;
&nbsp; &nbsp; return ", second " + (value - (value / 100 * 100));
&nbsp; }</code>

<code>}</code>


Result:
<code>

// thread0 acquired the lock and will keep it for 5 secs

Thread-0,acquired and keeping lock 
Thread-0,keep lock, left 5 , second 0
Thread-0,keep lock, left 4 , second 1

// thread1 will try to acquire the lock, but fails (not blocking, returns false) 
// to obtain it since the lock is still used by thread0

Thread-1,trying to aquire lock 
Thread-1,failed to aquire

Thread-0,keep lock, left 3 , second 2

// thread2 'll wait to aquire the lock (blocking) until thread0 releases it

Thread-2 aquire lock 
Thread-0,keep lock, left 2 , second 3
Thread-0,keep lock, left 1 , second 4

// thread0 releases the lock

// thread2 finally acquires the lock
Thread-2 aquired </code>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>730</wp:post_id>
  <wp:post_date>2010-09-23 17:42:41</wp:post_date>
  <wp:post_date_gmt>2010-09-23 17:42:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>reentant-locks</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Thread join()</title>
  <link>https://bmwieczorek.wordpress.com/2010/09/24/thread-join/</link>
  <pubDate>Fri, 24 Sep 2010 08:42:28 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=739</guid>
  <description/>
  <content:encoded><![CDATA[<code>public class ThreadJoinEx {</code>

<code>&nbsp; public static void main(String[] args) throws InterruptedException {
&nbsp; &nbsp; ThreadJoinEx tjEx = new ThreadJoinEx();
&nbsp; &nbsp; out.println(threadName() + "starting" + sec());
&nbsp; &nbsp; Thread sleepingThread = tjEx.createSleeping(5);
&nbsp; &nbsp; sleepingThread.start();
&nbsp; &nbsp; <strong>sleepingThread.join();</strong>
&nbsp; &nbsp; out.println(threadName() + "finished" + sec());
&nbsp; }</code>

<code>&nbsp; Thread createSleeping(final int limit) {
&nbsp; &nbsp; return new Thread(new Runnable() {</code>

<code>&nbsp; &nbsp; &nbsp; @Override
&nbsp; &nbsp; &nbsp; public void run() {
&nbsp; &nbsp; &nbsp; &nbsp; for (int i = limit; i &gt; 0; i--) {
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; out.println(threadName()+"sleep,"+i+sec());
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sleepSeconds(1);
&nbsp; &nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; });
&nbsp; }</code>

<code>&nbsp; static String threadName() {
&nbsp; &nbsp; return Thread.currentThread().getName() + ",";
&nbsp; }</code>

<code>&nbsp; static void sleepSeconds(int n) {
&nbsp; &nbsp; try {
&nbsp; &nbsp; &nbsp; Thread.sleep(1000 * n);
&nbsp; &nbsp; } catch (InterruptedException e) {
&nbsp; &nbsp; &nbsp; e.printStackTrace();
&nbsp; &nbsp; }
&nbsp; }</code>

<code>&nbsp; static String sec() {
&nbsp; &nbsp; long currentTimeMillis = currentTimeMillis();
&nbsp; &nbsp; long value = currentTimeMillis / 1000;
&nbsp; &nbsp; return ",second " + (value - (value / 100 * 100));
&nbsp; }</code>

<code>}</code>

Result:
<code>

// started main thread
main,starting,second 0

// started sleeping thread

Thread-0,sleep,5,second 0
Thread-0,sleep,4,second 1
Thread-0,sleep,3,second 2
Thread-0,sleep,2,second 3
Thread-0,sleep,1,second 4

// sleeping thread finished
// main thread finished
main,finished,second 5
</code>

Main thread will wait till sleeping thread completes before main finishes <code><strong>sleepingThread.join();</strong></code>. 

If we omit call to <code>sleepingThread.join()</code> then the main thread would finish immediately, the <code>sleepingThread</code> would continue to run:

main,starting,second 0
Thread-0,sleep,5,second 0
main,finished,second 0
Thread-0,sleep,4,second 1
Thread-0,sleep,3,second 2
Thread-0,sleep,2,second 3
Thread-0,sleep,1,second 4
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>739</wp:post_id>
  <wp:post_date>2010-09-24 08:42:28</wp:post_date>
  <wp:post_date_gmt>2010-09-24 08:42:28</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>thread-join</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="concurrency"><![CDATA[Concurrency]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Callable</title>
  <link>https://bmwieczorek.wordpress.com/2010/09/24/callable/</link>
  <pubDate>Fri, 24 Sep 2010 09:14:06 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=749</guid>
  <description/>
  <content:encoded><![CDATA[<code>public class CallableExample {</code>
<code>
&nbsp; public static void main(String[] args) throws Exception {</code>

<code>&nbsp; &nbsp; String text = "Ala ma kota";
&nbsp; &nbsp; ExecutorService es = newFixedThreadPool(3);
&nbsp; &nbsp; int result = 0;
&nbsp; &nbsp; for (String word : text.split(" ")) {
&nbsp; &nbsp; &nbsp; <strong>Future&lt;Integer&gt; fut = es.submit(callable(word));
&nbsp; &nbsp; &nbsp; result += fut.get();</strong>
&nbsp; &nbsp; }
&nbsp; &nbsp; es.shutdown();
&nbsp; &nbsp; out.println("Number of non-space chars: " + result);
&nbsp; }</code>

<code>&nbsp; static Callable&lt;Integer&gt; callable(final String word) {
&nbsp; &nbsp; return new Callable&lt;Integer&gt;() {
</code>
<code>&nbsp; &nbsp; &nbsp; @Override
&nbsp; &nbsp; &nbsp; public Integer call() throws Exception {
&nbsp; &nbsp; &nbsp; &nbsp; out.println(threadName() + word);
&nbsp; &nbsp; &nbsp; &nbsp; return word.length();
&nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; };
&nbsp; }</code>

<code>&nbsp; static String threadName() {
&nbsp; &nbsp; return Thread.currentThread().getName() + ",";
&nbsp; }</code>

Result:
<code>pool-1-thread-1,Ala
pool-1-thread-2,ma
pool-1-thread-3,kota
Number of non-space characters: 9</code>

Note: you <code>execute Runnable</code> and <code>submit Callable</code> on the <code>ExecutorService</code>. The <code>get</code> method on <code>Future</code> is bloking operation, waiting for the result.
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>749</wp:post_id>
  <wp:post_date>2010-09-24 09:14:06</wp:post_date>
  <wp:post_date_gmt>2010-09-24 09:14:06</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>callable</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="concurrency"><![CDATA[Concurrency]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>How to install tomcat with multiple CATALINA_BASE instances</title>
  <link>https://bmwieczorek.wordpress.com/2010/09/24/how-to-install-tomcat-with-multiple-catalina_base-instances/</link>
  <pubDate>Fri, 24 Sep 2010 15:43:26 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=787</guid>
  <description/>
  <content:encoded><![CDATA[<pre>&lt;project name="MyProject" default="build" basedir="."&gt;
 &lt;description&gt;Build base catalina from scratch&lt;/description&gt;
 &lt;!-- set global properties for this build --&gt;
 &lt;property name="tomcat.version" value="6.0.26"/&gt;
 &lt;property name="tomcat.name" value="apache-tomcat-${tomcat.version}" /&gt;
 &lt;property name="tomcat.archive" value="${tomcat.name}.zip" /&gt;
 &lt;property name="catalina.home" location="${tomcat.name}"/&gt;
 &lt;property name="catalina.base" location="DEV-catalina-base"/&gt;
 &lt;property name="catalina.pid" location="${catalina.base}/catalina.pid"/&gt;

 &lt;target name="clean" description="clean up" &gt;
 &lt;delete dir="${catalina.home}"/&gt;
 &lt;delete dir="${catalina.base}"/&gt;
 &lt;/target&gt;

 &lt;target name="download"&gt;
 &lt;get dest="${basedir}" usetimestamp="true" &gt;
 &lt;url url="http://archive.apache.org/dist/tomcat/tomcat-6/v${tomcat.version}/bin/${tomcat.name}.zip"/&gt;
 &lt;/get&gt;
 &lt;/target&gt;

 &lt;target name="unpack" depends="download"&gt;
 &lt;unzip src="${tomcat.archive}" dest="${basedir}"/&gt;
 &lt;/target&gt;

 &lt;target name="build-catalina-base" depends="unpack" description="build catalina base" &gt;

 &lt;mkdir dir="${catalina.base}" /&gt;
 &lt;mkdir dir="${catalina.base}/bin" /&gt;
 &lt;mkdir dir="${catalina.base}/conf" /&gt;
 &lt;mkdir dir="${catalina.base}/logs" /&gt;
 &lt;mkdir dir="${catalina.base}/temp" /&gt;
 &lt;mkdir dir="${catalina.base}/webapps" /&gt;
 &lt;mkdir dir="${catalina.base}/work" /&gt;
 &lt;copy file="${catalina.home}/conf/server.xml" todir="${catalina.base}/conf"/&gt;
 &lt;copy file="${catalina.home}/conf/web.xml" todir="${catalina.base}/conf"/&gt;
 &lt;echo file="${catalina.base}/bin/startup.sh" &gt;#!/bin/bash
 export CATALINA_HOME="${catalina.home}"
 export CATALINA_BASE="${catalina.base}"
 export CATALINA_PID="${catalina.pid}"
 "${CATALINA_HOME}"/bin/startup.sh
 &lt;/echo&gt;
 &lt;echo file="${catalina.base}/bin/shutdown.sh" &gt;#!/bin/bash
 export CATALINA_HOME="${catalina.home}"
 export CATALINA_BASE="${catalina.base}"
 export CATALINA_PID="${catalina.pid}"
 "${CATALINA_HOME}"/bin/shutdown.sh
 &lt;/echo&gt;
 &lt;chmod dir="${catalina.base}/bin" perm="ugo+rx" includes="**/*.sh"/&gt;
 &lt;chmod dir="${catalina.home}/bin" perm="ugo+rx" includes="**/*.sh"/&gt;
 &lt;/target&gt;

 &lt;target name="build-tomcat-manager" depends="build-catalina-base" description="Build catalina base with tomcat manager"&gt;
 &lt;copy todir="${catalina.base}/webapps/ROOT"&gt;
 &lt;fileset dir="${catalina.home}/webapps/ROOT"/&gt;
 &lt;/copy&gt;
 &lt;echo file="${catalina.base}/conf/tomcat-users.xml" &gt;&lt;![CDATA[&lt;?xml version='1.0' encoding='utf-8'?&gt;
 &lt;tomcat-users&gt;
 &lt;role rolename="manager"/&gt;
 &lt;user username="admin" password="" roles="manager"/&gt;
 &lt;/tomcat-users&gt;]]&gt;
 &lt;/echo&gt;
 &lt;echo file="${catalina.base}/conf/Catalina/localhost/manager.xml" &gt;&lt;![CDATA[&lt;?xml version='1.0' encoding='utf-8'?&gt;
 &lt;Context docBase="$${catalina.home}/webapps/manager" privileged="true" antiResourceLocking="false" /&gt;]]&gt;
 &lt;/echo&gt;
 &lt;/target&gt;

 &lt;target name="build" depends="build-catalina-base,build-tomcat-manager" /&gt;

&lt;/project&gt;

</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>787</wp:post_id>
  <wp:post_date>2010-09-24 15:43:26</wp:post_date>
  <wp:post_date_gmt>2010-09-24 15:43:26</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>how-to-install-tomcat-with-multiple-catalina_base-instances</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>wait() and notify()</title>
  <link>https://bmwieczorek.wordpress.com/2010/09/27/wait-and-notify/</link>
  <pubDate>Mon, 27 Sep 2010 16:12:11 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=792</guid>
  <description/>
  <content:encoded><![CDATA[<code>public class MyWaitNotify {</code>

<code>&nbsp; boolean flag;</code>

<code>&nbsp; synchronized void plus() throws InterruptedException {
&nbsp; &nbsp; System.out.print("+");
&nbsp; &nbsp; flag = true;
&nbsp; &nbsp; notify();
&nbsp; &nbsp; while (flag) {
&nbsp; &nbsp; &nbsp; wait();
&nbsp; &nbsp; }
&nbsp; }</code>

<code>&nbsp; synchronized void minus() throws InterruptedException{
&nbsp; &nbsp; System.out.print("-");
&nbsp; &nbsp; flag = false;
&nbsp; &nbsp; notify();
&nbsp; &nbsp; while (!flag) {
&nbsp; &nbsp; &nbsp; wait();
&nbsp; &nbsp; }
&nbsp; }
</code>
<code>&nbsp; public static void main(String[] args) {
&nbsp; &nbsp; final MyWaitNotify mwn = new MyWaitNotify();</code>

<code>&nbsp; &nbsp; new Thread(new Runnable() {</code>
<code>
&nbsp; &nbsp; &nbsp; @Override
&nbsp; &nbsp; &nbsp; public void run() {
&nbsp; &nbsp; &nbsp; &nbsp; while (true) {
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; mwn.plus();
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; }).start();</code>

<code>&nbsp; &nbsp; new Thread(new Runnable() {</code>

<code>&nbsp; &nbsp; &nbsp; @Override
&nbsp; &nbsp; &nbsp; public void run() {
&nbsp; &nbsp; &nbsp; &nbsp; while (true) {
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; mwn.minus();
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (InterruptedException e) {
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; e.printStackTrace();
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; }).start();
&nbsp; }
}</code>

Result:
+-+-+-+-+- ...


<code>wait()</code> - suspends the task and waits until another thread wakes it up by calling <code>notify()</code>.The waiting task after receiving notify signal checks the condition in the loop and if not met, exits the loop. In this example, the shared monitor is <strong><code>this</code></strong>. We can call <code>notify()</code> and <code>wait()</code> on other instances: 
<code>synchronized(sharedMonitor){
&nbsp; &nbsp; ...
&nbsp; &nbsp; sharedMonitor.wait();
&nbsp; &nbsp; ...
&nbsp; &nbsp; sharedMonitor.notify();
&nbsp; &nbsp; ...
}</code>

Rules of the thumb:
	<li>always put all the <code>wait()</code>, <code>notify()</code> and setting condition(s) into synchronized methods</li>
	<li>put <code>wait()</code> in the loop checking a condition of interest (double security from unexpected behavior when more tasks would be involved)  </li>
	<li>precede <code>notify()</code> with the condition(s) set to value that enables:
 - the same task to enter the loop to reach <code>wait() </code> (meet the condition)
 - the other thread to exist the loop (not meet the condition)</li>

]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>792</wp:post_id>
  <wp:post_date>2010-09-27 16:12:11</wp:post_date>
  <wp:post_date_gmt>2010-09-27 16:12:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>wait-and-notify</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="concurrency"><![CDATA[Concurrency]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Deamon threads</title>
  <link>https://bmwieczorek.wordpress.com/2010/09/27/deamon-threads/</link>
  <pubDate>Mon, 27 Sep 2010 17:05:18 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=808</guid>
  <description/>
  <content:encoded><![CDATA[<code>public class DeamonThreads {</code>

<code>&nbsp; public static void main(String[] args) {
&nbsp; &nbsp; System.out.println(threadName() + " started");
&nbsp; &nbsp; Thread sleepingThread = sleepingThread();
&nbsp; &nbsp;<strong> sleepingThread.setDaemon(true);</strong>
&nbsp; &nbsp; sleepingThread.start();
&nbsp; &nbsp; System.out.println(threadName() + " finished");
&nbsp; }</code>

<code>&nbsp; private static Thread sleepingThread() {
&nbsp; &nbsp; return new Thread(new Runnable() {</code>

<code>&nbsp; &nbsp; &nbsp; @Override
&nbsp; &nbsp; &nbsp; public void run() {
&nbsp; &nbsp; &nbsp; &nbsp; out.println(threadName() + " started");
&nbsp; &nbsp; &nbsp; &nbsp; sleepSeconds(5);
&nbsp; &nbsp; &nbsp; &nbsp; out.println(threadName() + " finished");
&nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; });
&nbsp; }</code>

<code>&nbsp; private static void sleepSeconds(int n) {
&nbsp; &nbsp; try {
&nbsp; &nbsp; &nbsp; Thread.sleep(1000 * n);
&nbsp; &nbsp; } catch (InterruptedException e) {
&nbsp; &nbsp; &nbsp; e.printStackTrace();
&nbsp; &nbsp; }
&nbsp; }</code>
<code>
&nbsp; private static String threadName() {
&nbsp; &nbsp; return second()+":"+currentThread().getName()+":";
&nbsp; }</code>

<code>&nbsp; private static String second() {
&nbsp; &nbsp; long currentTimeMillis = currentTimeMillis();
&nbsp; &nbsp; long value = currentTimeMillis / 1000;
&nbsp; &nbsp; return "Second " + (value - (value / 100 * 100));
&nbsp; }
}</code>

Result:
<code>Second 0:main: started
Second 0:Thread-0: started
Second 0:main: finished</code>

<code>Thread-0</code> is started as deamon thread by <code>main</code> thread. Deamons are immediately killed when <code>main</code> finishes.

If we set <code>Thread-0</code> to non deamon, then the non deamon continues to run even if <code>main</code> thread finished:
<code>Second 0:main: started
Second 0:Thread-0: started
Second 0:main: finished
Second 5:Thread-0: finished</code>


]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>808</wp:post_id>
  <wp:post_date>2010-09-27 17:05:18</wp:post_date>
  <wp:post_date_gmt>2010-09-27 17:05:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>deamon-threads</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="concurrency"><![CDATA[Concurrency]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>CopyOnWriteArrayList vs ArrayList and ConcurrentModificationException</title>
  <link>https://bmwieczorek.wordpress.com/2010/09/27/copyonwritearraylist-vs-arraylist-and-concurrentmodificationexception/</link>
  <pubDate>Mon, 27 Sep 2010 17:32:53 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=816</guid>
  <description/>
  <content:encoded><![CDATA[<code>public class ArrayAccess {
&nbsp; final static List ints = new ArrayList();
&nbsp; static {
&nbsp; &nbsp; ints.add(1);
&nbsp; &nbsp; ints.add(2);
&nbsp; &nbsp; ints.add(3);
&nbsp; }
</code>
<code>&nbsp; public static void main(String[] args) {
&nbsp; &nbsp; iteratingThread().start();
&nbsp; &nbsp; ints.remove(2);
&nbsp; &nbsp; for (Integer j : ints) {
&nbsp; &nbsp; &nbsp; System.err.println(threadName() + j);
&nbsp; &nbsp; }
&nbsp; }</code>

<code>&nbsp; private static Thread iteratingThread() {
&nbsp; &nbsp; return new Thread(new Runnable() {</code>

<code>&nbsp; &nbsp; &nbsp; @Override
&nbsp; &nbsp; &nbsp; public void run() {
&nbsp; &nbsp; &nbsp; &nbsp; for (Integer i : ints) {
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(threadName() + i);
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sleepSeconds(1);
&nbsp; &nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; &nbsp; }
&nbsp; &nbsp; });
&nbsp; }
</code>
<code>&nbsp; private static void sleepSeconds(int n) {
&nbsp; &nbsp; try {
&nbsp; &nbsp; &nbsp; Thread.sleep(1000 * n);
&nbsp; &nbsp; } catch (InterruptedException e) {
&nbsp; &nbsp; &nbsp; e.printStackTrace();
&nbsp; &nbsp; }
&nbsp; }</code>

<code>&nbsp; private static String threadName() {
&nbsp; &nbsp; return currentThread().getName() + ":";
&nbsp; }
}</code>

Result:
<code>Thread-0:1
main:1
main:2
Exception in thread "Thread-0" java.util.ConcurrentModificationException
...</code>

While one thread was slowly iterating through the list, another thread was trying to remove an item and we got concurrent modification exception. The solution is to use <code>CopyOnWriteArrayList</code>:

<code>final static List ints = new CopyOnWriteArrayList();</code>

Then the result is:
<code>Thread-0:1
main:1
main:2
Thread-0:2
Thread-0:3</code>

]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>816</wp:post_id>
  <wp:post_date>2010-09-27 17:32:53</wp:post_date>
  <wp:post_date_gmt>2010-09-27 17:32:53</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>copyonwritearraylist-vs-arraylist-and-concurrentmodificationexception</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="concurrency"><![CDATA[Concurrency]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Hibernate essentials</title>
  <link>https://bmwieczorek.wordpress.com/2010/09/28/hibernate-essentials/</link>
  <pubDate>Tue, 28 Sep 2010 07:38:45 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=821</guid>
  <description/>
  <content:encoded><![CDATA[<strong>Hibernate</strong>
<li>Configuration</li>
- via hibernate.cfg.xml (or hibernate.propeties) and *.hbm.xml mapping files
- via annotations
<li>single  thread-safe instance of <strong>SessionFactory</strong> which is used by many thread to create <strong>Session</strong> instances.</li>
<li><strong>SessionFactory</strong> is a concept of single datastore, is build usually once at startup</li>
<li><strong>Session</strong> is lightweight, non-thread-safe, cannot be shared among threads, it represents a signle unit of work with database, it is opened by SessionFactory and closed when all the work is complete. Session obtains db connection lazily - only when required. In order not to create too many sessions, for the same thread the same calls to get currentSession return the same session instance via ThreadLocal mechanism. Session is a primary interface to persistence service. It is important to close the session after your work is done.</li>
<li><strong>transaction</strong> - short lived, single threaded object used by application to specify atomicity, transaction abstracts your application code from underlying JDBC, JTA transactions. Sometimes for long-user-thinking transaction, it is worth to split one long transaction into several ones (by calling <em>tx.commit()</em>). You can use detached objects to from first transaction to transfer data up to presentation layer and later reattach them to new transaction.</li>

<strong>Object states</strong>
<li><strong>persistent</strong> - short lived objects that are currently associated with a session (signle threaded), they store persistent state which is synchronized with db (depending on your <em>flush strategy</em> - e.g. <em>auto-flush</em> immediately on call setXXX or remove from collection, or explicit synchronization on <em>session.flush()</em>, <em>transaction.commit()</em>). When the session is closed persistent objects become detached objects. Persistent objects: car after session.save(car) or car2 after session.load(Car.class)</li>
<li><strong>detached</strong> - are not currently associated with the session, they can be used as Data Transfer Objects without having impact on database so they can be passed across all the layers. Detached objects can be attached to session by calling session.update() or session.saveOrUpdate() and become persistent objects. Detached objects: car after session.evict(car)  </li>
<li><strong>transient</strong> - newly created objects, were never associated with a session, they can be freely used as Data Transfer Object without having impact on db, they become persistent after calling session.save(). Transient objects car after car = new Car(); or car2 after session.delete(car2)</li>

Detached objects (that were associated with a session) and transient objects (newly created) are distinguishable by <em>version</em> property - if there is one - otherwise by <em>identifier</em> value (work only for Hibernate managed surrogate key).


<strong>Hibernate Query Language HQL</strong> is a OO extension to SQL supporting inheritance and polymorphism. Is uses classes and properties instead tables and columns, HQL is less verbose and supports automatic association joining:

<code>Query query = <strong>session.createQuerry</strong>("Select car from Car as car <em>join car.parts</em> as part where car.color = 'black' and part.cost &gt; '100'"); 
return query.list();</code>
SQL verbose: Car as car join Part part on car.part_id = part.id 

Query by criteria:
<code>Criteria criteria = <strong>session.createCriteria</strong>(Car.class)
criteria.add(Expression.eq("color", "black"));
return criteria.list();
 </code>

To support legacy applications that have <strong>null</strong> values e.g. for <strong>Boolean</strong> in legacy table, it is recommended to use wrapper classes (<em>Integer</em>, <strong>Boolean</strong>) instead of primitives, so that Hibernate will not throw <em>PropertyAccessException</em>.

<strong>Graph of objects manipulation</strong>
	<li><strong>cascade</strong> - transitive persistence - whether if parent is deleted should also all children be deleted (all-delete-orphan), whether if updates/deletes/saves are automatically passed to children (save-update, delete or all),  whether if delete a child if gets disconnected from parent (delete-orphan)</li>
	<li><strong>lazy loading</strong> - default true - determines if all associated objects should be loaded lazily or eagerly when calling session.get(), session.load() or session.find(). The lazy loading uses proxy objects. If you want to access lazily loaded collection, make sure session is still open, otherwise the exception will be thrown. </li>

When object is not found <code>session.load()</code> throws exception, <code>session.get()</code> returns <code>null</code>.

Example:

<code>@MappedSuperclass
public class AbstractDomainObject implements Serializable {</code>

<code>&nbsp; /** Unique identifier */
&nbsp; private Long id;</code>

<code>&nbsp; /**  version for optimistic locking */
&nbsp; private transient int version = -1;</code>

<code>&nbsp; @Id
&nbsp; @GeneratedValue(strategy = GenerationType.IDENTITY)
&nbsp; @Column(name = "ID")
&nbsp; public Long getId() {
&nbsp; &nbsp; return id;
&nbsp; }</code>

<code>&nbsp; @Version
&nbsp; @Column(name = "VERSION", nullable = false)
&nbsp; public int getVersion() {
&nbsp; &nbsp; return version;
&nbsp; }</code>

<code>&nbsp; &nbsp; ... setters, hashcode and equals ...
}</code>


<code>@Entity
@Table(name = "COMPANY")
public class Company extends AbstractDomainObject {</code>

<code>&nbsp; private String name;
&nbsp; private List employees = new ArrayList();</code>

<code>&nbsp; // hibernate required
&nbsp; Company() {
&nbsp; }</code>

<code>&nbsp; // we must explicitly set ref from empl to its company
&nbsp; public Company(String name, List employees) {
&nbsp; &nbsp; this.name = name;
&nbsp; &nbsp; for (Employee employee : employees) {
&nbsp; &nbsp; &nbsp; employee.setCompany(this);
&nbsp; &nbsp; &nbsp; this.employees.add(employee);
&nbsp; &nbsp; }
&nbsp; }</code>

<code>&nbsp; @Column(name = "NAME")
&nbsp; public String getName() {
&nbsp; &nbsp; return name;
&nbsp; }</code>

<code>&nbsp; <strong>@OneToMany(mappedBy="company",cascade=ALL,fetch=EAGER)</strong>
&nbsp; public <strong>List getEmployees()</strong> {
&nbsp; &nbsp; return employees;
&nbsp; }</code>

&nbsp; &nbsp; <code> ... setters ...</code>

<code>}</code>

SQL:
<code>create table COMPANY (ID bigint not null auto_increment, VERSION integer not null, NAME varchar(255), primary key (ID))</code>

<code>insert into COMPANY (VERSION, NAME) values (0, 'K')</code>


<code>@Entity
@Table(name = "EMPLOYEE")
public class Employee extends AbstractDomainObject {</code>

<code>&nbsp; private String name;
&nbsp; private Company company;</code>

<code>&nbsp; // Hibernate required
&nbsp; Employee() {
&nbsp; }</code>
<code>
&nbsp; public Employee(String name) {
&nbsp; &nbsp; this.name = name;
&nbsp; }
</code>
<code>&nbsp; @Column(name = "NAME")
&nbsp; public String getName() {
&nbsp; &nbsp; return name;
&nbsp; }
</code>
<code>&nbsp; @ManyToOne()
&nbsp; @JoinColumn(name = "COMPANY_ID", nullable = true)
&nbsp; @ForeignKey(name = "FK_EMPLOYEE_COMPANY")
&nbsp; public Company getCompany() {
&nbsp; &nbsp; return company;
&nbsp; }</code>

&nbsp; &nbsp;<code> ... setters ...</code>

<code>}</code>

SQL:
<code>create table EMPLOYEE (ID bigint not null auto_increment, VERSION integer not null, NAME varchar(255), COMPANY_ID bigint, primary key (ID))</code>

<code>alter table EMPLOYEE add index FK_EMPLOYEE_COMPANY (COMPANY_ID), add constraint FK_EMPLOYEE_COMPANY foreign key (COMPANY_ID) references COMPANY (ID)</code>

<code>insert into EMPLOYEE (VERSION, COMPANY_ID, NAME) values (0, 1, 'aaa')</code>

Company has employees. Presence of foreign key on EMPLOYEE.COMPANY_ID referencing COMPANY.ID (primary key) means that Employee only exists when is associated with already existing Company.

TEST

<code>@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = { "classpath:test-resources.xml", "classpath:infrastructure-context.xml",
"classpath:datasources.xml", "classpath:dao-context.xml", "classpath:transaction-context.xml",
&nbsp; &nbsp; "classpath:hibernate-annotated-classes-context.xml" })
public class HibernatePersonDaoTest {</code>

<code>&nbsp; @Autowired
&nbsp; private CompanyDao dao;</code>

<code>&nbsp; @Test
&nbsp; public void testSaveIntoDB() {
&nbsp; &nbsp; Employee a = new Employee("aaa");
&nbsp; &nbsp; Employee b = new Employee("bbb");
&nbsp; &nbsp; Employee c = new Employee("ccc");
&nbsp; &nbsp; dao.saveOrUpdate(new Company("K", asList(a, b, c)));</code>

<code>&nbsp; &nbsp; Employee x = new Employee("xxx");
&nbsp; &nbsp; Employee y = new Employee("yyy");
&nbsp; &nbsp; Employee z = new Employee("zzz");
&nbsp; &nbsp; dao.saveOrUpdate(new Company("L", asList(x, y, z)));</code>

<code>&nbsp; &nbsp; System.err.println("---------------");
&nbsp; &nbsp; List companies = companyDao.getCompanies();
&nbsp; &nbsp; for (Company company : companies) {
&nbsp; &nbsp; &nbsp; System.err.println(company.getName());
&nbsp; &nbsp; }
&nbsp; }
}</code>

For EAGER (retrieves company and all associated employees even though employees are not needed/accessed at the moment: 1 + 2 selects) : 
---------------
select company0_.ID as ID1_, company0_.VERSION as VERSION1_, company0_.NAME as NAME1_ from COMPANY company0

select employees0_.COMPANY_ID as COMPANY4_1_, employees0_.ID as ID1_, employees0_.ID as ID0_0_, employees0_.VERSION as VERSION0_0_, employees0_.COMPANY_ID as COMPANY4_0_0_, employees0_.NAME as NAME0_0_ from EMPLOYEE employees0_ where employees0_.COMPANY_ID=2

select employees0_.COMPANY_ID as COMPANY4_1_, employees0_.ID as ID1_, employees0_.ID as ID0_0_, employees0_.VERSION as VERSION0_0_, employees0_.COMPANY_ID as COMPANY4_0_0_, employees0_.NAME as NAME0_0_ from EMPLOYEE employees0_ where employees0_.COMPANY_ID=1
K
L
---------------
For LAZY (retrieve only company: 1 select)
select company0_.ID as ID1_, company0_.VERSION as VERSION1_, company0_.NAME as NAME1_ from COMPANY company0_
K
L

<strong>Best practices</strong>

A Hibernate persistent class is a POJO, which has not interface to be implemented and no persistent class to be extended. You need a default no-argument constructor with setter and getter methods. The <code>equals()</code> and <code>hashCode()</code> methods should be implemented based on your business key (not Hibernate managed surrogate key id which is set after persisting). It is recommended to implement <code>serializable</code> interface to enable future migration around multi-processor cluster. Persistent class shouldn't be final to exabling proxy for lazy loading.

Database identity: if both records have the same id as primary key, then they are referring to the same row in the database.
Object identity: memory comparison (==), equality is a.equals(b).

<strong>Persistent objects defined by Hibernate</strong>
	<li><strong>Entity objects</strong> - objects with identity i.e. Hibernate managed id, e.g. Customer</li>
	<li><strong>Value objects</strong> - don't have identity and exist only in relationship with entity objects, e.g. Address</li>

<strong>Mapping inheritance in Hibernate</strong>
	<li><strong>one table for whole hierarchy</strong> - each row can hold an object of any type in the hierarchy, needed extra column for "discriminator" property to tell the type of object in the hierarchy</li>
	<li><strong>table per subclass</strong> - every class/subclass (even abstract) that has persistent properties has its own table. Each subclass table has a primary key as foreign key to the superclass table</li>
	<li><strong>table per concrete class</strong> - table for each subclass (concrete, non-abstract), all properties, including inherited, are mapped to one table.</li>
<strong>First and second level chage</strong>
Hibernate uses two different caches for objects: first-level cache and second-level cache. First-level cache is associated with the Session object, while second-level cache is associated with the Session Factory object. By default, Hibernate uses first-level cache on a per-transaction basis. Hibernate uses this cache mainly to reduce the number of SQL queries it needs to generate within a given transaction. For example, if an object is modified several times within the same transaction, Hibernate will generate only one SQL UPDATE statement at the end of the transaction, containing all the modifications. This article focuses on second-level cache. To reduce database traffic, second-level cache keeps loaded objects at the Session Factory level between transactions. These objects are available to the whole application, not just to the user running the query. This way, each time a query returns an object that is already loaded in the cache, one or more database transactions potentially are avoided. 

<strong>Data transfer object (DTO)</strong>, formerly known as value objects or VO are used to transfer data between software application subsystems. DTO does not have any behaviour except for storage and retrieval of its own data (accessors and mutators).]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>821</wp:post_id>
  <wp:post_date>2010-09-28 07:38:45</wp:post_date>
  <wp:post_date_gmt>2010-09-28 07:38:45</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>hibernate-essentials</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="hibernate"><![CDATA[Hibernate]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[java-notes]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>LSP Liskov Substitution Principle</title>
  <link>https://bmwieczorek.wordpress.com/2010/10/02/lsp-liskov-substitution-principle/</link>
  <pubDate>Sat, 02 Oct 2010 07:37:51 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=885</guid>
  <description/>
  <content:encoded><![CDATA[If a program uses fuctionality from a base class, then substituting the base class to a subclass should not change this functionality. In other words, the client (caller) should not be aware of implementation hidden by this base class reference, whether it comes from base class or other derived classes.

This principle defines the rule of subclassing. Inheritance should not by only driven by data reuse, but a subclass must have the same behaviour as base class but implemented in some other way. 

Suppose we have two types of bank account: current account and savings account. We could model this by base class <code>CurrentAccount</code> and <code>SavingsAccount</code> extending <code>CurrentAccount</code>. Suppose both of the accounts can be closed by <code>boolean closeAccount()</code>. The base class precondition to close the accont is that balance on this account is not negative, whereas for the savings account in order to close it there are two preconditions - not negative balance and account cannot be closed until minimum savings period passes. So for non-negative balance, the <code>result</code> of 
<code>
CurrentAccount account = [ impl ]
boolean result = account.closeAccount();
</code>
could be different depending on the implementation, e.g. positive for <code>CurrentAccount</code> (fulfilled precodition) and negative for <code>SavingsAccount</code> (if second precodition fails - when not enough time passed to close the account). If the caller remembers the behavior of the base class, then the substitution to subclass would lead to unexpected results. This is because, the subclass <code>SavingsAccout</code> has more preconditions that base class <code>CurrentAccount</code>.

<strong>The rule of the thumb is that subclass shouldn't have more strict preconditions than the base class.</strong>

<strong>The solution to this problem is break existing inheritance, define a separate interface and both of the specific implementations would directly implement that interface.</strong> In our case, we have interface <code>Account</code> with <code>boolean closeAccount()</code>. Both current and savings account would directly implement the interface (<code>SavingsAccount</code> would not be <code>CurrentAcount</code> anymore).

Another classic example could be the case of base class <code>Rectange</code> and subclass <code>Square</code>.
The <code>Rectange</code> has setters for width and height and a method <code>area()</code>. The <code>Square</code>'s <code>setHeight()</code> implementation has a pre-requisite that it also sets width to the same value as heigth (and the same for <code>setWidth()</code>).
Then, if we call <code>rectange.setWidth(2)</code>, <code>rectange.setHeigth(5)</code> and <code>rectangle.area()</code> then the result would be 2x5 if <code>rectange</code> is of type <code>Rectange</code>. If <code>rectange</code> is of type <code>Square</code>, the result is 2x2 (or 5x5).  This leads to confusion.  

When extending base class pay attention so that you leave subclass instance in an consistent state. The problems can be that the caller of polymorphic behavior may use overrided and non-overrided methods that change/use the object state. Pay attention that this state is changed constitently. Problems may appear e.g. when a non-overrided method changes the state and the overrided method introduces new state that does not relate to the state set/used by base class method.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>885</wp:post_id>
  <wp:post_date>2010-10-02 07:37:51</wp:post_date>
  <wp:post_date_gmt>2010-10-02 07:37:51</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>lsp-liskov-substitution-principle</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="design-patterns"><![CDATA[Design patterns]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Sticky session</title>
  <link>https://bmwieczorek.wordpress.com/2010/10/04/sticky-session/</link>
  <pubDate>Mon, 04 Oct 2010 17:40:55 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=917</guid>
  <description/>
  <content:encoded><![CDATA[Load balancers route the requests for a particular session to the same physical machine that serviced the first request for that session.
	<li>PROs: ensure that in-proc session is not lost when requests a session are routed to different servers</li>
	<li>CONs: cause uneven load distribution across servers</li>

 ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>917</wp:post_id>
  <wp:post_date>2010-10-04 17:40:55</wp:post_date>
  <wp:post_date_gmt>2010-10-04 17:40:55</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>sticky-session</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="architectural-patterns"><![CDATA[Architectural patterns]]></category>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Application Handling of Database Timeouts and Deadlocks</title>
  <link>https://bmwieczorek.wordpress.com/2010/10/04/application-handling-of-database-timeouts-and-deadlocks/</link>
  <pubDate>Mon, 04 Oct 2010 18:17:58 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=919</guid>
  <description/>
  <content:encoded><![CDATA[When database returns error code that says that:
<ul>
	<li> limit of resources was exceeded or</li>
	<li>there was a timeout or</li>
	<li>there was a deadlock</li>
</ul>
then application needs to:
<ol>
	<li> explicitly rollback (<code>conn.rollback()</code>) and</li>
        <li> wait RETRY_WAIT_TIME and</li>
	<li> execute retry logic until MAX_RETRY_ATTEMPTS</li>
</ol>

When database returns error saying that:
<ul>
	<li>maximum number of locks for a database was reached because insufficient memory was allocated to the lock list</li>
</ul>
then database will automatically rollback and application needs only to execute retry logic.

<strong>Tips</strong>
Try to avoid applications, that access database, starting at the same time. For multiple concurrent updates, increase the RETRY_WAIT_TIME or make it varying.

For the integration web-services - database for long running queries:
- identify these queries (e.g. complicated reports), put the to the queue, process them sequentially - email results later to the client or put the results to another table to be viewed later on by clients
 - use asynchronous calls, ajax to refresh only part of web page after query completes (javascript callback)
 - use popup with progress bar updated periodically by a separe thread polling the server about the progress.

Throttling - based on number of currently processed request - for overrloaded servers, discard new requests until internal load on server decreased.

Lazy loading - load only necessary data, other on demand
Facade design pattern - coarse grained calls instead fine - grained
Normalize to reduce data redundancy and denormalize to improve performance

If your application is suited to storing per-user state in the HttpSession, this option is often better than the alternatives. Storing session state in the client using HTTP cookies or hidden form fields has significant security risks -- it exposes a part of your application internals to the untrusted client layer.
Session replication enables a host of benefits -- load balancing, scalability, fault tolerance, and high availability.

Theoretically, it is possible to completely replicate session state coherently across a cluster, so that any node in the cluster can service any request, and a dumb load balancer can simply route the request in a round-robin fashion, avoiding hosts that have failed. However, such tight replication has a considerable performance cost and implementation complexity, and may also have scalability problems as the cluster approaches a certain size.

A more common approach is to combine load balancing with session affinity -- the load balancer is able to associate connections with sessions and route subsequent requests within a session to the same server. This feature is supported by numerous hardware and software load balancers and means that replicated session information is only accessed when the primary connection host fails and the session needs to be failed over to another server.


<strong>surrogate keys</strong> (e.g. assigned by the database like Oracle sequences, Sybase identity
columns, max()+1, universally unique identifiers UUIDs, etc), natural keys (e.g. Tax File Numbers, Social
Security Numbers etc), and composite keys

Can we minimize the network trip by passing a coarse-grained value object instead of making 4 network trips with fine-grained parameters?

Should we use method level (coarse-grained) or code level (fine-grained) thread synchronization?

Should we hide the member variables to improve integrity and security?

Can we get a polymorphic behavior so that we can easily add new classes in the future?

Vertical scaling is achieved by increasing the number of servers running on a single machine. Horizontal scaling is achieved by increasing the number of machines in the cluster.
Horizontal scaling is more reliable than the vertical scaling because there are multiple machines involved
in the cluster. In vertical scaling the number of server instances that can be run on one machine are
determined by the CPU usage and the JVM heap memory.

Vertical slicing: Getting the reusable and flexible design the first time is impossible. By developing the initial
vertical slice of your design you eliminate any nasty integration issues later in your project. Also get the design patterns right early on by building the vertical slice. It will give you experience with what does work and what does not work with Java/J2EE. Once you are happy with the initial vertical slice then you can apply it across the application. The initial vertical slice should be based on a typical business use case.

Concurrency issues (multi-threading): What if two threads access my object simultaneously will it
corrupt the state of my object?
Transactional issues (ACID properties): What if two clients access the same data simultaneously?
What if one part of the transaction fails, do we rollback the whole transaction? Do we need a distributed
(i.e. JTA) transaction?. What if the client resubmits the same transactional page again? 

Security issues: Are there any potential security holes for SQL injection or URL injection by hackers?

Will this application scale vertically and horizontally if the load increases? Should
this object be serializable? Does this object get stored in the HttpSession?

Creating and destroying valuable resources like database connections, threads etc can be expensive. So if a client is not using a resource can it be returned to a pool to be reused when other clients connect? What is the optimum pool size?

Caching: can we save network trips by storing the data in the server’s memory? How often do we have
to clear the cache to prevent the in memory data from becoming stale?

Transparent fail over: If one server crashes can the clients be routed to another server without any
interruptions?

Clustering: What if the server maintains a state when it crashes? Is this state replicated across the
other servers?

Profiling can be used to identify any performance issues or memory leaks. Profiling can identify what lines of code the program is spending the most time in? What call or invocation paths are used to reach at these lines? What kinds of objects are sitting in the heap? Where is the memory leak?

Use operating system process monitors like NT/XP Task Manager on PCs and commands like ps, iostat,
netstat, vmstat, uptime, nfsstat etc on UNIX machines.

In Java, typically the memory leak occurs when an object of a longer lifecycle has a reference to the objects
of a short life cycle. This prevents the objects with short life cycle being garbage collected. The developer must
remember to remove the reference to the short-lived objects from the long-lived objects. Objects with the same life cycle do not cause any problem because the garbage collector is smart enough to deal with the circular references.

Commonly used singleton design pattern can cause memory leaks. Singletons typically have a long life cycle. If a singleton has an ArrayList or a Hashtable then there is a potential for memory leaks.

Application design is one of the most important considerations for performance. A well-designed application will not only avoid many performance pitfalls but will also be easier to maintain and modify during the performance-testing phase of the project.

Use of multi-threading from a thread-pool (say 10 – 50 threads). Using a large number of threads
adversely affects performance by consuming memory through thread stacks and CPU by context
switching.

Database related performance bottlenecks.
    Use proper database indexes. Numeric indices are more efficient than character based indices. Minimize
    the number of columns in your composite keys. Performing a number of “INSERT” operations is more
    efficient when fewer columns are indexed and “SELECT” operations are more efficient when, adequately
    indexed based on columns frequently used in your “WHERE” clause. So it is a trade-off between
    “SELECT” and “INSERT” operations.

Partition the database for performance based on the most frequently accessed data and least frequently
accessed data.

Use optimistic concurrency as opposed to pessimistic concurrency where appropriate.

<strong>Thread-safety issues </strong>
Unlike processes, threads share the same address space which means they can read and write the same variables and data structures.

Swing components can only be accessed by one thread at a time. A few operations are guaranteed to be
thread safe but the most others are not. Generally the Swing components should be accessed through an
event-dispatching thread.

A typical Servlet life cycle creates a single instance of each servlet and creates multiple threads to handle the service() method. The multi-threading aids efficiency but the servlet code must be coded in a thread
safe manner. The shared resources (e.g. instance variable) should be appropriately synchronized or should
only use variables in a read-only manner. 

The declaration of variables in JSP is not thread-safe, because the declared variables end up in the
generated servlet as an instance variable, not within the body of the _jspservice() method.

Some Java Collection classes like HashMap, ArrayList etc are not thread-safe. 

Some of the Java core library classes are not thread safe. For e.g. java.util.SimpleDateFormat,
java.util.Locale etc.

When a connection is created, it is in auto-commit mode. This means that each individual SQL statement is
treated as a transaction and will be automatically committed immediately after it is executed. The way to
allow two or more statements to be grouped into a transaction is to disable auto-commit mode.  Disabling auto-commit mode can improve performance by minimizing number of times it accesses the database.

                                                                                                             A
distributed transaction is an ACID transaction between two or more independent transactional resources
like two separate databases. For a transaction to commit successfully, all of the individual resources must
commit successfully. If any of them are unsuccessful, the transaction must roll back all of the resources. A 2-phase commit is an approach for committing a distributed transaction in 2 phases.

Isolation levels provide a degree of control of the effects one transaction can have on another concurrent
transaction.

Decide between optimistic and pessimistic concurrency control.

Evaluate a strategy to determine if the data is stale when using strategies to cache data. 

<strong>OOD</strong>
When to use an Abstract Class: Abstract classes let you define some default behavior and force subclasses to provide any specific behavior.

When to use an Interface: If you need to change your design frequently, I prefer using interface to
abstract. 

Prefer interface inheritance to implementation inheritance because it promotes the design concept of coding to an interface and reduces coupling. Interface inheritance can achieve code reuse with the help of object composition.

Composition (Black-box reuse) - Defined dynamically or at runtime via object references. Since only interfaces are used, it has the advantage of maintaining the integrity (i.e. encapsulation). Disadvantage of aggregation is that it increases the number of objects and relationships.


Inheritance (White-box reuse) - Inheritance is defined statically or at compile time. Inheritance allows an easy way to modify implementation for reusability. A disadvantage of inheritance is that it breaks
encapsulation, which implies implementation dependency. This means when you want to carry
out the redesign where the super class (i.e. parent class) has to be modified or replaced, which is
more likely to affect the subclasses as well. In general it will affect the whole inheritance
hierarchy. 

Verdict: So the tendency is to favor compositionover inheritance.

The Front Controller pattern uses a single servlet, which acts as initial point of contact for handling all the requests, including invoking services such as security (authentication and authorization), logging,
gathering user input data from the request, gathering data required by the view etc by delegating to the helper classes, and managing the choice of an appropriate view with the dispatcher classes.

Use the data access object design pattern to promote the design concept of code to interface not implementation, so that the implementation can change without affecting the calling code.

There are some common names like cross site scripting, SQL injection, hidden field manipulation, cookie poisoning, etc for input tampering attacks.

The best practice to prevent the above mentioned security vulnerability is to strip any unwanted characters
and HTML tags from user input.

Perform rigorous positive input data validation. Positive input validation means checking the input data
against a list of valid characters like A-Z and 0-9 etc as opposed to checking for any invalid characters
because it is too difficult to determine all possible malicious characters.

Have a centralized code for input validation because scattered code is hard to maintain.

Handle your exceptions properly without revealing any sensitive information about your datasources,
table names etc, which could help them create a SQL injection attack. Catch all your exceptions and display harmless error messages to users and hackers alike.

Protect your Web resources like JSP files, HTML files, pdfs, css, script files etc behind the WEB-INF
directory. 

Avoid using hidden fields, cookies etc to store sensitive state information. 

Prefer prepared statements over statements to prevent any SQL injection attacks.

What language features are available to allow shared access to data in a multi-threading 
environment?  Synchronized block, Synchronized method, wait, notify
                                                                 
What Java language features would you use to implement a producer (one thread) and a wait, notify
consumer (another thread) passing data via a stack? wait, notify

What is the difference between String and StringBuffer? mutable, efficient

How do you exclude a field of the class from serialization? transient
                                                        
What does overriding a method mean? (What about overloading?) inheritance (different signature)

What is the difference between a runtime exception and a checked exception? Must catch or throw checked
exceptions.

What does Servlet API provide to store user data between requests? HttpSession

What is the difference between forwarding a request and redirecting? redirect return to browser

What object do you use to forward a request? RequestDispatcher

What’s the requirement on data stored in HttpSession in a clustered (distributable)
environment? Serializable

If I store an object in session, then change its state, is the state replicated to distributed
Session? No, only on setAttribute() call.

What is a filter, and how does it work? Before/after request, chain.

What form of statement would you use to include user-supplied values? PreparedStatement

Why might a preparedStatement be more efficient than a statement? Execution plan cache.

How would you prevent an SQL injection attack in JDBC? PreparsedStatement

What is the performance impact of testing against NULL in WHERE clause on Oracle? Full table scan.

List advantages and disadvantages in using stored procedures? Pro: integration with existing dbase,
reduced network traffic Con: not portable, mutliple language

What is the difference between sql.Date, sql.Time, and sql.Timestamp? Date only, time only, date and time

If you had a missing int value how do you indicate this to PreparedStatement? setNull(pos, TYPE)

How can I perform multiple inserts in one database interaction? executeBatch

How might you model object inheritance in database tables? Table per hierarchy, table per class, table per concrete class

What would be the XPath to select any element called table with the class attribute of info?  Table[@class=’info’]

What is the difference between a topic and a queue? broadcast, single

Describe some types of relationships can you show on class diagrams? generalization, aggregation, uses


Give a few reasons for using Java? 
Built-in support for multi-threading, socket communication, and memory management (automatic garbage collection).
Object Oriented (OO).
Better portability than other languages across operating systems.
Supports Web based applications (Applet, Servlet, and JSP), distributed applications (sockets, RMI, EJB etc) and network protocols (HTTP, JRMP etc) with the help of extensive standardized APIs (Application           Programming Interfaces).

What is the difference between C++ and Java?
Java does not support pointers. Pointers are inherently tricky to use and troublesome.
Java does not support multiple inheritances because it causes more problems than it solves. 

Java does not support destructors but adds a finalize() method. Finalize methods are invoked by the garbage
collector prior to reclaiming the memory occupied by the object, which has the finalize() method. This means
you do not know when the objects are going to be finalized. Avoid using finalize() method to release non-
memory resources like file handles, sockets, database connections etc because Java has only a finite
number of these resources and you do not know when the garbage collection is going to kick in to release
these resources through the finalize() method.

Java does not include structures or unions because the traditional data structures are implemented as an
object oriented framework

All the code in Java program is encapsulated within classes therefore Java does not have global variables or
functions.

C++ requires explicit memory management, while Java includes automatic garbage collection. 

Java class loaders
Class loaders are hierarchical.                                                                       The very first class is especially loaded with
the help of static main( ) method declared in your class. All the subsequently loaded classes are loaded by the classes, which are already loaded and running. A class loader creates a namespace. All JVMs include at least one class loader that is embedded within the JVM called the primordial (or bootstrap) class loader.

Bootstrap - Loads JDK internal classes, typically loads rt.jar and i18n.jar
Extensions - Loads jar files from JDK extensions directory, usually lib/ext directory of the JRE
System - Loads classes from system classpath

Classes loaded by Bootstrap class loader have no visibility into classes

The classes loaded by system class loader have visibility into classes loaded by its parents (ie Extensions and Bootstrap class loaders).

Class loaders are hierarchical and use a delegation model when loading a class. Class loaders request their
parent to load the class first before attempting to load it themselves. When a class loader loads a class, the child class loaders in the hierarchy will never reload the class again. Hence uniqueness is maintained. Classes loaded by a child class loader have visibility into classes loaded by its parents up the hierarchy but the reverse is not true as explained in the above diagram.

c:\&gt;java –cp  c:/myProject com.xyz.client.Pet
              OR
c:\&gt;java -classpath c:/myProject/client.jar com.xyz.client.Pet

Important: Two objects loaded by different class loaders are never equal even if they carry the same values, which mean a class is uniquely identified in the context of the associated class loader. This applies to singletons too, where each class loader will have its own singleton. 

Static class loading - Classes are statically loaded with Java’s “new” operator.

Dynamic loading is a technique for programmatically invoking the functions of a class loader at run time. Let us look at how to load classes dynamically.  Class.forName (String className); //static method which returns a Class. class.newInstance (); //A non-static method, which creates an instance of a                      //class (i.e. creates an object).

//Static initializer block, which is executed only once when the class is loaded.

Don’t use inheritance just to get code reuse. If there is no ‘is a’ relationship then use composition for code
reuse. Overuse of implementation inheritance (uses the “extends” key word) can break all the subclasses, if
the superclass is modified.

Use interface inheritance with composition, which gives you code reuse.

Aggregation - Aggregation is an association in which one class belongs to a collection. This is a part of a whole relationship where a part can exist without a whole. For example a line item is a whole and product is a part. If a line item is deleted then corresponding product need not be deleted. So aggregation has a
weaker relationship.

Composition - Composition is an association in which one class belongs to a collection. This is a part of a whole relationship where a part cannot exist without a whole. If a whole is deleted then all parts are
deleted. For example An order is a whole and line items are parts. If an order is deleted then all corresponding line items for that order should be deleted. So composition has a stronger relationship.

Overloading deals with multiple methods in the same class with the same name but different method signatures.

Overriding deals with two methods, one in the parent class and the other one in the child class and has the same name and signatures.

Overriding lets you define the same operation in different ways for different object types.
Overloading lets you define the same operation in different ways for different data.

Original classes before the introduction of Collections API. Vector &amp; Hashtable are synchronized. Any
method that touches their contents is thread-safe.

if you don’t need a thread safe collection, use the ArrayList or HashMap. Why pay the price of synchronization unnecessarily at the expense of performance degradation.

Java arrays are even faster than using an ArrayList/Vector and perhaps therefore may be preferable if you know the size of your array upfront (because arrays cannot grow as Lists do).

ArrayList/Vector are specialized data structures that internally uses an array with some convenient methods like add(..), remove(...) etc so that they can grow and shrink from their initial size. ArrayList also supports index based searches with indexOf(Object obj) and lastIndexOf(Object obj) methods.

Queue First item to be inserted is the first one to be removed. FIFO
Stack - Allows access to only last item inserted. LIFO

A TreeSet is an ordered HashSet, which implements the SortedSet interface.

A List is a collection with an ordered sequence of elements and may contain duplicates. 

The Collections API also supports maps, but within a hierarchy distinct from the Collection interface. 

A map can contain duplicate values, but the keys in a map must be distinct. HashMap, TreeMap and Hashtable are implementations of a Map interface. A TreeMap is an ordered HashMap, which implements the SortedMap interface.

The “Comparable” allows itself to compare with another similar object (i.e. A class that implements Comparable becomes an object to be compared with). The method compareTo() is specified in the interface.

The Comparator is used to compare two different objects. The following method is specified in the Comparator interface. public int compare(Object o1, Object o2)

Speaking of static factory methods, they are an alternative to creating objects through constructors. Unlike constructors, static factory methods are not required to create a new object (i.e. a duplicate object) each time they are invoked (e.g. immutable instances can be cached) and also they have a more meaningful names like valueOf, instanceOf, asList 

Return zero length collections or arrays as opposed to returning null: CO Returning null instead of zero
length collection (use Collections.EMPTY_SET, Collections.EMPTY_LIST, Collections.EMPTY_MAP) is more
error prone, since the programmer writing the calling method might forget to handle a return value of null.

Immutable objects should be used as keys for the HashMap

Avoid storing unrelated or different types of objects into same collection: CO This is analogous to
storing items in pigeonholes without any labeling. To store items use value objects or data objects (as
opposed to storing every attribute in an ArrayList or HashMap). Provide wrapper classes around your
collections API classes like ArrayList, HashMap etc as shown in better approach column. 

Avoid nested loops where possible (e.g. for loop within another for loop etc) and instead make use of an appropriate java collection.

The == returns true, if the variable reference points to the same object in memory. This is a “shallow
comparison”.

The equals() - returns the results of running the equals() method of a user supplied class, which compares the attribute values. The equals() method provides “deep comparison” by checking if two objects are
logically equal as opposed to the shallow comparison provided by the operator ==.

If equals() method does not exist in a user supplied class then the inherited Object class's equals() method is run which evaluates if the references point to the same object in memory. The object.equals() works
just like the "==" operator (i.e shallow comparison).

If a class overrides the equals() method, it must implement the hashCode() method as well. 

If a class overrides equals(), it must override hashCode().
If 2 objects are equal, then their hashCode values must be equal as well.
If a field is not used in equals(), then it must not be used in hashCode().
If it is accessed often, hashCode() is a candidate for caching to enhance performance.
It is a best practice to implement the user defined key class as an immutable


Immutable objects whose state (i.e. the object’s data) does not change once it is instantiated (i.e. it becomes a read-only object after instantiation). 

  Immutable classes can greatly simplify programming by freely allowing you to cache and share the references to   the immutable objects without having to defensively copy them or without having to worry about their values   becoming stale or corrupted.
 Immutable classes are inherently thread-safe and you do not have to synchronize access to them to be used in a   multi-threaded environment. So there is no chance of negative performance consequences.

1. A class is declared final (i.e. final classes cannot be extended).
public final class MyImmutable { ... }
2. All its fields are final (final fields cannot be mutated once assigned).
private final int[] myArray; //do not declare as                       private final int[] myArray = null;
3. Do not provide any methods that can change the state of the immutable object in any way – not just setXXX
   methods, but any methods which can change the state.
4. The “this” reference is not allowed to escape during construction from the immutable class and the immutable
   class should have exclusive access to fields that contain references to mutable objects like arrays, collections
   and mutable classes like Date etc by:
   •    Declaring the mutable references as private.
   •    Not returning or exposing the mutable references to the caller (this can be done by defensive copying)

Other languages use pass-by-reference or pass-by-pointer. But in Java no matter what type of argument you
pass the corresponding parameter (primitive variable or object reference) will get a copy of that data, which is exactly how pass-by-value (i.e. copy-by-value) works.

Serialization is a process of reading or writing an object. It is a process of saving an object’s state to a sequence of bytes, as well as a process of rebuilding those bytes back into a live object at some future time. An object is marked serializable by implementing the java.io.Serializable interface, which is only a marker interface -- it simply allows the serialization mechanism to verify that the class can be persisted, typically to a file.
Transient variables cannot be serialized. The fields marked transient in a serializable object will not be
transmitted in the byte stream. An example would be a file handle, a database connection, a system thread etc.
Such objects are only meaningful locally. So they should be marked as transient in a serializable class.


Instance and static variables are associated with objects and therefore live in the heap.
Local variables are also known as stack variables because they live on the stack.

Private constructor is used if you do not want other classes to instantiate the object and to prevent subclassing.
The instantiation is done by a public static method (i.e. a static factory method) within the same class.
    Used in the singleton design pattern. 
    Used in the factory method design pattern. e.g. java.util.Collections class (Refer
    Used in utility classes e.g. StringUtils etc.

Each time an object is created in Java it goes into the area of memory known as heap. The primitive variables like int and double are allocated in the stack (i.e. Last In First Out queue), if they are local variables and in the heap if they are member variables (i.e. fields of a class). In Java methods and local variables are pushed into stack when a method is invoked and stack pointer is decremented when a method call is completed. In a multi-threaded application each thread will have its own stack but will share the same heap. This is why care should be taken in your code to avoid any concurrent access issues in the heap space. The stack is thread-safe because each thread will have its own stack with say 1MB RAM allocated for each thread but the heap is not thread-safe unless guarded with synchronization through your code

All Java methods are automatically re-entrant. It means that several threads can be executing the same method at once, each with its own copy of the local variables. 

Idempotent methods are methods, which are written in such a way that repeated calls to the same method with the same arguments yield same results.

Each time an object is created in Java, it goes into the area of memory known as heap. The Java heap is called the garbage collectable heap. The garbage collection cannot be forced. The garbage collector runs in low memory situations. When it runs, it releases the memory allocated by an unreachable object. The garbage collector runs on a low priority daemon (i.e. background) thread. You can nicely ask the garbage collector to collect garbage by calling System.gc() but you can’t force it.

A soft reference will only get removed if memory is low. So it is useful for implementing caches while
avoiding memory leaks.
A weak reference will get removed on the next garbage collection cycle. Can be used for implementing
canonical maps. The java.util.WeakHashMap implements a HashMap with keys held by weak references.


Why should you throw an exception early - as meeting preconditions
The exception stack trace helps you pinpoint where an exception occurred by showing you the exact sequence of method calls that lead to the exception. By throwing your exception early, the exception becomes more accurate and more specific. 

Why should you catch a checked exception late in a catch {} block?
You should not try to catch the exception before your program can handle it in an appropriate manner. 
The best practice is to catch the exception at the appropriate layer (e.g. an exception thrown at an integration layer can be caught at a presentation layer in a catch {} block), where your program can either meaningfully recover from the exception and continue to execute or log the exception only once in detail, so that user can identify the cause of the exception.

Use checked exceptions when the client code can take some useful recovery action based on information in exception. Use unchecked exception when client code cannot do anything.

<strong>Briefly explain high-level thread states</strong>
Runnable — waiting for its turn to be picked for execution by the thread scheduler based on thread priorities.
Running: The processor is actively executing the thread code. It runs until it becomes blocked, or voluntarily
gives up its turn with this static method Thread.yield(). Because of context switching overhead, yield() should
not be used very frequently.
Waiting: A thread is in a blocked state while it waits for some external processing such as file I/O to finish.
Sleeping: Java threads are forcibly put to sleep (suspended)                  with  this  overloaded     method:
Thread.sleep(milliseconds), Thread.sleep(milliseconds, nanoseconds);
Blocked on I/O: Will move to runnable after I/O condition like reading bytes of data etc changes.
Blocked on synchronization: Will move to Runnable when a lock is acquired.
Dead: The thread is finished working.

When a task invokes yield(), it changes from running state to runnable state. When a task invokes sleep(), it
changes from running state to waiting/sleeping state.

The method wait(1000), causes the current thread to sleep up to one second. A thread could sleep less than 1 second if it receives the notify() or notifyAll() method call. call to sleep(1000) causes the current thread to sleep for exactly 1 second.

<strong>If 2 different threads hit 2 different synchronized methods in an object at the same time will they both continue?
No. Only one method can acquire the lock.</strong>

Occasionally threads have to block on conditions other than object locks. I/O is the best example of this.

Be sure to not synchronize code that makes blocking calls, or make sure that a non-synchronized method
exists on an object with synchronized blocking code. 

The J2SE 5.0 release is focused along the key areas of ease of development, scalability, performance, quality, etc. The new features include generics, metadata (aka annotations), autoboxing and auto-unboxing of
primitive types, enhanced “for” loop, enumerated type, static import, C style formatted output, formatted
input, varargs, 








































]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>919</wp:post_id>
  <wp:post_date>2010-10-04 18:17:58</wp:post_date>
  <wp:post_date_gmt>2010-10-04 18:17:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>application-handling-of-database-timeouts-and-deadlocks</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="database"><![CDATA[Database]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>How to install Java plugin for Firefox on Linux / ubuntu</title>
  <link>https://bmwieczorek.wordpress.com/2010/10/06/how-to-install-java-plugin-for-firefox-on-linux-ubuntu/</link>
  <pubDate>Wed, 06 Oct 2010 13:26:05 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=948</guid>
  <description/>
  <content:encoded><![CDATA[$ apt-cache search java | grep plugin
...
sun-java6-plugin - The Java(TM) Plug-in, Java SE 6

$ sudo apt-get install sun-java6-plugin

]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>948</wp:post_id>
  <wp:post_date>2010-10-06 15:26:05</wp:post_date>
  <wp:post_date_gmt>2010-10-06 13:26:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>how-to-install-java-plugin-for-firefox-on-linux-ubuntu</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="firefox"><![CDATA[firefox]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Command pattern</title>
  <link>https://bmwieczorek.wordpress.com/2010/10/06/command-pattern/</link>
  <pubDate>Wed, 06 Oct 2010 17:30:55 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=952</guid>
  <description/>
  <content:encoded><![CDATA[Example
Suppose we have 2 calculation tasks to do, e.g. add and substract a number. We could use a <code>Calculator</code> to do it:

<code>
public class Calculator {
&nbsp; int currentValue = 0;
</code><code>
&nbsp; public int add(int valueToAdd) {
&nbsp; &nbsp; currentValue += valueToAdd;
&nbsp; &nbsp; return currentValue;
&nbsp; }
</code><code>
&nbsp; public int substract(int valueToSubstract) {
&nbsp; &nbsp; currentValue -= valueToSubstract;
&nbsp; &nbsp; return currentValue;
&nbsp; }
}
</code>

We could run it as from the <code>Client</code> via <code>CalculationInvoker</code>:

<code>public class Client {</code>

<code>&nbsp; public static void main(String[] args) {
&nbsp; &nbsp; CalculationInvoker invoker=new CalculationInvoker();
&nbsp; &nbsp; System.out.println(invoker.invoke(add, 5));
&nbsp; &nbsp;System.out.println(invoker.invoke(substract, 3));
&nbsp; }
}</code>


<code>public class CalculationInvoker {</code>

<code>&nbsp; Calculator calculator = new Calculator();</code>

<code>&nbsp; public int invoke(Operation op, int value) {
&nbsp; &nbsp; switch (op) {
&nbsp; &nbsp; case add:
&nbsp; &nbsp; &nbsp; return calculator.add(value);</code>
<code>
&nbsp; &nbsp; case substract:
&nbsp; &nbsp; &nbsp; return calculator.add(value);</code>

<code>&nbsp; &nbsp; default:
&nbsp; &nbsp; &nbsp;throw new RuntimeException("Invalid operation"+op);
&nbsp; &nbsp; }
&nbsp; }
}</code>

The result is:
5 (0+5=5)
2 (5-3=2)

This would do its job. 

However, suppose we would like to decouple tasks invocation from the task execution (handling the invocation). So in our case decouple CalculationInvoker from the Calculator, so that the invoker will not be aware of actual implementation of the task handling, e.g. one system puts tasks on the queue and the second system is resposible for the task execution. 
Moreover, we want the invoker to be able to keep history of executed tasks, execute again last 4 tasks in variant order, or undo last execution. We need a callback functionality. 

The solution is to encapsulate a task (request) behind a <code>Command</code> interface:

<code>public interface Command {</code>

<code>&nbsp; &nbsp; public int execute();
}</code>

The <code>CalculationInvoker</code> would contain a list of <code>Command</code> objects as history. In order to decouple <code>CalculationInvoker</code> from the <code>Calculator</code> we would change the <code>invoke</code> method to accept <code>Command</code> as a parameter. The particular implementation of the <code>Command</code> interface would wrap <code>Calculator</code>  and set the reference to <code>Calculator</code> via constructor from the <code>Client</code> (not from the <code>Invoker</code> anymore).

<code>public class CalcCmd implements Command {</code>

<code>&nbsp; private final Calculator calculator;
&nbsp; private final int value;
&nbsp; private Operation op;</code>

<code>&nbsp; public CalcCmd(Operation op,int value,Calculator calc) 
&nbsp; {
&nbsp; &nbsp; this.op = op;
&nbsp; &nbsp; this.value = value;
&nbsp; &nbsp; this.calculator = calc;
&nbsp; }</code>

<code>&nbsp; public int execute() {
&nbsp; &nbsp; switch (op) {
&nbsp; &nbsp; case add:
&nbsp; &nbsp; &nbsp; return calculator.add(value);
&nbsp; &nbsp; case substract:
&nbsp; &nbsp; &nbsp; return calculator.substract(value);
&nbsp; &nbsp; default:
&nbsp; &nbsp; &nbsp;throw new RuntimeException("Invalid operation"+op);
&nbsp; &nbsp; }
&nbsp; }
}</code>


<code>public class Client {</code>

<code>&nbsp; public static void main(String[] args) {
&nbsp; &nbsp; CalculationInvoker invoker=new CalculationInvoker();
&nbsp; &nbsp; Calculator c = new Calculator();
&nbsp; &nbsp; out.println(invoker.invoke(new CalcCmd(add,5, c)));
out.println(invoker.invoke(new CalcCmd(substract,5,c)));
&nbsp; }
}</code>

The <code>CalculationInvoker</code> is now decoupled from <code>Calculator</code>:

<code>public class CalculationInvoker {</code>
<code>
&nbsp; private int index = 0;
&nbsp; private List&lt;Command&gt; cmds = new ArrayList&lt;Command&gt;();</code>
<code>
&nbsp; public int compute(Command command) {
&nbsp; &nbsp; calcCmds.add(command);
&nbsp; &nbsp; index++;
&nbsp; &nbsp; return command.execute();
&nbsp; }</code>
<code>
&nbsp; public int redo(int opsCount) {
&nbsp; &nbsp; if (opsCount &gt; index)
&nbsp; &nbsp; &nbsp;throw new RuntimeException("Cannot redo more than " 
&nbsp; &nbsp; &nbsp; + index +" last operations, requested "+opsCount);</code>

<code>&nbsp; &nbsp; int result = 0;
&nbsp; &nbsp; for (int i = 1; i &lt;= opsCount; i++) {
&nbsp; &nbsp; &nbsp; Command calcCmd = calculatorCommands.get(index-i);
&nbsp; &nbsp; &nbsp; cmds.add(calculatorCommand);
&nbsp; &nbsp; &nbsp; result = calcCmd.execute();
&nbsp; &nbsp; }
&nbsp; &nbsp; index += opsCount;
&nbsp; &nbsp; return result;
&nbsp; }
}</code>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>952</wp:post_id>
  <wp:post_date>2010-10-06 19:30:55</wp:post_date>
  <wp:post_date_gmt>2010-10-06 17:30:55</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>command-pattern</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="design-patterns"><![CDATA[Design patterns]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Cygwin ssh config bash</title>
  <link>https://bmwieczorek.wordpress.com/2010/10/08/cygwin-ssh-config-bash/</link>
  <pubDate>Fri, 08 Oct 2010 09:15:25 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1023</guid>
  <description/>
  <content:encoded><![CDATA[$ cd ~/.ssh/
 ~/.ssh $ cat config
Host myhost.domain
User myuser

 ~/.ssh $ cd
 ~ $ complete -W "$(echo `cat .bash_history | egrep '^ssh ' | sort | uniq | sed 's/^ssh //'`;)" ssh]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1023</wp:post_id>
  <wp:post_date>2010-10-08 11:15:25</wp:post_date>
  <wp:post_date_gmt>2010-10-08 09:15:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>cygwin-ssh-config-bash</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="bash"><![CDATA[bash]]></category>
  <category domain="category" nicename="cygwin"><![CDATA[cygwin]]></category>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Flyweight design pattern</title>
  <link>https://bmwieczorek.wordpress.com/?p=1025</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1025</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1025</wp:post_id>
  <wp:post_date>2010-10-10 11:29:34</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="design-patterns"><![CDATA[Design patterns]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Good API</title>
  <link>https://bmwieczorek.wordpress.com/2010/10/23/good-api/</link>
  <pubDate>Sat, 23 Oct 2010 08:59:22 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1030</guid>
  <description/>
  <content:encoded><![CDATA[<ol>
	<li>EACH DEVELOPER IS AN API DESIGNER (WHETHER IT IS A PUBLIC OR INTERNAL API)</li>
	<li>GOOD NAMES DRIVE GOOD DESIGN</li>
<ol>
	<li>names should be easy to learn: BAD: AffAcct, GOOD: AffiliatedAccount; spend time on getting good names</li>
	<li>code should be easy to ready, good names make the code read like prose</li>
	<li>don't copy/transliterate API (when re-writing code, e.g. from C++ to Java, don't write complementary implementation for each method in each C++ class, but take a step back and think of class behavior and write it in Java)</li>
	<li>when you don't know how to call a method perhaps it needs to be splitted or merged to get a good name</li>
	<li>names should be self explanatory as if no documentation was needed to understand what they mean</li>
	<li>obey platform naming convention and use consistent names (the same words throughout the API mean the same, don't use different words for the same thing, use either delete or remove but not both of them, so that we don't need to spend time to find out the difference)</li>
	<li>spend time to learn the project terminology</li>
</ol>
	<li>API SHOULD BE EXACTLY WHAT IS SAYS</li>
<ol>
	<li>a method should do one thing and do it well, e.g.: boolean interrupted() in Thread class should only check if the thread was interrupted, but not reset the interrupted status of current thread</li>
	<li>query command pattern: method should either query for sth or change the state, but not both at the same time</li>
	<li>API should be hard to misuse:</li>
	<li>avoid ambiguous method overloading (for arguments of the same hierarchy), preferably use different method names; if you need to overload - ensure the same behavior for the same arguments (e.g. by dynamic casting via instanceof), BAD: 3 methods overloaded that accept as a parameters that are of the same class hierarchy: e.g a collection, set and list - a call with parameter new HashSet() and (Collection) HashSet would dispatch to different methods even if the runtime is HashSet.</li>
</ol>
	<li>WHEN IN DOUBT - LEAVE IT OUT</li>
<ol>
	<li>API should be reasonably small</li>
	<li>you can always add a missing functionality later on but never remove it once clients already use it</li>
	<li>for internal use, it is still better to think twice about good design rather than do heavy refactoring later on</li>
</ol>
	<li>USE DATA ABSTRACTION</li>
<ol>
	<li>keep API behind a well defined interface and build future implementation based on that interface</li>
	<li>keep exceptions at the same level of abstraction (e.g. don't throw SQL exception in business layer)</li>
	<li>implementation details should not impact API (e.g. don't overspecify the behavior of the methods; mentioned SQL exceptions)</li>
	<li>information hiding (make classes, members as private as possible)</li>
</ol>
	<li>MINIMIZE COUPLING</li>
<ol>
	<li>easier to test, use and debug</li>
	<li>simplifies API</li>
	<li>can be achived by reducing accessibility, when in doubt make it private</li>
	<li>not coupled modules can be tested independently by different teams</li>
</ol>
	<li>MINIMIZE MUTABILITY</li>
<ol>
	<li>advantages: simple, thread-safe, reusable;</li>
	<li>disadvantage: separate object for each value</li>
	<li>if mutable - keep state space small</li>
</ol>
	<li>FAVOUR COMPOSITION OVER INHERITANCE</li>
<ol>
	<li>avoid subclassing classes from different packages that you don't have control over</li>
	<li>inheritance violates encapsulation: if a functionality of a subclass depends on the internal implementation of the base class, then a change the in the base class may break the code in the subclass: e.g. CoutingHashSet overriding add(...) and addAll(...), and base class addAll(...) internally now uses add(...) but may not in future since it is its internals.</li>
	<li>subclass only if you are really sure that every instance of a subclass is a instance of a superclass (LSP)</li>
</ol>
	<li>DRIVE YOUR API BY USE CASES</li>
<ol>
	<li>use case can save from writing extra unnecessary API, you do only what you need to</li>
	<li>consult your API before you start writing an implementation, if the API is broken you will not waste your time for implementation that you will need to throw away eventually</li>
	<li>requirements should be translated into use cases in terms of general solution outline rather than specific implementation details</li>
	<li>don't over-specify API to allow different implementations in future</li>
	<li>start with one page specs and consult that with stakeholders</li>
	<li>write examples to be published how to use your API and get it right because it will be reused a lot</li>
	<li>maintain these use cases as tests, examples; example programs should be very good quality because this is how people learn to use your API, don't get them wrong</li>
	<li>don't make the client do what module could do for the client directly, this reduces boilerplate code: e.g.: provide directly method writing a document into the OutputStream instead of forcing a client to instanciate a output stream transformer, converting document into appropriate format for transformer and eventually transforming the document plus catching exception that should never happen</li>
</ol>
	<li>METHOD PARAMETERS</li>
<ol>
	<li>try not to have identically typed parameters, so that you don't mistake the order</li>
	<li>favour interface types over classes for input parameters to achieve flexibility</li>
	<li>use consistent parameter ordering across methods (follow one rule: first param: src, second: dst; stick to it and don't mix it)</li>
	<li>limit number of method parameters to three (the fewer, the better) by breaking up methods or creating helper classes to hold parameters</li>
</ol>
	<li>RETURN TYPES</li>
<ol>
	<li>avoid returning values that demand exceptional processing, e.g. instead of null, return zero-length array or empty collection</li>
</ol>
	<li>EXCEPTIONS</li>
<ol>
	<li>validate at compile time, use most specific input parameter type (as oppose to the general type Object)</li>
	<li>validate arguments to report errors as soon as possible</li>
</ol>
	<li>PRECISION</li>
<ol>
	<li>use BigDecimal, long, BigInteger for monetary results instead of float or double</li>
	<li>use double (64 bit) rather than float (32 bit)</li>
</ol>
	<li>OTHER</li>
<ol>
	<li>write API documentation, e.g. preconditions, side-effects for methods; value units for method parameters (KB or Mbit etc), paremater forms (if it is XML format)</li>
	<li>bad API can decrease performance (e.g. exposing public contructors instead static factory methods returning cached instances)</li>
	<li>use API-friendly features, e.g. enums, varargs, generics, default arguments</li>
	<li>if a method returns lots of information, don't return all of it in the String format (client doesn't need to parse it), but provide accessor methods to the information details</li>
	<li>don't use String if a better type exists: boolean instead String 'yes'/'no'</li>
	<li>use BigDecimal, long, BigInteger for monetary results instead of float or double (lost of precision)</li>
	<li>mimic the core API and pattern used in the platform because people already know how to use it</li>
	<li>eliminating state makes API easier and less error prone</li>
	<li>expect to make mistakes and it will evolve.</li>
	<li>review often your API with other people</li>
</ol>
</ol>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1030</wp:post_id>
  <wp:post_date>2010-10-23 10:59:22</wp:post_date>
  <wp:post_date_gmt>2010-10-23 08:59:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>good-api</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="best-practices"><![CDATA[Best practices]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>update-rc.d</title>
  <link>https://bmwieczorek.wordpress.com/2010/11/01/update-rc-d/</link>
  <pubDate>Mon, 01 Nov 2010 21:18:20 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1068</guid>
  <description/>
  <content:encoded><![CDATA[sudo update-rc.d detectGHnet.sh defaults 90

]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1068</wp:post_id>
  <wp:post_date>2010-11-01 22:18:20</wp:post_date>
  <wp:post_date_gmt>2010-11-01 21:18:20</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>update-rc-d</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>linux apt proxy</title>
  <link>https://bmwieczorek.wordpress.com/2010/11/09/linux-apt-proxy/</link>
  <pubDate>Tue, 09 Nov 2010 15:19:57 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1070</guid>
  <description/>
  <content:encoded><![CDATA[sg0920709@ubuntu:~$ cat /etc/apt/apt.conf
Acquire::http::Proxy "http:/user:password@host:port";

sg0920709@ubuntu:~$ cat .bashrc 
(...)

export http_proxy=http:/user:password@host:port/
export https_proxy=http:/user:password@host:port/
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1070</wp:post_id>
  <wp:post_date>2010-11-09 16:19:57</wp:post_date>
  <wp:post_date_gmt>2010-11-09 15:19:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>linux-apt-proxy</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Doskonalenie jazdy samochodem</title>
  <link>https://bmwieczorek.wordpress.com/?p=1268</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1268</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1268</wp:post_id>
  <wp:post_date>2012-05-04 15:29:00</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>grep and perl tips</title>
  <link>https://bmwieczorek.wordpress.com/?p=1328</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1328</guid>
  <description/>
  <content:encoded><![CDATA[<p>egrep 'text1|text2' file<br />grep -E 'text1|text2' file<br />grep -e 'text1' -e 'text2' file<br />grep 'some text' some-data.log* | grep mypattern | sed 's/.*\(&lt;MyElement&gt;.*&lt;\/MyElement&gt;\).*\(myAttribute="[[:alnum:]]*"\).*/\1,\2/'</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1328</wp:post_id>
  <wp:post_date>2014-02-27 17:40:04</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Cygwin installation</title>
  <link>https://bmwieczorek.wordpress.com/?p=1333</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1333</guid>
  <description/>
  <content:encoded><![CDATA[subversion
vim
wget]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1333</wp:post_id>
  <wp:post_date>2014-03-03 14:20:58</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>ThreadWaitingTest</title>
  <link>https://bmwieczorek.wordpress.com/2015/06/24/thread-in-waiting-state-example-and-jvisualvm-analysis/threadwaitingtest/</link>
  <pubDate>Wed, 24 Jun 2015 21:08:58 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.files.wordpress.com/2015/06/threadwaitingtest.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1412</wp:post_id>
  <wp:post_date>2015-06-24 23:08:58</wp:post_date>
  <wp:post_date_gmt>2015-06-24 21:08:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>threadwaitingtest</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1411</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bmwieczorek.files.wordpress.com/2015/06/threadwaitingtest.png</wp:attachment_url>
</item>
<item>
  <title>ThreadSleepTest</title>
  <link>https://bmwieczorek.wordpress.com/2015/06/25/thread-in-sleeping-timed-waiting-state-example-and-jvisualvm-analysis/threadsleeptest/</link>
  <pubDate>Thu, 25 Jun 2015 07:34:27 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.files.wordpress.com/2015/06/threadsleeptest.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1415</wp:post_id>
  <wp:post_date>2015-06-25 09:34:27</wp:post_date>
  <wp:post_date_gmt>2015-06-25 07:34:27</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>threadsleeptest</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1414</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bmwieczorek.files.wordpress.com/2015/06/threadsleeptest.png</wp:attachment_url>
</item>
<item>
  <title>ThreadBlockedTest</title>
  <link>https://bmwieczorek.wordpress.com/2015/06/25/thread-in-monitor-blocked-state-example-and-jvisualvm-analysis/threadblockedtest/</link>
  <pubDate>Thu, 25 Jun 2015 07:43:53 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.files.wordpress.com/2015/06/threadblockedtest.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1418</wp:post_id>
  <wp:post_date>2015-06-25 09:43:53</wp:post_date>
  <wp:post_date_gmt>2015-06-25 07:43:53</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>threadblockedtest</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1417</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bmwieczorek.files.wordpress.com/2015/06/threadblockedtest.png</wp:attachment_url>
</item>
<item>
  <title>ThreadBlockedOnSynchronizedTest</title>
  <link>https://bmwieczorek.wordpress.com/2015/06/25/thread-in-monitor-blocked-state-waiting-for-synchronized-access-example-and-jvisualvm-analysis/threadblockedonsynchronizedtest/</link>
  <pubDate>Thu, 25 Jun 2015 08:50:00 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.files.wordpress.com/2015/06/threadblockedonsynchronizedtest.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1423</wp:post_id>
  <wp:post_date>2015-06-25 10:50:00</wp:post_date>
  <wp:post_date_gmt>2015-06-25 08:50:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>threadblockedonsynchronizedtest</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1422</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bmwieczorek.files.wordpress.com/2015/06/threadblockedonsynchronizedtest.png</wp:attachment_url>
</item>
<item>
  <title>AllThreadsRunning</title>
  <link>https://bmwieczorek.wordpress.com/2015/06/25/all-threads-running-example-and-jvisualvm-analysis/allthreadsrunning/</link>
  <pubDate>Thu, 25 Jun 2015 12:01:48 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.files.wordpress.com/2015/06/allthreadsrunning.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1426</wp:post_id>
  <wp:post_date>2015-06-25 14:01:48</wp:post_date>
  <wp:post_date_gmt>2015-06-25 12:01:48</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>allthreadsrunning</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1425</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bmwieczorek.files.wordpress.com/2015/06/allthreadsrunning.png</wp:attachment_url>
</item>
<item>
  <title>Eclipse Java / Editor / Templates</title>
  <link>https://bmwieczorek.wordpress.com/?p=1465</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1465</guid>
  <description/>
  <content:encoded><![CDATA[1. private field - Create field
[code language="java"]
private ${type} ${name};
[/code]

2. private final field - Create final field
[code language="java"]
private final ${type} ${name};
[/code]

3. list - Create List
[code language="java"]
${listType:newType(java.util.List)}&lt;${type}&gt; ${name};
[/code]

4. asList - Create List from Arrays.asList()
[code language="java"]
${listType:newType(java.util.List)}&lt;${type}&gt; ${name};
[/code]

5. arrayList - Create ArrayList
[code language="java"]
${listType:newType(java.util.List)}&lt;${type}&gt; ${name} = new ${arrayListType:newType(java.util.ArrayList)}&lt;&gt;();
[/code]

6. logger - Create SLF4J logger
[code language="java"]
${:import(org.slf4j.Logger,org.slf4j.LoggerFactory)};
private static final Logger LOGGER = LoggerFactory.getLogger(${enclosing_type}.class);
[/code]

7. test - Create new Junit test using Given-When-Then template
[code language="java"]
    @${testType:newType(org.junit.Test)};
    public void ${should}() { ${staticImport:importStatic('org.junit.Assert.*')}
        // given
        ${cursor}

        // when

        // then

    }
[/code]

8. mock - Create Mockito mock
[code language="java"]
${:importStatic('org.mockito.Mockito.mock')}${Type} ${mockName} = mock(${Type}.class);
[/code]

]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1465</wp:post_id>
  <wp:post_date>2015-07-21 16:33:09</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="eclipse"><![CDATA[eclipse]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="templates"><![CDATA[templates]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>parallel-stream--fork-join-worker-pool-reuse</title>
  <link>https://bmwieczorek.wordpress.com/2015/10/23/java-calling-multiple-times-parallel-stream-forkjoin-pool-vs-number-of-threads-started/parallel-stream-fork-join-worker-pool-reuse/</link>
  <pubDate>Sat, 24 Oct 2015 18:21:10 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.files.wordpress.com/2015/10/parallel-stream-fork-join-worker-pool-reuse.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1646</wp:post_id>
  <wp:post_date>2015-10-24 20:21:10</wp:post_date>
  <wp:post_date_gmt>2015-10-24 18:21:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>parallel-stream-fork-join-worker-pool-reuse</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1639</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bmwieczorek.files.wordpress.com/2015/10/parallel-stream-fork-join-worker-pool-reuse.png</wp:attachment_url>
</item>
<item>
  <title>parallel-stream--new-fork-join-worker-pool</title>
  <link>https://bmwieczorek.wordpress.com/2015/10/23/java-calling-multiple-times-parallel-stream-forkjoin-pool-vs-number-of-threads-started/parallel-stream-new-fork-join-worker-pool/</link>
  <pubDate>Sat, 24 Oct 2015 19:38:01 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.files.wordpress.com/2015/10/parallel-stream-new-fork-join-worker-pool.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1653</wp:post_id>
  <wp:post_date>2015-10-24 21:38:01</wp:post_date>
  <wp:post_date_gmt>2015-10-24 19:38:01</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>parallel-stream-new-fork-join-worker-pool</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1639</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bmwieczorek.files.wordpress.com/2015/10/parallel-stream-new-fork-join-worker-pool.png</wp:attachment_url>
</item>
<item>
  <title>parallel-stream--new-fork-join-worker-pool--threads-started</title>
  <link>https://bmwieczorek.wordpress.com/2015/10/23/java-calling-multiple-times-parallel-stream-forkjoin-pool-vs-number-of-threads-started/parallel-stream-new-fork-join-worker-pool-threads-started/</link>
  <pubDate>Sat, 24 Oct 2015 19:50:53 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.files.wordpress.com/2015/10/parallel-stream-new-fork-join-worker-pool-threads-started.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1657</wp:post_id>
  <wp:post_date>2015-10-24 21:50:53</wp:post_date>
  <wp:post_date_gmt>2015-10-24 19:50:53</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>parallel-stream-new-fork-join-worker-pool-threads-started</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1639</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bmwieczorek.files.wordpress.com/2015/10/parallel-stream-new-fork-join-worker-pool-threads-started.png</wp:attachment_url>
</item>
<item>
  <title>parallel-stream--fork-join-worker-pool-reuse--threads-started</title>
  <link>https://bmwieczorek.wordpress.com/2015/10/23/java-calling-multiple-times-parallel-stream-forkjoin-pool-vs-number-of-threads-started/parallel-stream-fork-join-worker-pool-reuse-threads-started/</link>
  <pubDate>Sat, 24 Oct 2015 20:07:35 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.files.wordpress.com/2015/10/parallel-stream-fork-join-worker-pool-reuse-threads-started.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1661</wp:post_id>
  <wp:post_date>2015-10-24 22:07:35</wp:post_date>
  <wp:post_date_gmt>2015-10-24 20:07:35</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>parallel-stream-fork-join-worker-pool-reuse-threads-started</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1639</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bmwieczorek.files.wordpress.com/2015/10/parallel-stream-fork-join-worker-pool-reuse-threads-started.png</wp:attachment_url>
</item>
<item>
  <title>parallel-stream--fork-join-threads</title>
  <link>https://bmwieczorek.wordpress.com/2015/10/23/java-calling-multiple-times-parallel-stream-forkjoin-pool-vs-number-of-threads-started/parallel-stream-fork-join-threads/</link>
  <pubDate>Sun, 25 Oct 2015 08:53:57 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.files.wordpress.com/2015/10/parallel-stream-fork-join-threads.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1664</wp:post_id>
  <wp:post_date>2015-10-25 09:53:57</wp:post_date>
  <wp:post_date_gmt>2015-10-25 08:53:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>parallel-stream-fork-join-threads</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1639</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bmwieczorek.files.wordpress.com/2015/10/parallel-stream-fork-join-threads.png</wp:attachment_url>
</item>
<item>
  <title>parallel-stream--fork-join-threads--threads-started</title>
  <link>https://bmwieczorek.wordpress.com/2015/10/23/java-calling-multiple-times-parallel-stream-forkjoin-pool-vs-number-of-threads-started/parallel-stream-fork-join-threads-threads-started/</link>
  <pubDate>Sun, 25 Oct 2015 08:54:11 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.files.wordpress.com/2015/10/parallel-stream-fork-join-threads-threads-started.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1665</wp:post_id>
  <wp:post_date>2015-10-25 09:54:11</wp:post_date>
  <wp:post_date_gmt>2015-10-25 08:54:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>parallel-stream-fork-join-threads-threads-started</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1639</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bmwieczorek.files.wordpress.com/2015/10/parallel-stream-fork-join-threads-threads-started.png</wp:attachment_url>
</item>
<item>
  <title>Monitoring Java/JVM/system CPU usage</title>
  <link>https://bmwieczorek.wordpress.com/?p=1734</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1734</guid>
  <description/>
  <content:encoded><![CDATA[<strong>1. Endless looping</strong>

<strong>2. Sleeping</strong>

<strong>3. waiting (object.wait())</strong>

<strong>4. Disc IO operation</strong>

<strong>5. Network IO operation</strong>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1734</wp:post_id>
  <wp:post_date>2015-10-29 10:35:46</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="cpu"><![CDATA[CPU]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="jvisualvm"><![CDATA[jvisualvm]]></category>
  <category domain="category" nicename="jvm"><![CDATA[jvm]]></category>
  <category domain="category" nicename="monitoring"><![CDATA[monitoring]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>10-threads-calling-slow-network-IO-http-rq</title>
  <link>https://bmwieczorek.wordpress.com/2015/11/02/java-monitoring-cpu-and-system-load-of-multi-threaded-application-via-operatingsystemmxbean/10-threads-calling-slow-network-io-http-rq/</link>
  <pubDate>Mon, 02 Nov 2015 11:18:44 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.files.wordpress.com/2015/11/10-threads-calling-slow-network-io-http-rq.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1785</wp:post_id>
  <wp:post_date>2015-11-02 12:18:44</wp:post_date>
  <wp:post_date_gmt>2015-11-02 11:18:44</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>10-threads-calling-slow-network-io-http-rq</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1766</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bmwieczorek.files.wordpress.com/2015/11/10-threads-calling-slow-network-io-http-rq.png</wp:attachment_url>
</item>
<item>
  <title>fixed-thread-pool</title>
  <link>https://bmwieczorek.wordpress.com/2015/11/05/difference-between-cachedthreadpool-vs-fixedthreadpool-visualized-in-jvisualmvm/fixed-thread-pool/</link>
  <pubDate>Thu, 05 Nov 2015 17:33:47 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.files.wordpress.com/2015/11/fixed-thread-pool.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1834</wp:post_id>
  <wp:post_date>2015-11-05 18:33:47</wp:post_date>
  <wp:post_date_gmt>2015-11-05 17:33:47</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>fixed-thread-pool</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1816</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bmwieczorek.files.wordpress.com/2015/11/fixed-thread-pool.png</wp:attachment_url>
</item>
<item>
  <title>cached-thread-pool</title>
  <link>https://bmwieczorek.wordpress.com/2015/11/05/difference-between-cachedthreadpool-vs-fixedthreadpool-visualized-in-jvisualmvm/cached-thread-pool/</link>
  <pubDate>Thu, 05 Nov 2015 21:32:02 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.files.wordpress.com/2015/11/cached-thread-pool.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1839</wp:post_id>
  <wp:post_date>2015-11-05 22:32:02</wp:post_date>
  <wp:post_date_gmt>2015-11-05 21:32:02</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>cached-thread-pool</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1816</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bmwieczorek.files.wordpress.com/2015/11/cached-thread-pool.png</wp:attachment_url>
</item>
<item>
  <title>My Custom Intelij Keymap Shortcuts</title>
  <link>https://bmwieczorek.wordpress.com/2015/12/04/my-custom-intellij-shortcuts-and-live-templates-some-based-on-eclipse/my-custom-intelij-keymap-shortcuts/</link>
  <pubDate>Thu, 28 Jan 2016 10:31:24 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.files.wordpress.com/2015/12/my-custom-intelij-keymap-shortcuts.doc</guid>
  <description/>
  <content:encoded><![CDATA[My Custom Intelij Keymap Shortcuts.docx]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2229</wp:post_id>
  <wp:post_date>2016-01-28 11:31:24</wp:post_date>
  <wp:post_date_gmt>2016-01-28 10:31:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>my-custom-intelij-keymap-shortcuts</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>2046</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bmwieczorek.files.wordpress.com/2015/12/my-custom-intelij-keymap-shortcuts.doc</wp:attachment_url>
</item>
<item>
  <title>tortoise-git-diff</title>
  <link>https://bmwieczorek.wordpress.com/2016/02/10/git-working-directorystage-areacommitted/tortoise-git-diff/</link>
  <pubDate>Wed, 10 Feb 2016 18:21:36 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.files.wordpress.com/2016/02/tortoise-git-diff.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2363</wp:post_id>
  <wp:post_date>2016-02-10 19:21:36</wp:post_date>
  <wp:post_date_gmt>2016-02-10 18:21:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>tortoise-git-diff</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>2353</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bmwieczorek.files.wordpress.com/2016/02/tortoise-git-diff.png</wp:attachment_url>
</item>
<item>
  <title>intellij-git-diff</title>
  <link>https://bmwieczorek.wordpress.com/2016/02/10/git-working-directorystage-areacommitted/intellij-git-diff/</link>
  <pubDate>Wed, 10 Feb 2016 20:12:17 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.files.wordpress.com/2016/02/intellij-git-diff.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2365</wp:post_id>
  <wp:post_date>2016-02-10 21:12:17</wp:post_date>
  <wp:post_date_gmt>2016-02-10 20:12:17</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>intellij-git-diff</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>2353</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bmwieczorek.files.wordpress.com/2016/02/intellij-git-diff.png</wp:attachment_url>
</item>
<item>
  <title>tortoise-commit</title>
  <link>https://bmwieczorek.wordpress.com/2016/02/24/git-merge-commit-all-what-was-merged/tortoise-commit/</link>
  <pubDate>Wed, 24 Feb 2016 16:54:08 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.files.wordpress.com/2016/02/tortoise-commit.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2795</wp:post_id>
  <wp:post_date>2016-02-24 17:54:08</wp:post_date>
  <wp:post_date_gmt>2016-02-24 16:54:08</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>tortoise-commit</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>2785</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bmwieczorek.files.wordpress.com/2016/02/tortoise-commit.png</wp:attachment_url>
</item>
<item>
  <title>My Custom Intelijj Keymap Shortcuts</title>
  <link>https://bmwieczorek.wordpress.com/2015/12/04/my-custom-intellij-shortcuts-and-live-templates-some-based-on-eclipse/my-custom-intelijj-keymap-shortcuts/</link>
  <pubDate>Wed, 11 May 2016 14:37:25 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.files.wordpress.com/2015/12/my-custom-intelijj-keymap-shortcuts.doc</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2888</wp:post_id>
  <wp:post_date>2016-05-11 16:37:25</wp:post_date>
  <wp:post_date_gmt>2016-05-11 14:37:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>my-custom-intelijj-keymap-shortcuts</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>2046</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bmwieczorek.files.wordpress.com/2015/12/my-custom-intelijj-keymap-shortcuts.doc</wp:attachment_url>
</item>
<item>
  <title>Docker install ubuntu 16.04 xenial</title>
  <link>https://bmwieczorek.wordpress.com/?p=3119</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=3119</guid>
  <description/>
  <content:encoded><![CDATA[sudo apt-get install apt-transport-https ca-certificates
sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
sudo apt-add-repository 'deb https://apt.dockerproject.org/repo ubuntu-xenial main'
sudo apt-get update
apt-cache policy docker-engine
sudo apt-get install linux-image-extra-$(uname -r) linux-image-extra-virtual -y
sudo apt-get update
sudo apt-get install docker-engine -y
sudo service docker start
sudo groupadd docker
sudo usermod -aG docker $USER
#docker run hello-world
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3119</wp:post_id>
  <wp:post_date>2016-11-14 12:38:17</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>my-schema.xsd</title>
  <link>https://bmwieczorek.wordpress.com/2017/07/17/xsd-schema-validation-of-xml/my-schema-xsd/</link>
  <pubDate>Tue, 18 Jul 2017 06:19:29 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.files.wordpress.com/2017/07/my-schema-xsd.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3389</wp:post_id>
  <wp:post_date>2017-07-18 08:19:29</wp:post_date>
  <wp:post_date_gmt>2017-07-18 06:19:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>my-schema-xsd</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>3382</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bmwieczorek.files.wordpress.com/2017/07/my-schema-xsd.png</wp:attachment_url>
</item>
<item>
  <title>Screen Shot 2017-07-27 at 22.06.15</title>
  <link>https://bmwieczorek.wordpress.com/2017/07/27/xsd-schema-declaring-xml-only-with-attributes/screen-shot-2017-07-27-at-22-06-15/</link>
  <pubDate>Thu, 27 Jul 2017 20:06:43 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.files.wordpress.com/2017/07/screen-shot-2017-07-27-at-22-06-15.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3424</wp:post_id>
  <wp:post_date>2017-07-27 22:06:43</wp:post_date>
  <wp:post_date_gmt>2017-07-27 20:06:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>screen-shot-2017-07-27-at-22-06-15</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>3415</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bmwieczorek.files.wordpress.com/2017/07/screen-shot-2017-07-27-at-22-06-15.png</wp:attachment_url>
</item>
<item>
  <title>Screen Shot 2017-07-27 at 22.19.43</title>
  <link>https://bmwieczorek.wordpress.com/2017/07/27/xsd-schema-declaring-xml-only-with-attributes/screen-shot-2017-07-27-at-22-19-43/</link>
  <pubDate>Thu, 27 Jul 2017 20:20:02 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.files.wordpress.com/2017/07/screen-shot-2017-07-27-at-22-19-43.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3446</wp:post_id>
  <wp:post_date>2017-07-27 22:20:02</wp:post_date>
  <wp:post_date_gmt>2017-07-27 20:20:02</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>screen-shot-2017-07-27-at-22-19-43</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>3415</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bmwieczorek.files.wordpress.com/2017/07/screen-shot-2017-07-27-at-22-19-43.png</wp:attachment_url>
</item>
<item>
  <title>Screen Shot 2017-08-07 at 13.33.10</title>
  <link>https://bmwieczorek.wordpress.com/2017/08/07/xsd-schema-repeating-elements-via-unbouned-choice-and-sequence/screen-shot-2017-08-07-at-13-33-10/</link>
  <pubDate>Mon, 07 Aug 2017 11:34:40 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.files.wordpress.com/2017/08/screen-shot-2017-08-07-at-13-33-10.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3459</wp:post_id>
  <wp:post_date>2017-08-07 13:34:40</wp:post_date>
  <wp:post_date_gmt>2017-08-07 11:34:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>screen-shot-2017-08-07-at-13-33-10</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>3453</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bmwieczorek.files.wordpress.com/2017/08/screen-shot-2017-08-07-at-13-33-10.png</wp:attachment_url>
</item>
<item>
  <title>Screen Shot 2017-08-07 at 13.47.48</title>
  <link>https://bmwieczorek.wordpress.com/2017/08/07/xsd-schema-repeating-elements-via-unbouned-choice-and-sequence/screen-shot-2017-08-07-at-13-47-48/</link>
  <pubDate>Mon, 07 Aug 2017 11:48:18 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.files.wordpress.com/2017/08/screen-shot-2017-08-07-at-13-47-48.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3473</wp:post_id>
  <wp:post_date>2017-08-07 13:48:18</wp:post_date>
  <wp:post_date_gmt>2017-08-07 11:48:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>screen-shot-2017-08-07-at-13-47-48</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>3453</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bmwieczorek.files.wordpress.com/2017/08/screen-shot-2017-08-07-at-13-47-48.png</wp:attachment_url>
</item>
<item>
  <title>linux installation</title>
  <link>https://bmwieczorek.wordpress.com/2010/11/17/linux-installation/</link>
  <pubDate>Wed, 17 Nov 2010 18:40:45 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1074</guid>
  <description/>
  <content:encoded><![CDATA[<strong>Pre installation</strong>
/etc/apt/sources.list:
# java
deb http://archive.canonical.com/ubuntu lucid partner
deb-src http://archive.canonical.com/ubuntu lucid partner
# virtualbox
deb http://download.virtualbox.org/virtualbox/debian lucid non-free
# 
deb http://packages.medibuntu.org/ lucid free non-free
deb-src http://packages.medibuntu.org/ lucid free non-free
# sipe for pidgin-sipe
deb http://ppa.launchpad.net/aavelar/ppa/ubuntu jaunty main
deb-src http://ppa.launchpad.net/aavelar/ppa/ubuntu jaunty main

<strong>Installation</strong>
sudo apt-get install sun-java6-bin sun-java6-jdk sun-java6-jre sun-java6-plugin sun-java6-source ssh vim w32codecs mplayer mplayer-gui vlc virtualbox-3.2 adobe-flashplugin pidgin pidgin-sipe acroread 

<strong>Post installation</strong>
virtualbox usb: add user to vboxusers (menu: users/groups -&gt; manage groups -&gt; check box user)
*.sh scripts in /etc/init.d/: sudo update-rc.d script.sh defaults 90
alt+F2: gconf-editor -&gt; apps/metacity/general/button_layout

~/.bashrc:
alias psj='ps -ef | grep java | grep -v grep'
export JAVA_HOME=/usr/lib/jvm/java-6-sun
export M2_HOME=$HOME/dev/environment/apache-maven-2.2.1
export ANT_HOME=$HOME/dev/environment/apache-ant-1.8.1
export PATH=$JAVA_HOME/bin:$M2_HOME/bin:$ANT_HOME/bin:$HOME/dev/environment/flash_player_10_linux_dev/standalone/release:$HOME/bin:$PATH
export MAVEN_OPTS=" -Dsocket.base=80 "


]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1074</wp:post_id>
  <wp:post_date>2010-11-17 19:40:45</wp:post_date>
  <wp:post_date_gmt>2010-11-17 18:40:45</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>linux-installation</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Fuse ESB </title>
  <link>https://bmwieczorek.wordpress.com/2010/11/20/fuse-esb/</link>
  <pubDate>Sat, 20 Nov 2010 09:38:21 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1092</guid>
  <description/>
  <content:encoded><![CDATA[An ESB acts as a shared messaging layer for connecting applications and other services throughout an enterprise computing infrastructure. It supplements its core asynchronous messaging backbone with intelligent transformation and routing to ensure messages are passed reliably. Services participate in the ESB using either web services messaging standards or the Java Message System (JMS). Originally defined by analysts at Gartner, ESB is increasingly seen as a core component in a service-oriented infrastructure.

The most common way of defining an ESB is by listing the services it provides. These services include:
    *      transport mediation - not all services that need to be integrated use HTTP or JMS
    *      dynamic message transformation - not all services are going to use SOAP and are unlikely to require the same message structures
    *      intelligent routing
    *      security

For example, you could plug a billing system based on JMS into an ESB and use the ESBs transport mediation features to expose the billing system over the Web using SOAP/HTTP.

Ideally, an ESB solution should use a standardized container model, such as J2EE, JBI, or OSGi, for managing deployed services.

Out of the box, the Fuse ESB supports JMS, HTTP, HTTPS, FTP, XMPP, Web services, and a number of other bindings. In addition, you can easily extend its connectivity options using other components that conform to either the OSGi or JBI specification.

In addition, Fuse ESB supports event driven architectures. Services deployed into the Fuse ESB container can be fully decoupled and will simply listen on the bus until an appropriate service request arrives. Fuse ESB also supports events that occur outside of the bus. For example, a JMS service can listen on a topic that is hosted outside of the bus and only act when an appropriate message arrives.

The Fuse ESB kernel is based on Apache Karaf, an OSGi-based runtime that provides a lightweight container into which you can deploy various components and applications. 

Hot deployment: When a JAR file is added to the InstallDir/deploy folder, it is automatically installed inside the runtime.

Provisioning: Application provisioning through file-drop, Maven repository and remote download. 

Dynamic configuration: Changes to the properties files contained in the InstallDir/etc directory are monitored and propagated to the relevant services.

In an OSGi environment applications are packaged into bundles. A bundle is a JAR that contains extra information about the classes and resources included in the bundle. The information supplied in the bundle includes:
    *      packages required by classes in the bundle
    *      packages being exported by the bundle
    *      version information for the bundle

The information in the bundle also allows the framework to manage multiple versions of a bundle.
# Hot deployment of artifacts
# Management of multiple versions of a package, class, or bundle
# Dynamic loading of code

Karaf supports the following OSGi 4.2 containers:
    *      Apache Felix Framework 2.0.0
    *      Eclipse Equinox 3.5.

In Fuse ESB 4.3, the default container is Equinox. To change your OSGi container, set the karaf.framework property to felix in the etc/config.properties file.

You can deploy Java Business Integration (JBI) 1.0 service assemblies and service units in Fuse ESB.

Apache ActiveMQ message brokers can be deployed and managed as OSGi bundles. 

You can deploy JAX-WS and JAX-RS RESTful web services built using Apache CXF.

You can add any Spring configuration file to the deploy directory and Fuse ESB will generate an OSGi bundle on the fly and instantiate the Spring application context.

You can implement enterprise integration patterns in Apache Camel and deploy them in Fuse ESB.

The Fuse ESB console is a shell environment, based on Apache Felix Gogo, that enables you to control the Fuse ESB runtime.

The command console provides subshells to manage artifacts, including OSGi bundles, collections of bundles, JBI artifacts, and OSGi bundle repositories (OBRs). 

/etc—kernel and bundle configuration files 

/system—contains the OSGi bundles to be installed at runtime, organized as a Maven 2 repository. By default, Fuse ESB first checks this folder when resolving a required artifact, before checking the user's local Maven repository.

A feature is a named, versioned collection of OSGi bundles that work together to provide some functionality. 

You can specify the features that Fuse ESB installs when it first starts up and the initial set of registered feature URLs using the etc/org.apache.karaf.features.cfg file.

Fuse ESB uses the OPS4j Pax Logging system, a standard OSGi logging service that also supports the following APIs:
    *      Apache Log4j
    *      Apache Commons Logging
    *      SLF4J
    *      Java Util Logging

Spring integration
By default, Fuse ESB installs and activates support for Spring Dynamic Modules (Spring DM), which integrates Spring with the OSGi container. This means that it is possible for you to include Spring configuration files, META-INF/spring/*.xml, in your bundle. One of the key consequences of having Spring DM enabled in the OSGi container is that the lifecycle of the Spring application context is automatically synchronized with the OSGi bundle lifecycle:
    *      Activation—when a bundle is activated, Spring DM automatically scans the bundle to look for Spring configuration files in the standard location (any .xml files found under the META-INF/spring/ directory). If any Spring files are found, Spring DM creates an application context for the bundle and creates the beans defined in the Spring configuration files.
    *      Stopping—when a bundle is stopped, Spring DM automatically shuts down the bundle's Spring application context, causing any Spring beans to be deleted.

]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1092</wp:post_id>
  <wp:post_date>2010-11-20 10:38:21</wp:post_date>
  <wp:post_date_gmt>2010-11-20 09:38:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>fuse-esb</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="architectural-patterns"><![CDATA[Architectural patterns]]></category>
  <category domain="category" nicename="esb"><![CDATA[ESB]]></category>
  <category domain="category" nicename="soa"><![CDATA[SOA]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";i:0;s:6:"author";s:7:"2565591";s:7:"blog_id";s:7:"2490042";s:9:"mod_stamp";s:19:"2010-11-21 13:02:19";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>353</wp:comment_id>
    <wp:comment_author><![CDATA[Arun Kumar]]></wp:comment_author>
    <wp:comment_author_email>arun.kaundal@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>182.64.118.159</wp:comment_author_IP>
    <wp:comment_date>2011-04-30 14:49:40</wp:comment_date>
    <wp:comment_date_gmt>2011-04-30 12:49:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Simple but quite informative notes. Thanks!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1304167780.2756";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1304240169</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1304240169.3565";s:7:"message";s:50:"bmwieczorek changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:11:"bmwieczorek";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-04-30 12:49:40</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Log4j syslog appender</title>
  <link>https://bmwieczorek.wordpress.com/2010/12/13/log4j-syslog-appender/</link>
  <pubDate>Mon, 13 Dec 2010 21:38:16 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1112</guid>
  <description/>
  <content:encoded><![CDATA[Ubuntu 10.04 Lucid rsyslogd

1) Uncomment
/etc/rsyslog.conf:
# provides UDP syslog reception
$ModLoad imudp
$UDPServerRun 514

2) sudo service rsyslog restart

3)    
<pre>
    
        
        
        
        
            
        
    
</pre>
4) 
<code>public class TestSyslog {</code>

<code>&nbsp; static Logger logger = Logger.getLogger("monitoring");</code>
<code>
&nbsp; @Test
&nbsp; public void shouldLogToSyslog() throws Exception {
&nbsp; &nbsp; // given
&nbsp; &nbsp; String msg = "My message!!!";</code>
<code>
&nbsp; &nbsp;  // when
&nbsp; &nbsp; logger.error(message);</code>
<code>
&nbsp; &nbsp;  // then
&nbsp; &nbsp;  if (isLinux()) {
&nbsp; &nbsp; &nbsp; assertTrue(logContains("/var/log/syslog", msg));
&nbsp; &nbsp; &nbsp; assertTrue(logContains("/var/log/user.log", msg));
&nbsp; &nbsp; }
&nbsp; }</code>
<code>
&nbsp; private boolean isLinux() {
&nbsp; &nbsp; String os = System.getProperty("os.name");
&nbsp; &nbsp; return "Linux".equals(os);
&nbsp; }</code>
<code>
&nbsp; boolean logContains(String userLogFile, String msg) throws IOException {
&nbsp; &nbsp; String fileAsString = FileUtils.readFileToString(new File(userLogFile));
&nbsp; &nbsp; return fileAsString.contains(msg);
&nbsp;  }
}</code>
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1112</wp:post_id>
  <wp:post_date>2010-12-13 22:38:16</wp:post_date>
  <wp:post_date_gmt>2010-12-13 21:38:16</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>log4j-syslog-appender</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>367</wp:comment_id>
    <wp:comment_author><![CDATA[Keith]]></wp:comment_author>
    <wp:comment_author_email>keithstanek@hotmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>198.160.96.7</wp:comment_author_IP>
    <wp:comment_date>2012-01-18 21:12:06</wp:comment_date>
    <wp:comment_date_gmt>2012-01-18 20:12:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[This is nice. How did you set up your appender in the log4j.xml and did you need a jar for the rsyslog client?]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1326917526.7682";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360323.9666121006011962890625;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-01-18 20:12:06</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>368</wp:comment_id>
    <wp:comment_author><![CDATA[kockadevnull]]></wp:comment_author>
    <wp:comment_author_email>kocka.dev.null@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/kockadevnull</wp:comment_author_url>
    <wp:comment_author_IP>209.132.186.35</wp:comment_author_IP>
    <wp:comment_date>2012-01-25 14:17:39</wp:comment_date>
    <wp:comment_date_gmt>2012-01-25 13:17:39</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[should work... if the udp message is received by rsyslog and the data is written to the disk before the assertions are done]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1327497459.8735";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360324.046823024749755859375;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-01-25 13:17:39</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Linux ubuntu lucid apt sources.list</title>
  <link>https://bmwieczorek.wordpress.com/2010/12/19/linux-ubuntu-lucid-apt-sources-list/</link>
  <pubDate>Sun, 19 Dec 2010 21:32:54 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1133</guid>
  <description/>
  <content:encoded><![CDATA[My list:
deb http://pl.archive.ubuntu.com/ubuntu/ lucid main restricted universe multiverse
deb-src http://pl.archive.ubuntu.com/ubuntu/ lucid main restricted universe multiverse
deb http://pl.archive.ubuntu.com/ubuntu/ lucid-updates main restricted universe multiverse
deb-src http://pl.archive.ubuntu.com/ubuntu/ lucid-updates main restricted universe multiverse
# deb http://pl.archive.ubuntu.com/ubuntu/ lucid-proposed main restricted universe multiverse
# deb-src http://pl.archive.ubuntu.com/ubuntu/ lucid-proposed main restricted universe multiverse
# deb http://pl.archive.ubuntu.com/ubuntu/ lucid-backports main restricted universe multiverse
# deb-src http://pl.archive.ubuntu.com/ubuntu/ lucid-backports main restricted universe multiverse
deb http://security.ubuntu.com/ubuntu lucid-security main restricted universe multiverse
deb-src http://security.ubuntu.com/ubuntu lucid-security main restricted universe multiverse
deb http://archive.canonical.com/ubuntu lucid partner
deb-src http://archive.canonical.com/ubuntu lucid partner
deb http://packages.medibuntu.org/ lucid free non-free
deb-src http://packages.medibuntu.org/ lucid free non-free
deb http://archive.getdeb.net/ubuntu lucid-getdeb apps
deb-src http://archive.getdeb.net/ubuntu lucid-getdeb apps

# deb http://ppa.launchpad.net/kkszysiu/telepathy/ubuntu lucid main
# deb-src http://ppa.launchpad.net/kkszysiu/telepathy/ubuntu lucid main

deb http://download.virtualbox.org/virtualbox/debian lucid non-free

#sipe pidgin
# deb http://ppa.launchpad.net/aavelar/ppa/ubuntu lucid main
# deb-src http://ppa.launchpad.net/aavelar/ppa/ubuntu lucid main


#W: GPG error: http://ppa.launchpad.net lucid Release: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 5A9A06AEF9CB8DB0
# to solve (type for the last 8 chars of the missing key)
gpg --keyserver subkeys.pgp.net --recv-keys F9CB8DB0
gpg --export --armor F9CB8DB0 | sudo apt-key add -]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1133</wp:post_id>
  <wp:post_date>2010-12-19 22:32:54</wp:post_date>
  <wp:post_date_gmt>2010-12-19 21:32:54</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>linux-ubuntu-lucid-apt-sources-list</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>ServiceMix debugging</title>
  <link>https://bmwieczorek.wordpress.com/2010/12/27/servicemix-debugging/</link>
  <pubDate>Mon, 27 Dec 2010 13:34:37 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1135</guid>
  <description/>
  <content:encoded><![CDATA[add lines to bin/servicemix

KARAF_DEBUG=true
JAVA_DEBUG_OPTS="-Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000"
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1135</wp:post_id>
  <wp:post_date>2010-12-27 14:34:37</wp:post_date>
  <wp:post_date_gmt>2010-12-27 13:34:37</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>servicemix-debugging</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="eclipse"><![CDATA[eclipse]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Eclipse plugins</title>
  <link>https://bmwieczorek.wordpress.com/2011/02/10/eclipse-plugins/</link>
  <pubDate>Thu, 10 Feb 2011 21:46:51 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1138</guid>
  <description/>
  <content:encoded><![CDATA[checkstyle http://eclipse-cs.sf.net/update/
crucible http://update.atlassian.com/atlassian-eclipse-plugin/e3.6
EclEmma Java Code Coverage http://update.eclemma.org/
eCobertura http://ecobertura.johoop.de/update/
FindBugs http://findbugs.cs.umd.edu/eclipse/
m2eclipse http://m2eclipse.sonatype.org/sites/m2e moved to http://download.eclipse.org/technology/m2e/releases
More Unit http://moreunit.sourceforge.net/update-site/
PMD http://pmd.sourceforge.net/eclipse
Spring IDE http://springide.org/updatesite
subclipse http://subclipse.tigris.org/update_1.6.x]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1138</wp:post_id>
  <wp:post_date>2011-02-10 22:46:51</wp:post_date>
  <wp:post_date_gmt>2011-02-10 21:46:51</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>eclipse-plugins</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Cygwin</title>
  <link>https://bmwieczorek.wordpress.com/2011/03/05/cygwin/</link>
  <pubDate>Sat, 05 Mar 2011 17:13:11 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1141</guid>
  <description/>
  <content:encoded><![CDATA[~/.bash_profile:
<pre>

umask 022
set -o ignoreeof
shopt -s cdspell histappend no_empty_cmd_completion

export EDITOR="vim"
#export HISTCONTROL="ignoreboth:erasedups"
export HISTFILESIZE=2500
export HISTSIZE=2500
export HISTIGNORE="*shutdown*:su:[bf]g:exit:logout:rm *:sudo rm *"
export PATH=$PATH:~/bin

export LANG="en_US.ISO8859-1"
export LC_CTYPE="pl_PL.ISO8859-2"
export LC_NUMERIC="pl_PL.ISO8859-2"
export LC_TIME="en_US.ISO8859-1"
export LC_COLLATE="pl_PL.ISO8859-2"
export LC_MONETARY="pl_PL.ISO8859-2"
export LC_MESSAGES="en_US.ISO8859-1"
export LC_PAPER="pl_PL.ISO8859-2"
export LC_NAME="pl_PL.ISO8859-2"
export LC_ADDRESS="pl_PL.ISO8859-2"
export LC_TELEPHONE="pl_PL.ISO8859-2"
export LC_MEASUREMENT="pl_PL.ISO8859-2"
export LC_IDENTIFICATION="pl_PL.ISO8859-2"
export MM_CHARSET="ISO-8859-2"
export LS_COLORS='no=00:fi=00:di=01;36:ln=01;34:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.svgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.aac=00;34:*.au=00;34:*.flac=00;34:*.mid=00;34:*.midi=00;34:*.mka=00;34:*.mp3=00;34:*.mpc=00;34:*.ogg=00;34:*.ra=00;34:*.wav=00;34:';

# Bash completion
[[ -f /etc/profile.d/bash-completion ]] &amp;&amp; source /etc/profile.d/bash-completion
# CYGWIN startup directory
CYGWINDIR=c:/dev/
[[ ! -z `echo $CYGWINDIR | grep -v " "` ]] &amp;&amp; cd $CYGWINDIR

#source ./setEnv.sh

# Prompt colors
PS1='\[33[01;32m\]\w \$\[33[00m\] '

# Aliases
alias console='unset DISPLAY &amp;&amp; rxvt -e bash -login &amp;'
alias ls='ls --color'		# colors

( cd &amp;&amp; complete -W "$(echo `cat .bash_history | egrep '^ssh ' | sort | uniq | sed 's/^ssh //'`;)" ssh )


</pre>

~/.bashrc without lines:
<pre>
# CYGWIN startup directory
CYGWINDIR=c:/dev/
[[ ! -z `echo $CYGWINDIR | grep -v " "` ]] &amp;&amp; cd $CYGWINDIR
</pre>

cygwin.bat:
<pre>
@echo off

C:
chdir C:\dev\environment\bin

bash --login -i
</pre>

cygwin-my-dir.bat:
<pre>
@echo off

C:
chdir C:\dev\environment\bin

bash --login -i -c 'cd my-dir; bash '
</pre>
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1141</wp:post_id>
  <wp:post_date>2011-03-05 18:13:11</wp:post_date>
  <wp:post_date_gmt>2011-03-05 17:13:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>cygwin</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="bash"><![CDATA[bash]]></category>
  <category domain="category" nicename="windows"><![CDATA[windows]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Clean code</title>
  <link>https://bmwieczorek.wordpress.com/2011/05/25/clean-code/</link>
  <pubDate>Wed, 25 May 2011 04:05:33 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1194</guid>
  <description/>
  <content:encoded><![CDATA[In order to test a instance method you need to instantiate the object, so do not put any business logic code into the constructor or static factory methods.

Move the dependencies to constructor parameters so that you do not need to care how they get instantiated. We can pass in a mocked dependency or a real object.

Having dependencies defined in constructor argumeters makes the API more clear.

That makes testing much more easier since mock all the dependencies.

Write many small tests for business logic and create a one happy path test that everything is wired together correctly.

In constructor we should be asking what we need but not creating it ourselves, should not create and use any Factories inside constructor/method code.

Ideally, you would have only field assignments in your constructor.

Tests about instantiating small pieces of your application.

You could use service locator (aka context or registry) to create an object for you instead of creating it yourself. However, in order to get the mocked object you would have to override the service locator methods which can be hard sometimes (looking into source code etc...)

When there are multiples constructor parameters and you want to test behavior based on the first paramter, then you can make the other null in tests, meaning that do not take part in the test.

Law of demeter: only ask for the objects that you need directly, don't use intermediate object that will the get what you need for you.

If your child object needs a new parameter in its constructor, it should not be added to the as parameter parent constructor. Parent object need only to know about the child, not the children dependencies. Otherwise the parent would violate the law of demeter adding as its constuctor parameter something he doesn't directly needs.

One factory plus a couple of break down factories  per object lifetime.

As a parameter of a constructor put objects of longer or the same lifetime. Put objects of a shorter lifecycle as method parameters.

For external api the will be used by other people, put validation logic into constructor. For internal api it is not suggested to use these checks since it make testing harder (need to meet extra preconditions before you really can start testing) - in this case tests are better than runtime precondition / check.

For production code you should return non null objects (not to get NPE). For test code passing null as a parameter makes it clear that this parameter is not important for the test.

For production code do not call 'new' operator (do not instantiate objects directly) in constructor so that somebody can pass in you a mock in the constructor argument. You should ask for what you want instead creating it by yourself.

The 'new' operator should be used only in tests and factories. Exception are the leaves of the application graph, there is nothing behind them, e.g.: value objects (e.g. User) or collections (new HashMap).

Law of demeter: only ask for the thinks that you need directly, you shouldn't know about the objects you don't need.

Objects should be divided into two categories:

1) business logic objects that do the logic in your application (here are most of bugs so you should make them easy to instantiate and  to test)

2) Pile of factories, the 'new' operators, builders etc ...

Then you can test objects instantiation and business logic separately, in isolation.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1194</wp:post_id>
  <wp:post_date>2011-05-25 06:05:33</wp:post_date>
  <wp:post_date_gmt>2011-05-25 04:05:33</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>clean-code</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="best-practices"><![CDATA[Best practices]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Writing code hard to test</title>
  <link>https://bmwieczorek.wordpress.com/2011/07/07/writing-code-hard-to-test/</link>
  <pubDate>Thu, 07 Jul 2011 08:29:31 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1220</guid>
  <description/>
  <content:encoded><![CDATA[How to write code that is hard to test?
- most people say: making things private, using private keyword, long methods (monolythic code)

<strong>Real issues</strong>
<ol>
	<li>mixing "new" operator with business logic prevents you from testing things in isolation (wrong: creating new objects directly in the business logic instead of using them)</li>
	<li>looking for things</li>
	<li>business logic in the constructor (in constructor you should ask for dependencies by constructor arguments and assign them to instance fields. Business logic should be in methods that use these dependecies but not construct them)</li>
	<li>having global state</li>
	<li>using static methods (which is essentialy procedural programming), it is easy to test leaf methods that do not call anybody else (Math.absolute(value)), but if a this static method has a bunch of collaborators then you cannot test this method in isolation, you cannot mock the db (cannot override static method). The worst thing is trying to test your application from the main method.</li>
	<li>deep inheritance hierarchy (if your class under test extends A, B, C classes you are also testing those classes if you want or not)</li>
	<li>too many conditionals (if statements - you need to prepare lots of test data to get throught the path you want)</li>
</ol>
<strong>Scope of tests</strong>
<ol>
	<li>Large number of unit tests - class level tested in insolation - very fast tests</li>
	<li>Many functional tests - collection of classess as subsystem - medium tests</li>
	<li>Some scenario tests - for the whole system - slow tests</li>
</ol>
The end to end tests are important but they take a lot of time and there are so many things that can go wrong so making sure every is set up correctly is hard and time consuming. It is hard to reproduce failures. Better test smaller portions of program and some happy path (all the things are wired up together correctly). Break the applicaion into subsystem and even invidual components and test the invidually.

<strong></strong>For bad code it is hard to write good test.

In order to test classes with dependencies you should be able to have a choice to:
<ol>
	<li>mock dependencies or</li>
	<li>stub dependencies or</li>
	<li>instantiate a real class that has been alread well tested.</li>
</ol>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1220</wp:post_id>
  <wp:post_date>2011-07-07 10:29:31</wp:post_date>
  <wp:post_date_gmt>2011-07-07 08:29:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>writing-code-hard-to-test</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="best-practices"><![CDATA[Best practices]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Global state</title>
  <link>https://bmwieczorek.wordpress.com/2011/07/07/global-state/</link>
  <pubDate>Thu, 07 Jul 2011 08:58:47 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1232</guid>
  <description/>
  <content:encoded><![CDATA[Class state (opposed to object state) is persistent to lifetime of JVM.

In Global State multiple executions can produce different results for new A().doSth();

Singleton - design pattern, static object in the global space, each field in a singleton is a holds a global state since it is a global variable. Everything accessible via Singleton instance field has a global variable. They cannot be garbage collected and are kept in JVM for its lifetime.

Singletons are bad for test since tests cannot fully control the state of the Singletons. If Singletons have any dependecies then tests cannot control instantiation process of these fields / dependencies.
BAD: Application has method that internally calls AppSettings.getInstace.doSth(). While testing Application how do you test in doSth() was really called. When AppSettings is a Singleton (design pattern) you cannot test it.
GOOD: Instead of this, design your Appsettings to have public constructor and a non-static doSth() method so that you cannot mock it. Then the Application wiil set AppSetting in the constructor and assign as instance field. Then you can verify if a call to Application method will internally call Appsettings doSth() method.

singleton - a single instance of an object that is intantiated once (only once was the constructor called) and is not attached to global space

you should ensure that objects are instantiated in the correct order and methods are called in the correct order. You can achieve it by explicitly passing the objects referenced to constructor or a method. Then, there is no hidden conversation between the objects and it is harder to make mistakes.

Dependency injection:
- enforces the proper order of initialization at compile time
- helps to define where you want to cut the dependecies boundaries so that you can mock the rest.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1232</wp:post_id>
  <wp:post_date>2011-07-07 10:58:47</wp:post_date>
  <wp:post_date_gmt>2011-07-07 08:58:47</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>global-state</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="best-practices"><![CDATA[Best practices]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>change shell</title>
  <link>https://bmwieczorek.wordpress.com/2011/09/28/change-shell/</link>
  <pubDate>Wed, 28 Sep 2011 13:39:32 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1240</guid>
  <description/>
  <content:encoded><![CDATA['chsh' - changes shell]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1240</wp:post_id>
  <wp:post_date>2011-09-28 15:39:32</wp:post_date>
  <wp:post_date_gmt>2011-09-28 13:39:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>change-shell</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Interview questions</title>
  <link>https://bmwieczorek.wordpress.com/2011/10/07/interview-questions/</link>
  <pubDate>Fri, 07 Oct 2011 16:52:35 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1243</guid>
  <description/>
  <content:encoded><![CDATA[<ol>
	<li>Difference between Parallelism and Concurreny (concurrency - when multiple task in a system can make progress at the same time, HTTP requests handled at the same time by web applicaton; parallelism - by using concurrency, solving a problem in less time, eg. using multiple threads to do some calucation on the chucks of data and merging the result). Some steps in algorithm</li>
</ol>
&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1243</wp:post_id>
  <wp:post_date>2011-10-07 18:52:35</wp:post_date>
  <wp:post_date_gmt>2011-10-07 16:52:35</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>interview-questions</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password>neo</wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>mysql db setup</title>
  <link>https://bmwieczorek.wordpress.com/2011/10/19/mysql-db-setup/</link>
  <pubDate>Wed, 19 Oct 2011 08:39:00 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1247</guid>
  <description/>
  <content:encoded><![CDATA[sg0212148@ubuntu:~$ mysql -uroot
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 40
Server version: 5.1.41-3ubuntu12.10 (Ubuntu)

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql&gt; create database test;
Query OK, 1 row affected (0.00 sec)

mysql&gt; use test;
Database changed
mysql&gt; create table report (student text, subject text, score int);
Query OK, 0 rows affected (0.00 sec)

insert into report (student, subject, score) values ("st1","sb1",3);
insert into report (student, subject, score) values ("st2","sb1",4);
insert into report (student, subject, score) values ("st3","sb1",5);
insert into report (student, subject, score) values ("st4","sb2",4);
insert into report (student, subject, score) values ("st5","sb2",5);
insert into report (student, subject, score) values ("st6","sb2",6);
insert into report (student, subject, score) values ("st7","sb3",5);
insert into report (student, subject, score) values ("st8","sb3",6);
insert into report (student, subject, score) values ("st9","sb3",7);
mysql&gt; select * from report;
+---------+---------+-------+
| student | subject | score |
+---------+---------+-------+
| st1      | sb1      |     3 |
| st2      | sb1      |     4 |
| st3      | sb1      |     5 |
| st4      | sb2      |     4 |
| st5      | sb2      |     5 |
| st6      | sb2      |     6 |
| st7      | sb3      |     5 |
| st8      | sb3      |     6 |
| st9      | sb3      |     7 |
+---------+---------+-------+
9 rows in set (0.00 sec)

mysql&gt;  select student,subject from report where score &gt; 4;
+---------+---------+
| student | subject |
+---------+---------+
| st3      | sb1      |
| st5      | sb2      |
| st6      | sb2      |
| st7      | sb3      |
| st8      | sb3      |
| st9      | sb3      |
+---------+---------+
6 rows in set (0.00 sec)

mysql&gt; select count(subject), subject from (select subject from report where score &gt; 4) as SS group by subject;
+----------------+---------+
| count(subject) | subject |
+----------------+---------+
|              1 | sb1      |
|              2 | sb2      |
|              3 | sb3      |
+----------------+---------+
3 rows in set (0.00 sec)

mysql&gt; select count(subject), subject from (select subject from report where score &gt; 4) as SS group by subject having count(subject)  &gt; 1;
+----------------+---------+
| count(subject) | subject |
+----------------+---------+
|              2 | sb2      |
|              3 | sb3      |
+----------------+---------+
2 rows in set (0.00 sec)

'<strong>where</strong>' operates on individual <strong>rows </strong>to select row that later may be use for grouping<strong> ('where'</strong> cannot be used after grouping)<strong>
</strong>

'<strong>having</strong>' operate on agregate functions

you cannot have 'having' without group by for proper results:
mysql&gt; select count(subject), subject from (select subject from report where score &gt; 4) as SS having count(subject)  &gt; 1;
+----------------+---------+
| count(subject) | subject |
+----------------+---------+
|              6 | sb1      |
+----------------+---------+]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1247</wp:post_id>
  <wp:post_date>2011-10-19 10:39:00</wp:post_date>
  <wp:post_date_gmt>2011-10-19 08:39:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>mysql-db-setup</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="mysql"><![CDATA[mysql]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>maven deploy</title>
  <link>https://bmwieczorek.wordpress.com/2011/12/07/maven-deploy/</link>
  <pubDate>Wed, 07 Dec 2011 13:48:09 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1259</guid>
  <description/>
  <content:encoded><![CDATA[mvn deploy:deploy-file -DrepositoryId=upload-releases  -DgroupId=com.bawi -DartifactId=my-project -Dversion=1.0.0-20111206 -Dpackaging=jar -DgeneratePom=true -Durl=http://maven.bawi.com/content/repositories/releases  -Dfile=my-project-1.0.0-20111206.jar

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1259</wp:post_id>
  <wp:post_date>2011-12-07 14:48:09</wp:post_date>
  <wp:post_date_gmt>2011-12-07 13:48:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>maven-deploy</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="maven"><![CDATA[maven]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>grep pattern inluding new line character</title>
  <link>https://bmwieczorek.wordpress.com/2012/01/13/grep-pattern-inluding-new-line-character/</link>
  <pubDate>Fri, 13 Jan 2012 20:11:12 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1263</guid>
  <description/>
  <content:encoded><![CDATA[<pre>
bawi@hp:~$ cat a.txt
aaabbb
cccddd

dddbbb
xxxxxx
cccfff
bawi@hp:~$ pcregrep -M 'b\nc' a.txt
aaabbb
cccddd
bawi@hp:~$ pcregrep -M 'b(\n|.)*c' a.txt
aaabbb
cccddd

dddbbb
xxxxxx
cccfff
</pre>

<pre>
bawi@hp:~$ cat b.txt 
1.ERROR test1
known-pattern1
other1.1
2.DEBUG test2
some data2.1
some data2.2
3.ERROR test3
undefined
other3.1
4.ERROR test4
known-pattern2

bawi@hp:~$ pcregrep -M 'ERROR .*\n' b.txt | pcregrep -M -v '\nknown-pattern1' | pcregrep -M -v '\nknown-pattern2'
3.ERROR test3
undefined
</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1263</wp:post_id>
  <wp:post_date>2012-01-13 21:11:12</wp:post_date>
  <wp:post_date_gmt>2012-01-13 20:11:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>grep-pattern-inluding-new-line-character</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="bash"><![CDATA[bash]]></category>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Doskonalenie techniki jazdy samochodem</title>
  <link>https://bmwieczorek.wordpress.com/2012/05/04/doskonalenie-techniki-jazdy-samochodem/</link>
  <pubDate>Fri, 04 May 2012 13:47:00 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1270</guid>
  <description/>
  <content:encoded><![CDATA[Jazda sportowa - maksymalnie opóźnione szybkie hamowania i maksymalne przyspieszenia.
Zwykła pracowitościa mozna osiagnąc poziom przewyższający umiejetności wiekszości kierowców.

Pozycja za kierownicą
Nie jezdzić za blisko i nie pochylać sie ani podpierać się do o kierownice. Trzymanie się kierownicy jest błędem popełniamym przez wielu w jeździe miejskiej i po prostej, bardzo wielu kierowcow na trasach krętych i prawie wszystkich w sytuacjach groźnych. Plecy musza byc naprawde mocno oparte (Sportowe pasy nie pozwalają na odchylanie się od kierownicy w prawo/lewo). 
Kąt rozwacia ramienia i przedramienia powinien wynosić 120-140 stopni (rozwarcie rąk w łokciach). 
Punkt cieżkosci całego ciala łącznie z rekami i nogami powinien być na fotelu (odpowiednie wgłębienie się w fotel). 
Nalezy siedziec dalej od kierownicy w pelni oparty o fotel (silne przywarcie plecami do oparcia)
Nogi i rece powinny być zupełnie swobodne, nie obciążone - umożliwia to błyskawiczną reakcje.
Oparcie fotela lekko odchylone - tworząc lekko rozwarty kąt miedzy udami.

Trzymamy kierownicę zawsze obydwiema rękami, między godz 9-10 i 2-3.

NA DROGACH TEZ SĄ CI SŁABIEJ JEŻDŻĄCY.

Ruszać należy miękko, spokojnie, natychmiast po zmianie świateł/samochodzie przed nami (żeby umożliwić przejazd innym za nami). 
Nie należy jeździć na biegu bezpośrednim (czwarty lub piąty) ze zbyt małą prędkością (szególnie pod górkę), kiedy to mocniejsze naciśniejsze pedału przyspiesznika może zniszczyć samochód. 

Silniki - zmiana biegów na wyższy przy obrotach:
Jazda sportowa - szybkie rozpędzanie samochodu
Benzynowy: 5000 (jedynka) - 5500 (trójka) (tak aby wszystkie zmiany były w zakresie 3000-5600) [ max moment ok 4200, spadek momentu po 5300 ]
Diesel: 2800 (jedynka) - 3400 (trójka) [ disel zaczyna tracic moment obrotowy po 3200 obr]

Jazda normalna płynna
Benzyna: 3000-3500
Diesel: 1700-2300

W jeździe sportowej ręczne szkrzynie biegów lepiej zdają egzamin nie automatyczne. 

Automatyczne skrzynie biegów: 
4 - automat przełącza tylko do 4 biegu, 3 - do trzeciego, 2 - tylko do drugiego (w jeździe sportowej niższe biegi wykorzystywane są przy wyjściu z zakrętu). 
D+ - puknięcie lewarka w lewo na "-" (minus) oznacza elektroniczną zmianę biegu na niższy (szkrzynia będzie nie korzystała z biegów wyższych niz wybrany) - przydatne na krętych trasach górskich jak i hamowaniu silnikiem z góry. 

Elektronika w samochodzie
ESP - stabilizuje ruch na zakrecie, szczególnie przydatny przy przednim napędzie
ASR - rozkłada siłę napędzająca tak aby wyrównać różnice w prędkości kół (gdy jedno ciągnie a drugie ślizga) 

Zmiana biegów na wyższy przy rozpedzaniu przy jeździe:
- pod górę - szybka zmiana biegów przy ok 90% max obrotów
- po plaskim - 70% max obrotow (max wartość krzywej momentu obrotowego, 4200 obr silnik benzynowy, 3200 silnie diesla)
- z górki - 50% maksymalnych obrotów

Przy jeździe z góry przy stromych odcinkach w dół należy hamować silnikiem, żeby nie doprowadzić do zbyt mocnego nagrzania hamulców. 

Przy sportowej jeździe na eździe pod góre gdy silnik słabnie należy szybko redukować bieg, na tyle wczesnie aby predkość po redukcji była nie mniejsza niż 90% max wartości dla tego niższego biegu.

Elastyczne silniki mają bardziej płaską linię momentu obrotowego. Natomiast silniki o dużej mocy z jednego litra nie są tak elastyczne - mają maksymalną moc i odpowiednio wysoki moment obrotowy w bardzo wąskim zakresie, co wymaga częstych zmian biegów. 

Aby uniknąć stłuczki czy wypadku należy czasami zrezygnować ze swojego pierwszeństwa przejazdu.

Przy zwężajacych sie pasach w tym samym kierunku należy stosować metodę zamka błyskawicznego - dojechać do tuż do miejsca zablokowania i na zmianę się wpuszczać (wyjazdy z miejsc parkingowych, blokady pasa etc).

Płynność jazdy to zmiana biegów bez szarpnięć oraz też unikanie niepotrzebnej utraty szybkości. To jazda elastyczna i miękka utrzymywana w granicy przyczepności. To przewidywanie ruchów innych pojazdów i przeszkód na drodze. 

Wraz z nadejściem zimy trzeba ćwiczyć przed trudnościami zeby wyrabiać/przypominać sobie nawyki. Trzeba ćwiczyć na sliskim, przy pierszym śniegu, deszczu, na lodzie. Trenujmy nasze umiejętności, zwiekszajmy nasze bezpieczeństwo jazdy.

Najlepsze, najbardziej efektowne jest hamowanie na granicy przyczepności, na granicy blokady. Przy zablokowanych kołach samochód sunie w kierunku w jakim był przed blokadą. Żadne manewry kierownicą nic nie pomogą. Należy wtedy puścić  pedał hamulca, by uruchomić koła i przywrócić możliwość manewrowania wozem (i zjechania na bok). Puszczenie hamulca jest bardzo trudne, trzeba opanować własny lęk. Aby to osiągnąć trzeba dużo ćwiczyć. Czami to jedyny ratunek to PUŚĆ HAMULEC PRZED PRZESZKODĄ I SKRĘĆ.

Przy braku ABS-u należy hamować pulsacyjnie (krótkie, szybkie naciskanie i odpuszczanie hamulca). ABS w wiekszości przypadków (poza tym gdy było szybko lub za ślisko) pozwala na sterowność samochodu w czasie hamowania. ABS wymaga jednak mocniejszego naciśniecia na pedał hamulca. 

Ćwiczyć można na placu, ustawiajac rozwieszony koc, styropian, kartony. Rozpędzamy się, jedziemy w kierunku przeszkody, nagle gwałtownie hamujemy, doprowadzając do blokady i w ostatniej chwili puszczając hamulec i zjeżdżając w prawo lub lewo obok przeszkody. 

Przy przejazdach kolejowych, poważnych dziurach czy nierównościach na drodze - takich przypadkach należy hamować do ostaniej chwili, ale bezwzględnie puścić hamulec, zanim przednie koła wjadą na przeszkodę. HAMUJ PRZED PRZESZKODAMI i nawet jakby było za szybko - PUŚĆ HAMULEC NA PRZESZKODZIE. W przeciwnym wypadku można urwać zawieszenie podwozia. 

Stosuj zasadę ograniczonego zaufania, szczególnie przy przejazdach kolejowych - Janusz Kulig zgninął na strzeżonym przejeździe z podniesionymi szlabanami. 

Najlepsze hamowanie jest ciągłe, tak zwane hamowanie na raz do granicy przyczepności bez wzgledu na rodzaj nawierzchni (asfalt czy lód). Nacisk na pedał powinien być odwrotnie proporcjonalny do szybkości wozu (czyli im szybciej wóz sie toczy tym delikatniej należy naciskać hamulec, by nie zerwać przyczepności. Im bardziej samochód zwalnia, tym mocniej można naciskać hamulec, bo będzie malało ryzyko zerwania przyczepności. ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1270</wp:post_id>
  <wp:post_date>2012-05-04 15:47:00</wp:post_date>
  <wp:post_date_gmt>2012-05-04 13:47:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>doskonalenie-techniki-jazdy-samochodem</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>1724</wp:comment_id>
    <wp:comment_author><![CDATA[regeneracja turbo]]></wp:comment_author>
    <wp:comment_author_email>turbina.turbin@onet.pl</wp:comment_author_email>
    <wp:comment_author_url>http://www.regeneracja-turbosprezarek.pl</wp:comment_author_url>
    <wp:comment_author_IP>85.193.236.107</wp:comment_author_IP>
    <wp:comment_date>2016-08-31 10:57:40</wp:comment_date>
    <wp:comment_date_gmt>2016-08-31 08:57:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Bardzo ciekawe wskazówki. Na doskonalenie techniki jazdy nigdy nie jest za późno ;) Dzięki za wpis!]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1472633861.305675029754638671875;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1472638974.6097469329833984375;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1667</wp:comment_id>
    <wp:comment_author><![CDATA[Łukasz]]></wp:comment_author>
    <wp:comment_author_email>lukasz0001@o2.pl</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>141.0.13.27</wp:comment_author_IP>
    <wp:comment_date>2016-04-09 21:42:12</wp:comment_date>
    <wp:comment_date_gmt>2016-04-09 19:42:12</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Bliska Tobie osoba, przyjaciel, mąż, żona jest fanem motoryzacji i ich marzeniem jest jazda super autem? Serwis http://
motoprezent.pl/jazdy-w-prezencie/
jazda-wybranym-autem/?sportowajazda jest stworzony specjalnie po to, aby realizować jazdy w prezencie Lamborghini, Ferrari, Porsche Turbo, Nissanem GTR oraz BMW Bi –Turbo. Wszystkie te auta mają wspólną cechą moc silników. Przekona się o tym każda osoba obdarowana, iż zasiadając za kierownicą auta sportowego pojawią się ciarki na skórze a adrenalina podskoczy. Proponujemy również jazdy ultra lekkimi bolidami KTM X-Bow oraz Ariel Atom, które nie posiadają okien, drzwi, dachu. Wrażenia z jazdy tymi pojazdami są niezapomnianym przeżyciem, tym bardziej, że nie można ich zobaczyć na drogach publicznych. Kolejną propozycją na spełnienie marzeń jest możliwość prowadzenia prawdziwej rajdówki Subaru STI i Mitsubishi EVO IX z klatką w środku, fotelem kubełkowym i surowym wyposażeniem rajdówek. Wszystkie jazdy odbywają się pod okiem profesjonalnego instruktora, który udzieli cennych wskazówek, aby jazda była jeszcze większą zabawą i niezapomnianym przeżyciem. Jazdy są realizowane na zamknięty torze.]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1460230933</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1460230933.38193798065185546875;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1460236153.8336079120635986328125;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>grep matching pattern from the line </title>
  <link>https://bmwieczorek.wordpress.com/2012/05/07/grep-matching-pattern-from-the-line/</link>
  <pubDate>Mon, 07 May 2012 08:09:26 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1282</guid>
  <description/>
  <content:encoded><![CDATA[<code>$ps -ef | grep myadm 
myadm   10016     1  0 May04 ?        00:17:43 /opt/atseintl/3rdParty/jdk1.6.0_22/bin/java -Dcontainer=smx-4.2 -Dser
vice=[TKT/WS01] -Ddomain=TKT -Dinstance=WS01 -Daction=start -Dsystemname=CertHybrid -Xms1G -Xmx2G -XX:PermSize=128m -XX:MaxPermSize=128m -XX:+DisableExplicitGC -XX:+UseAdaptiveSizePolicy -XX:+UseParallelGC -XX:ParallelGCThreads=8 -Xloggc:/apps/safire/smx-4.2/domains/TKT/WS01/logs/gc_050412_012458.log -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -verbose:gc -classpath :/apps/safire.safire.2012.04.00/smx-4.2/domains/TKT/WS01/etc:/apps/safire.safire.2012.04.00/smx-4.2/domains/TKT/WS01/conf:/apps/safire.safire.2012.04.00/smx-4.2/domains/TKT/WS01/lib/karaf-client.jar:/apps/safire.safire.2012.04.00/smx-4.2/domains/TKT/WS01/lib/karaf-jaas-boot.jar:/apps/safire.safire.2012.04.00/smx-4.2/domains/TKT/WS01/lib/karaf.jar:/apps/safire.safire.2012.04.00/smx-4.2/domains/TKT/WS01/lib/servicemix-version.jar org.apache.felix.karaf.main.Main

$ps -ef | grep myadm | grep -oh "\-Xms\w*"
-Xms1G

$ps -ef | grep myadm | grep -oh "\-XX:\w*=\w*"
-XX:PermSize=128m
-XX:MaxPermSize=128m
-XX:ParallelGCThreads=8
</code>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1282</wp:post_id>
  <wp:post_date>2012-05-07 10:09:26</wp:post_date>
  <wp:post_date_gmt>2012-05-07 08:09:26</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>grep-matching-pattern-from-the-line</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="bash"><![CDATA[bash]]></category>
  <category domain="category" nicename="grep"><![CDATA[grep]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>checked vs unchecked exceptions</title>
  <link>https://bmwieczorek.wordpress.com/2012/05/23/checked-vs-unchecked-exceptions/</link>
  <pubDate>Wed, 23 May 2012 12:38:25 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1285</guid>
  <description/>
  <content:encoded><![CDATA[Use unchecked exceptions (extending RuntimeException) for preconditions violations, so when a client violates the contract established by the API specification, e.g. negative or exceeding array length index value throws ArrayOutOfBoundsExceptions.

Use checked exceptions (extending Exception) for sitations when API cannot prevent exceptional condition AND the caller can take some useful action when received an exception, e.g. the payment voucher does not have sufficient amount of money to make a purchase. It is important in such case to add an accessor method to the exception informing how to recover, e.g. InsufficientFundsException.getMoneyShortage() - so that the money deficit can be communicated to the client. 
Unlike return codes, checked exceptions force developers to handle exceptional conditions, enhancing readibility. However, overuse of checked exceptions makes the API less pleasant to use. ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1285</wp:post_id>
  <wp:post_date>2012-05-23 14:38:25</wp:post_date>
  <wp:post_date_gmt>2012-05-23 12:38:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>checked-vs-unchecked-exceptions</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="architectural-patterns"><![CDATA[Architectural patterns]]></category>
  <category domain="category" nicename="best-practices"><![CDATA[Best practices]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Comparing sets HashSet, LinkedHashSet, TreeSet</title>
  <link>https://bmwieczorek.wordpress.com/2012/05/31/comparing-sets-hashset-linkedhashset-treeset/</link>
  <pubDate>Thu, 31 May 2012 17:22:06 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1293</guid>
  <description/>
  <content:encoded><![CDATA[<code>
<pre>
public class Test {

    public static void main(String[] args) {

        List numbers = printAndGetList(new Integer[] { 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 2, 1 });
        Set linkedHashSet = new LinkedHashSet();
        measureTimeForSet(linkedHashSet, numbers);
        Set treeSet = new TreeSet();
        measureTimeForSet(treeSet, numbers);
        Set hashSet = new HashSet();
        measureTimeForSet(hashSet, numbers);

        System.out.println("Comparing sets:");
        System.out.println(linkedHashSet.equals(hashSet));
        System.out.println(treeSet.equals(linkedHashSet));
        System.out.println(hashSet.equals(treeSet));

        System.out.println("Comparing arrays:");
        System.out.println(Arrays.equals(linkedHashSet.toArray(), hashSet.toArray()));
        System.out.println(Arrays.equals(treeSet.toArray(), linkedHashSet.toArray()));
        System.out.println(Arrays.equals(hashSet.toArray(), treeSet.toArray()));
    }

    private static List printAndGetList(Integer[] a) {
        List list = Arrays.asList(a);
        System.out.println("List         |          | " + list);
        return list;
    }

    private static void measureTimeForSet(Set s, List numbers) {
        long start = System.nanoTime();
        for (int i = 0; i &lt; numbers.size(); i++) {
            s.add(numbers.get(i));
            s.contains(i);
        }
        long stop = System.nanoTime();
        System.out.println(String.format(&quot;%1$-13s| %2$-6s ns| %3$s&quot;, s.getClass().getSimpleName(), stop - start, s));
    }

}
</pre>
</code>
Output:
<code>
<pre>
List         |          | [17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 2, 1]
LinkedHashSet| 71797  ns| [17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 2, 1]
TreeSet      | 137727 ns| [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]
HashSet      | 30450  ns| [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16]
Comparing sets:
true
true
true
Comparing arrays:
false
false
false
</pre>
</code>
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1293</wp:post_id>
  <wp:post_date>2012-05-31 19:22:06</wp:post_date>
  <wp:post_date_gmt>2012-05-31 17:22:06</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>comparing-sets-hashset-linkedhashset-treeset</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>ConcurrentModificationException</title>
  <link>https://bmwieczorek.wordpress.com/2012/06/05/concurrentmodificationexception/</link>
  <pubDate>Tue, 05 Jun 2012 11:22:17 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1301</guid>
  <description/>
  <content:encoded><![CDATA[<code>
<pre>
        Set set = new HashSet(Arrays.asList(1, 2));
        Iterator iterator = set.iterator();
        while (iterator.hasNext()) {
            set.remove(2);
            iterator.next();
        }


Exception in thread "main" java.util.ConcurrentModificationException
	at java.util.HashMap$HashIterator.nextEntry(HashMap.java:793)
	at java.util.HashMap$KeyIterator.next(HashMap.java:828)
	at com.sabre.ticketing.tktdoc.validation.rules.Test.main(Test.java:20)


</pre>


</code>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1301</wp:post_id>
  <wp:post_date>2012-06-05 13:22:17</wp:post_date>
  <wp:post_date_gmt>2012-06-05 11:22:17</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>concurrentmodificationexception</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>396</wp:comment_id>
    <wp:comment_author><![CDATA[nanda]]></wp:comment_author>
    <wp:comment_author_email>umailnandu@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>115.249.209.53</wp:comment_author_IP>
    <wp:comment_date>2012-08-08 13:59:10</wp:comment_date>
    <wp:comment_date_gmt>2012-08-08 11:59:10</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[You cannot remove an element while using iterator in collections.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1344427150</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1344427150.903553009033203125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-08-08 11:59:10</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Bash useful commands - continued </title>
  <link>https://bmwieczorek.wordpress.com/2013/02/14/bash-useful-commands-continued/</link>
  <pubDate>Thu, 14 Feb 2013 09:54:40 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1320</guid>
  <description/>
  <content:encoded><![CDATA[find, grep -v and xargs to copy filtered files into target dir:
$find -name \*jar | grep -v SNAPSHOT.jar | xargs -n1 -i cp {}   /tmp/jars/

pass output from one command (find) to another (ls)
$ls -la `find -name \*jar`]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1320</wp:post_id>
  <wp:post_date>2013-02-14 10:54:40</wp:post_date>
  <wp:post_date_gmt>2013-02-14 09:54:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>bash-useful-commands-continued</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="bash"><![CDATA[bash]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>osgi bundle install</title>
  <link>https://bmwieczorek.wordpress.com/2013/05/22/osgi-bundle-install/</link>
  <pubDate>Wed, 22 May 2013 10:04:53 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1322</guid>
  <description/>
  <content:encoded><![CDATA[karaf@root&gt; osgi:install -s file:C:/Projects/camel-bundle/target/camel-bundle-1.0-SNAPSHOT.jar
karaf@root&gt; install -s file:plugins/org.eclipse.osgi.services_3.3.0.v20110513.jar
karaf@root&gt; install -s mvn:org.apache.aries.proxy/org.apache.aries.proxy.api/0.4-SNAPSHOT
Bundle ID: 217
karaf@root&gt; uninstall 217

osgi&gt; install mvn:http://repo2.maven.org/maven2/!org.ops4j.pax.logging/pax-logging-api/1.6.2
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1322</wp:post_id>
  <wp:post_date>2013-05-22 12:04:53</wp:post_date>
  <wp:post_date_gmt>2013-05-22 10:04:53</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>osgi-bundle-install</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Spring AOP aspectj aspect proxy cglib</title>
  <link>https://bmwieczorek.wordpress.com/2013/09/13/spring-aop-aspectj-aspect-proxy-cglib/</link>
  <pubDate>Fri, 13 Sep 2013 16:41:26 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1324</guid>
  <description/>
  <content:encoded><![CDATA[no cglib:
Java: class Finder implement FinderIFace with find method

pom.xml
osgi import:
org.springframework.aop,
org.springframework.aop.framework,
org.aopalliance.aop,

add MetricsPopulatingAspect to spring beans in spring config xml

dependencies:
		
org.springframework
spring-aop
		

		
org.springframework
spring-aspects
		
I used old spring 2.5.6 

java:
@Aspect
public class MetricsPopulatingAspect {

    private static final Logger LOGGER = LoggerFactory.getLogger(MetricsPopulatingAspect.class);

    @AfterReturning(value = "execution(* com.bawi.Finder.find(..))", returning = "retVal")
    public void populate(Object retVal) {

        LOGGER.debug("Intercepting call to {}", Finder.class.getName());

        if (!(retVal instanceof ...)) {


CGLIB approach:
pom
extra:
org.springframework.aop.aspectj,
org.springframework.aop.aspectj.annotation,
net.sf.cglib.proxy,
net.sf.cglib.core,
net.sf.cglib.reflect,

extra dependencz        
net.sourceforge.cglib
com.springsource.net.sf.cglib
2.1.3
        

Same java code for aspect but class Finder does not implement interface]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1324</wp:post_id>
  <wp:post_date>2013-09-13 18:41:26</wp:post_date>
  <wp:post_date_gmt>2013-09-13 16:41:26</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>spring-aop-aspectj-aspect-proxy-cglib</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>423</wp:comment_id>
    <wp:comment_author><![CDATA[doubtsheet60.blogspace.fr]]></wp:comment_author>
    <wp:comment_author_email>mariotheriault@t-online.de</wp:comment_author_email>
    <wp:comment_author_url>http://doubtsheet60.blogspace.fr/6485943/Effortless-Suggestions-To-Allow-You-To-Purchase-Your-Next-Video-Game/</wp:comment_author_url>
    <wp:comment_author_IP>176.61.140.253</wp:comment_author_IP>
    <wp:comment_date>2013-09-23 09:55:00</wp:comment_date>
    <wp:comment_date_gmt>2013-09-23 07:55:00</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Many of them are simply a downright waste of time and embarrassment for the developers]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1379922901.0660240650177001953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360326.4351599216461181640625;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-09-23 07:55:00</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1298</wp:comment_id>
    <wp:comment_author><![CDATA[The Pirate Bay]]></wp:comment_author>
    <wp:comment_author_email>dannie.rountree@arcor.de</wp:comment_author_email>
    <wp:comment_author_url>http://tntclanbase.com/index.php?mod=users&amp;action=view&amp;id=55040</wp:comment_author_url>
    <wp:comment_author_IP>78.129.131.155</wp:comment_author_IP>
    <wp:comment_date>2014-10-01 18:36:46</wp:comment_date>
    <wp:comment_date_gmt>2014-10-01 16:36:46</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[The highlight of your visit would be to climb (now with all 
the help of your chain rail) inside the rock’s western flank, whose smooth surface has before claimed several lives.
Such companies get the job done of licensing music in a very systematic way.
You will be able to recognize this rogue antivirus program 
with the telltale pop-up ads and false warnings scans that may suddenly get involved with 
your everyday online experience.]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1412181407</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-10-01 16:36:48</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1412181407.4740390777587890625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1414360328.35834503173828125;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>perl and sed tips</title>
  <link>https://bmwieczorek.wordpress.com/2014/02/27/perl-and-sed-tips/</link>
  <pubDate>Thu, 27 Feb 2014 16:41:14 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1331</guid>
  <description/>
  <content:encoded><![CDATA[<code>egrep 'text1|text2' file
grep -E 'text1|text2' file
grep -e 'text1' -e 'text2' file
grep 'some text' some-data.log* | grep mypattern | sed 's/.*\(.*\).*\(myAttribute="[[:alnum:]]*"\).*/\1,\2/'</code>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1331</wp:post_id>
  <wp:post_date>2014-02-27 17:41:14</wp:post_date>
  <wp:post_date_gmt>2014-02-27 16:41:14</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>perl-and-sed-tips</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="bash"><![CDATA[bash]]></category>
  <category domain="category" nicename="grep"><![CDATA[grep]]></category>
  <category domain="category" nicename="sed"><![CDATA[sed]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Creating beans in Spring</title>
  <link>https://bmwieczorek.wordpress.com/2014/07/29/creating-beans-in-spring/</link>
  <pubDate>Tue, 29 Jul 2014 09:13:29 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1339</guid>
  <description/>
  <content:encoded><![CDATA[<strong>Factory method</strong> for:
&lt;bean id="myBean" class="org.mockito.Mockito" factory-method="mock"&gt;
&lt;constructor-arg value="com.bawi.MyBean" /&gt;
&lt;/bean&gt;
when in code we use static factory method:
<code>MyBean myBean = Mockito.mock(MyBean.class);
</code>

<strong>Factory bean</strong> for:
&lt;bean factory-bean="fileResourceReader" factory-method="read" &gt;
&lt;constructor-arg value="/template.rq" /&gt;
&lt;/bean&gt;
when in code we use factory method:
<code>
String fileContent = new FileResourceReader().read("/template.rq");
</code>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1339</wp:post_id>
  <wp:post_date>2014-07-29 11:13:29</wp:post_date>
  <wp:post_date_gmt>2014-07-29 09:13:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>creating-beans-in-spring</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Java iterator and ConcurrentModificationException</title>
  <link>https://bmwieczorek.wordpress.com/2014/07/30/java-iterator-and-concurrentmodificationexception/</link>
  <pubDate>Wed, 30 Jul 2014 12:02:16 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1344</guid>
  <description/>
  <content:encoded><![CDATA[What will produce the following code:
<code>
        List names = new ArrayList(Arrays.asList("1", "2,", "3"));
        Iterator iterator = names.iterator();
        System.out.println(iterator.next());
        iterator.remove();
        System.out.println(iterator.next());
        System.out.println(names);

        List names2 = new ArrayList(Arrays.asList("4", "5,", "6"));
        Iterator iterator2 = names2.iterator();
        System.out.println(iterator2.next());
        names2.remove(2);   
        System.out.println(iterator2.next());
        System.out.println(names2);
</code>

Output:
<code>
1
2,
[2,, 3]
4
Exception in thread "main" java.util.ConcurrentModificationException
	at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:372)
	at java.util.AbstractList$Itr.next(AbstractList.java:343)
	at com.sabre.ticketing.emd.mt.Accc.main(Accc.java:31)
</code>

Notes:
Once you access iterator you can only modify array state via that iterator by e.g. iterator.remove(). However, call to remove on a list reference (outside the iterator) increases modcount and subsequent call to iterator.next() will throw ConcurrentModificationException
<code>
ArrayList:
    public E remove(int index) {
	RangeCheck(index);
	modCount++; // note: modcount is increased vs expectedModCount 
        ...


AbstractList.Itr:

	public E next() {
            checkForComodification();
        ...

	final void checkForComodification() {
	    if (modCount != expectedModCount)
		throw new ConcurrentModificationException();
	}


	public void remove() {
	    if (lastRet == -1)
		throw new IllegalStateException();
            checkForComodification();

	    try {
		AbstractList.this.remove(lastRet);
		if (lastRet &lt; cursor)
		    cursor--;
		lastRet = -1;
		expectedModCount = modCount; // note: modcount is not increased vs expectedModCount 
	    } catch (IndexOutOfBoundsException e) {
		throw new ConcurrentModificationException();
	    }
	}


</code>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1344</wp:post_id>
  <wp:post_date>2014-07-30 14:02:16</wp:post_date>
  <wp:post_date_gmt>2014-07-30 12:02:16</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>java-iterator-and-concurrentmodificationexception</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[java-iterator-and]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>GIT</title>
  <link>https://bmwieczorek.wordpress.com/2014/08/12/git/</link>
  <pubDate>Tue, 12 Aug 2014 11:28:17 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/2014/08/12/git/</guid>
  <description/>
  <content:encoded><![CDATA[<pre><strong>git --version</strong>
 git version 1.7.9
<strong>git clone https://github.com/bmwieczorek/my-git.git</strong>
<strong>git config --global user.name "Bartosz Wieczorek"</strong>
<strong>git config --global user.email "... email ..."</strong>
<strong>cd my-git</strong>
<code><strong>git status
</strong></code><code>On branch master
</code><code>nothing to commit (working directory clean)
</code><code><strong>echo "xxx" &gt; x.txt
</strong></code><code><strong>git status
</strong></code><code>On branch master
Untracked files:
(use "git add ..." to include in what will be committed)
x.txt
 nothing added to commit but untracked files present (use "git add" to track)
</code><code><strong>git add x.txt
</strong></code><code><strong>git status
</strong>On branch master
Changes to be committed:
(use "git reset HEAD ..." to unstage)
new file: x.txt
</code><code><strong>git commit -m "added new x.txt file" x.txt
</strong> [master 96ec6d5] added new x.txt file
 1 files changed, 1 insertions(+), 0 deletions(-)
 create mode 100644 x.txt
</code><code><strong>git status
</strong>On branch master
Your branch is ahead of 'origin/master' by 1 commit.
nothing to commit (working directory clean)
</code><code><strong>echo "yyy" &gt; y.txt
</strong></code><code><strong>git status</strong>
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
Untracked files:
(use "git add ..." to include in what will be committed)
y.txt
 nothing added to commit but untracked files present (use "git add" to track)
</code><code><strong>git add y.txt
</strong><strong>git status</strong>
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
Changes to be committed:
(use "git reset HEAD ..." to unstage)
new file: y.txt
</code><strong><code>echo "111" &gt;&gt; y.txt
</code></strong></pre>
Working copy has now 2 lines: yyy and 111; stage area has 1 yyy line so git commit now would only add yyy but not 111; need to git add y.txt to include 111 change in the next commit
<pre><strong>git status</strong>
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
Changes to be committed:
(use "git reset HEAD ..." to unstage)
new file: y.txt
Changes not staged for commit:
(use "git add ..." to update what will be committed)
(use "git checkout -- ..." to discard changes in working directory)
modified: y.txt
<strong>git diff y.txt #current working vs stage area (last git add)</strong>
diff --git a/y.txt b/y.txt
index 0b20aea..ff129db 100644
--- a/y.txt
+++ b/y.txt
@@ -1 +1,2 @@
yyy
+111
<strong>git diff --staged y.txt # repository code vs stage area (last git add), change to commit</strong>
diff --git a/y.txt b/y.txt
new file mode 100644
index 0000000..0b20aea
--- /dev/null
+++ b/y.txt
@@ -0,0 +1 @@
+yyy

</pre>
changing commit message
<pre>
<code><strong>git commit -m "z with 111" z.txt</strong>
 [master 4594649] z with 111
 1 files changed, 1 insertions(+), 0 deletions(-)
 create mode 100644 z.txt
</code><strong>git log</strong>
 commit 47c6adcda9ab8757b6b45a2ef0938cf5931f4a22
 Author: Bartosz Wieczorek
 Date: Wed Aug 13 13:17:45 2014 +0200
z with 111
<strong>git commit --amend -m "updated message: z.txt with 111 from command line"</strong>
 [master fccdba3] updated message: z.txt with 111 from command line
 2 files changed, 2 insertions(+), 0 deletions(-)
 create mode 100644 y.txt
 create mode 100644 z.txt
<strong>git log</strong>
 commit be3af78ba1db23a58c580aea7bba296fc7a4d490
 Author: Bartosz Wieczorek
 Date: Wed Aug 13 13:17:45 2014 +0200
updated message: z.txt with 111 from command line

</pre>
Reverting local changes (lost forever)
<pre><code><strong>cat a.txt</strong>
 a
 b
</code><strong>echo "c" &gt;&gt; a.txt
</strong><strong>cat a.txt
</strong> a
 b
 c
<strong>git checkout -- a.txt
</strong><strong>cat a.txt</strong>
 a
 b</pre>
Git stash
<pre><strong>echo "aaa" &gt; aaa.txt</strong><strong>
echo "bbb" &gt;bbb.txt</strong><strong>
git add aaa.txt
</strong><strong>git status</strong>
On branch master
Changes to be committed:
(use "git reset HEAD ..." to unstage)
new file: aaa.txt
Untracked files:
(use "git add ..." to include in what will be committed)
bbb.txt
<strong>echo "ccc" &gt; ccc.txt
</strong><strong>git add ccc.txt
</strong><strong>git status</strong>
On branch master
Changes to be committed:
(use "git reset HEAD ..." to unstage)
new file: aaa.txt
new file: ccc.txt
Untracked files:
(use "git add ..." to include in what will be committed)
bbb.txt
<strong>git commit -m "added aaa.txt" aaa.txt</strong>
 [master feaf44a] added aaa.txt
 1 files changed, 1 insertions(+), 0 deletions(-)
 create mode 100644 aaa.txt
<strong>git status</strong>
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
Changes to be committed:
(use "git reset HEAD ..." to unstage)
new file: ccc.txt
Untracked files:
(use "git add ..." to include in what will be committed)
bbb.txt
<strong>echo "123" &gt;&gt; aaa.txt
</strong><strong>git status</strong>
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
Changes to be committed:
(use "git reset HEAD ..." to unstage)
new file: ccc.txt
Changes not staged for commit:
(use "git add ..." to update what will be committed)
(use "git checkout -- ..." to discard changes in working directory)
modified: aaa.txt
Untracked files:
(use "git add ..." to include in what will be committed)
bbb.txt
<strong>git stash</strong>
 Saved working directory and index state WIP on master: feaf44a added aaa.txt
 HEAD is now at feaf44a added aaa.txt
<strong>git status</strong>
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
Untracked files:
(use "git add ..." to include in what will be committed)
bbb.txt
 nothing added to commit but untracked files present (use "git add" to track)
<strong>rm bbb.txt
</strong><strong>git status</strong>
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
nothing to commit (working directory clean)
<strong>git stash list</strong>
 stash@{0}: WIP on master: feaf44a added aaa.txt
<strong>git status</strong>
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
nothing to commit (working directory clean)
<strong>git stash apply</strong>
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
Changes to be committed:
(use "git reset HEAD ..." to unstage)
new file: ccc.txt
Changes not staged for commit:
(use "git add ..." to update what will be committed)
(use "git checkout -- ..." to discard changes in working directory)
modified: aaa.txt
<strong>git status</strong>
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
Changes to be committed:
(use "git reset HEAD ..." to unstage)
new file: ccc.txt
Changes not staged for commit:
(use "git add ..." to update what will be committed)
(use "git checkout -- ..." to discard changes in working directory)
modified: aaa.txt</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1347</wp:post_id>
  <wp:post_date>2014-08-12 13:28:17</wp:post_date>
  <wp:post_date_gmt>2014-08-12 11:28:17</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>git</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="git"><![CDATA[git]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[19660335800]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>CountDownLatch test</title>
  <link>https://bmwieczorek.wordpress.com/2014/08/21/countdownlatch-test/</link>
  <pubDate>Thu, 21 Aug 2014 09:36:58 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1355</guid>
  <description/>
  <content:encoded><![CDATA[[sourcecode language="java"]
package countdownlatch;

import java.util.concurrent.CountDownLatch;

import junit.framework.Assert;

import org.junit.Test;

public class CountDownLatchTest {
    
    State state = new State();

    class State {
        public int i;
    }

    class Worker implements Runnable {

        private final State state;

        public Worker(State state) {
            this.state = state;
        }

        @Override
        public void run() {
            state.i++;

        }

    }

    class CountDownLatchWorker extends Worker {
        private final CountDownLatch done;

        public CountDownLatchWorker(State state, CountDownLatch done) {
            super(state);
            this.done = done;
        }

        @Override
        public void run() {
            super.run();
            done.countDown();
        }
    }

    class CountDownLatchWorker2 extends Worker {
        private final CountDownLatch start;
        private final CountDownLatch done;

        public CountDownLatchWorker2(State state, CountDownLatch start, CountDownLatch done) {
            super(state);
            this.start = start;
            this.done = done;
        }

        @Override
        public void run() {
            try {
                start.await();
                super.run();
                done.countDown();
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }

    @Test
    public void testWithoutSynchronization() {
        new Thread(new Worker(state)).start();
        new Thread(new Worker(state)).start();
        Assert.assertEquals(2, state.i); // fails most of time
    }
    
    @Test
    public void testWithDelay() throws InterruptedException {
        new Thread(new Worker(state)).start();
        new Thread(new Worker(state)).start();
        Thread.sleep(1000);
        Assert.assertEquals(2, state.i);
    }

    @Test
    public void testWaitUntilWorkersDone() throws InterruptedException {
        CountDownLatch done = new CountDownLatch(2); // wait for two workers to complete
        new Thread(new CountDownLatchWorker(state, done)).start();
        new Thread(new CountDownLatchWorker(state, done)).start();
        done.await();
        Assert.assertEquals(2, state.i);
    }
    
    @Test
    public void testUnsyncSetupButWaitUntilWorkersDone() throws InterruptedException {
        CountDownLatch done = new CountDownLatch(2); 
        new Thread(new CountDownLatchWorker(state, done)).start();
        new Thread(new CountDownLatchWorker(state, done)).start();
        state.i = 10;
        done.await();
        Assert.assertEquals(12, state.i); // fails most of time
    }

    @Test
    public void testSetupBeforeWorkersStartAndWaitUntilWorkersDone() throws InterruptedException {
        CountDownLatch start = new CountDownLatch(1); // wait for (one) main workers to complete setup
        CountDownLatch done = new CountDownLatch(2);
        new Thread(new CountDownLatchWorker2(state, start, done)).start();
        new Thread(new CountDownLatchWorker2(state, start, done)).start();
        state.i = 10;
        start.countDown();
        done.await();
        Assert.assertEquals(12, state.i);
    }

}
[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1355</wp:post_id>
  <wp:post_date>2014-08-21 11:36:58</wp:post_date>
  <wp:post_date_gmt>2014-08-21 09:36:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>countdownlatch-test</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="concurrency"><![CDATA[Concurrency]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>My simple camel route</title>
  <link>https://bmwieczorek.wordpress.com/2014/10/09/my-simple-camel-route/</link>
  <pubDate>Thu, 09 Oct 2014 12:47:52 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1360</guid>
  <description/>
  <content:encoded><![CDATA[[sourcecode language="java"]
public class MyCamel {
    
    private static final Logger LOGGER = LoggerFactory.getLogger(MyCamel.class); 
    
    public static void main(String[] args) throws Exception {
        
        CamelContext context = new DefaultCamelContext();
        context.addRoutes(new RouteBuilder() {
            @Override
            public void configure() throws Exception {
                from(&quot;file:inbox&quot;).routeId(&quot;myRoute&quot;)
                    .process(new Processor() {
                        
                        @Override
                        public void process(Exchange exchange) throws Exception {
                            LOGGER.info(&quot;Received in body {}&quot;, exchange.getIn().getBody());
                        }
                    });
            }

        });
        context.start();
        Thread.sleep(5000); // Work for 5 secs and stops the route
    }

}
[/sourcecode]
<pre>
2014-10-09 14:50:54,836 | INFO  | main                                     | DefaultCamelContext                      | Apache Camel 2.10.4 (CamelContext: camel-1) is starting
2014-10-09 14:50:54,901 | INFO  | main                                     | ManagementStrategyFactory                | JMX enabled.
2014-10-09 14:50:55,042 | INFO  | main                                     | DefaultTypeConverter                     | Loaded 172 type converters
2014-10-09 14:50:55,249 | INFO  | main                                     | DefaultCamelContext                      | Route: myRoute started and consuming from: Endpoint[file://inbox]
2014-10-09 14:50:55,249 | INFO  | main                                     | DefaultManagementLifecycleStrategy       | StatisticsLevel at All so enabling load performance statistics
2014-10-09 14:50:55,255 | INFO  | main                                     | DefaultCamelContext                      | Total 1 routes, of which 1 is started.
2014-10-09 14:50:55,260 | INFO  | main                                     | DefaultCamelContext                      | Apache Camel 2.10.4 (CamelContext: camel-1) started in 0.421 seconds
2014-10-09 14:50:56,251 | INFO  | Camel (camel-1) thread #0 - file://inbox | MyCamel                                  | Received in body GenericFile[pom.xml]
</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1360</wp:post_id>
  <wp:post_date>2014-10-09 14:47:52</wp:post_date>
  <wp:post_date_gmt>2014-10-09 12:47:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>my-simple-camel-route</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Java regex match single line</title>
  <link>https://bmwieczorek.wordpress.com/2014/11/12/java-regex-match-single-line/</link>
  <pubDate>Wed, 12 Nov 2014 16:51:32 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1365</guid>
  <description/>
  <content:encoded><![CDATA[[code language="java"]
public class TestJavaRegexMatchingSingleLine {

    private static final String WINDOWS_LINES = &quot;first line\r\nsecond line \r\n third line&quot;;
    private static final String UNIX_LINES = &quot;first line\rsecond line \r third line&quot;;

    @Test
    public void shouldNotFindMatching() throws Exception {
        assertFalse(Pattern.compile(&quot;^.*$&quot;).matcher(UNIX_LINES).find()); // dot '.' by default does not match \r not \r\n; anchors ^ and $ indicate begin and end of input string
        assertFalse(Pattern.compile(&quot;^.*$&quot;).matcher(WINDOWS_LINES).find());
    }

    @Test
    public void shouldFindWindowsLines() throws Exception {
        shouldFindLinesUsingMultiLineMode(WINDOWS_LINES);
    }

    @Test
    public void shouldFindUnixLines() throws Exception {
        shouldFindLinesUsingMultiLineMode(UNIX_LINES);
    }

    private void shouldFindLinesUsingMultiLineMode(String multiLineText) {
        Matcher m = Pattern.compile(&quot;(?m)^.*$&quot;).matcher(multiLineText); // (?m) MULTI-LINE mode - when explicitly enabled - makes anchors ^ and $ indicate begin and end of line
        List&lt;String&gt; lines = new ArrayList&lt;String&gt;();
        while (m.find()) {
            lines.add(m.group());
            System.out.println(&quot;line = '&quot; + m.group() + &quot;'&quot;);
        }
        assertEquals(3, lines.size());
        assertEquals(&quot;first line&quot;, lines.get(0));
        assertEquals(&quot;second line &quot;, lines.get(1));
        assertEquals(&quot; third line&quot;, lines.get(2));
    }
}
[/code]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1365</wp:post_id>
  <wp:post_date>2014-11-12 17:51:32</wp:post_date>
  <wp:post_date_gmt>2014-11-12 16:51:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>java-regex-match-single-line</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="category" nicename="regex"><![CDATA[regex]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>LinkedHashMap vs HashMap</title>
  <link>https://bmwieczorek.wordpress.com/2014/12/03/linkedhashmap-vs-hashmap/</link>
  <pubDate>Wed, 03 Dec 2014 11:08:37 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1367</guid>
  <description/>
  <content:encoded><![CDATA[[code language="java"]
public class MyLinkedHashMap {
    
    public static void main(String[] args) {
        createMap(new LinkedHashMap&lt;String, String&gt;());
        System.out.println(&quot;*****&quot;);
        createMap(new HashMap&lt;String, String&gt;());
    }

    private static void createMap(Map&lt;String, String&gt; map) {
        map.put(&quot;1A&quot;, &quot;1A_LOC&quot;);
        map.put(&quot;EY&quot;, &quot;1E_LOC&quot;);
        System.out.println(map.values());
        System.out.println(map.entrySet());
        System.out.println(map.keySet());
    }

}
[/code]

output:
[1A_LOC, 1E_LOC]
[1A=1A_LOC, EY=1E_LOC]
[1A, EY]
*****
[1E_LOC, 1A_LOC]
[EY=1E_LOC, 1A=1A_LOC]
[EY, 1A]

Note: HashMap did not preserve insertion order as 1A was inserted before EY. LinkedHashMap keep the order.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1367</wp:post_id>
  <wp:post_date>2014-12-03 12:08:37</wp:post_date>
  <wp:post_date_gmt>2014-12-03 11:08:37</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>linkedhashmap-vs-hashmap</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>grepping logs for dates summary</title>
  <link>https://bmwieczorek.wordpress.com/2014/12/06/grepping-logs-for-dates-summary/</link>
  <pubDate>Sat, 06 Dec 2014 09:19:09 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">http://bmwieczorek.wordpress.com/?p=1372</guid>
  <description/>
  <content:encoded><![CDATA[cat my.log* | grep -a -E -o '^[0-9]{4}-[0-9]{2}-[0-9]{2}' | uniq  | sort
2014-11-24
2014-11-25
2014-11-26
2014-11-27]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1372</wp:post_id>
  <wp:post_date>2014-12-06 10:19:09</wp:post_date>
  <wp:post_date_gmt>2014-12-06 09:19:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>grepping-logs-for-dates-summary</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="bash"><![CDATA[bash]]></category>
  <category domain="category" nicename="grep"><![CDATA[grep]]></category>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>SVN changing file permissions</title>
  <link>https://bmwieczorek.wordpress.com/2015/01/27/svn-changing-file-permissions/</link>
  <pubDate>Tue, 27 Jan 2015 13:14:30 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1374</guid>
  <description/>
  <content:encoded><![CDATA[example for changing file permission for *.sh file with svn del and svn add:

commitMessage="some text"; mkdir tmp &amp;&amp; cp *.sh tmp &amp;&amp; svn del *.sh &amp;&amp; svn ci -m "$commitMessage" &amp;&amp; mv tmp/*.sh . &amp;&amp; chmod 755 *.sh &amp;&amp; svn add *.sh &amp;&amp; svn ci -m "$commitMessage" &amp;&amp; rmdir tmp]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1374</wp:post_id>
  <wp:post_date>2015-01-27 14:14:30</wp:post_date>
  <wp:post_date_gmt>2015-01-27 13:14:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>svn-changing-file-permissions</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="bash"><![CDATA[bash]]></category>
  <category domain="category" nicename="svn"><![CDATA[svn]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>list files in tar gz and extract specific file from the archive</title>
  <link>https://bmwieczorek.wordpress.com/2015/02/16/list-files-in-tar-gz-and-extract-specific-file-from-the-archive/</link>
  <pubDate>Mon, 16 Feb 2015 13:06:12 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1376</guid>
  <description/>
  <content:encoded><![CDATA[me@box /archive/logs/2015/Feb
$tar -tf box-log-2015-02-03.tar.gz
box/logs/
box/logs/ws/
box/logs/ws/misc-error.log
box/logs/ws/misc.log
...


tar -zxvf /archive/logs/2015/Feb/box-log-2015-02-03.tar.gz box/logs/ws/misc.log
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1376</wp:post_id>
  <wp:post_date>2015-02-16 14:06:12</wp:post_date>
  <wp:post_date_gmt>2015-02-16 13:06:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>list-files-in-tar-gz-and-extract-specific-file-from-the-archive</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="bash"><![CDATA[bash]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>testing https</title>
  <link>https://bmwieczorek.wordpress.com/2015/02/17/testing-https/</link>
  <pubDate>Tue, 17 Feb 2015 16:38:50 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1378</guid>
  <description/>
  <content:encoded><![CDATA[openssl s_client -connect bawi.com:443

]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1378</wp:post_id>
  <wp:post_date>2015-02-17 17:38:50</wp:post_date>
  <wp:post_date_gmt>2015-02-17 16:38:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>testing-https</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_linkedin</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>bash ssh autocompletion</title>
  <link>https://bmwieczorek.wordpress.com/2015/03/24/bash-ssh-autocompletion/</link>
  <pubDate>Tue, 24 Mar 2015 18:55:32 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1380</guid>
  <description/>
  <content:encoded><![CDATA[1. unix box:

modify:
# add to ~/.bash_profile, and close/reopen a shell. Will autocomplete any hosts found in $HOME/.ssh/known_hosts
complete -W "$(echo `cat ~/.ssh/known_hosts | cut -f 1 -d ' ' | sed -e s/,.*//g | uniq | grep -v "\["`;)" ssh

result:
sg212148@fsehlp03 ~
$ssh tkthl
tkthlc600 tkthlc601 ...

2. cygwin
$ cat .ssh/config
Host int
hostname tkthli700
user sg212148

Host fsehlp*
user sg212148

~/.bashrc:
<pre><code>
###############
# My Settings #
###############

# cygwin startup directory
CYGWINDIR=c:/dev/
[[ ! -z `echo $CYGWINDIR | grep -v " "` ]] &amp;&amp; cd $CYGWINDIR

# ssh and scp autocompletion
_complete_ssh_hosts ()
{
        COMPREPLY=()
        cur="${COMP_WORDS[COMP_CWORD]}"
        comp_ssh_hosts=`cat ~/.ssh/known_hosts | \
                        cut -f 1 -d ' ' | \
                        sed -e s/,.*//g | \
                        grep -v ^# | \
                        uniq | \
                        grep -v "\[" ;
                cat ~/.ssh/config | \
                        grep "^Host " | \
                        awk '{print $2}'
                `
        COMPREPLY=( $(compgen -W "${comp_ssh_hosts}" -- $cur))
        return 0
}
complete -F _complete_ssh_hosts ssh
complete -F _complete_ssh_hosts scp


export MAVEN_OPTS=" -Xms1024m -Xmx2048m -XX:MaxPermSize=1024m"
export JAVA_HOME=/cygdrive/c/dev/env/jdk1.7.0_76
export JAVA_HOME=/cygdrive/c/dev/env/jdk1.8.0_31
export M2_HOME=/cygdrive/c/dev/env/apache-maven-3.2.5
export PATH=$JAVA_HOME/bin:$M2_HOME/bin:$PATH

alias psjava='ps -W | grep java'
alias psssh='ps -W | grep ssh'
alias killjava='ps -W | grep java$ | cut -c-9 | xargs /bin/kill -f'
alias killssh='ps -W | grep ssh$ | cut -c-9 | xargs /bin/kill -f'
alias java7='JAVA_HOME="/cygdrive/c/dev/env/jdk1.7.0_76" &amp;&amp; PATH=$JAVA_HOME/bin:$PATH'
alias java8='JAVA_HOME="/cygdrive/c/dev/env/jdk1.8.0_31" &amp;&amp; PATH=$JAVA_HOME/bin:$PATH'

alias cddev="cd '/cygdrive/c/dev'"
alias cddesktop='cd /cygdrive/c/Users/me/Desktop'
alias cdrepo="cd /cygdrive/c/Users/me/.m2/repository"

</code></pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1380</wp:post_id>
  <wp:post_date>2015-03-24 19:55:32</wp:post_date>
  <wp:post_date_gmt>2015-03-24 18:55:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>bash-ssh-autocompletion</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="bash"><![CDATA[bash]]></category>
  <category domain="category" nicename="cygwin"><![CDATA[cygwin]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[7428936079]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Java 7 and 8 - different HashSet order</title>
  <link>https://bmwieczorek.wordpress.com/2015/03/27/java-7-and-8-different-hashset-order/</link>
  <pubDate>Fri, 27 Mar 2015 16:13:11 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1389</guid>
  <description/>
  <content:encoded><![CDATA[[code lang="java"]

package collections;

import java.util.HashSet;
import java.util.Set;

import org.junit.Test;

public class HashSetOrderTest {
    private static class Holder {
        private Integer value;
        public Holder(Integer value) {
            this.value = value;
        }
        public Integer getValue() {
            return value;
        }
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = 1;
            result = prime * result + ((value == null) ? 0 : value.hashCode());
            return result;
        }
        @Override
        public boolean equals(Object obj) {
            if (this == obj)
                return true;
            if (obj == null)
                return false;
            if (getClass() != obj.getClass())
                return false;
            Holder other = (Holder) obj;
            if (value == null) {
                if (other.value != null)
                    return false;
            } else if (!value.equals(other.value))
                return false;
            return true;
        }
        
    }

    @Test
    public void testJava() throws Exception {
        Set&lt;Holder&gt; valuesSet = new HashSet&lt;Holder&gt;();
        valuesSet.add(new Holder(1));
        valuesSet.add(new Holder(2));
        valuesSet.add(new Holder(3));
        valuesSet.add(new Holder(4));
        StringBuilder builder = new StringBuilder();
        for (Holder holder : valuesSet) {
            builder.append(holder.getValue());
        }
        System.out.println(builder.toString());
    }
}

[/code]

<pre>
mvn clean test (java 7)
Running collections.HashSetOrderTest
3412

mvn clean test (java 8)
Running collections.HashSetOrderTest
1234
</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1389</wp:post_id>
  <wp:post_date>2015-03-27 17:13:11</wp:post_date>
  <wp:post_date_gmt>2015-03-27 16:13:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>java-7-and-8-different-hashset-order</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Java 7 and 8 - different XmlGregorianCalendar</title>
  <link>https://bmwieczorek.wordpress.com/2015/03/27/java-7-and-8-different-xmlgregoriancallendar/</link>
  <pubDate>Fri, 27 Mar 2015 16:32:59 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1392</guid>
  <description/>
  <content:encoded><![CDATA[[code lang="java"]

package calendar;

import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.TimeZone;

import javax.xml.datatype.DatatypeConfigurationException;
import javax.xml.datatype.DatatypeConstants;
import javax.xml.datatype.DatatypeFactory;
import javax.xml.datatype.XMLGregorianCalendar;

import org.junit.Test;

public class CalendarTest {

    @Test
    public void shouldCreateXmlGregorianCalendar() throws DatatypeConfigurationException {

        // given
        System.setProperty(&amp;quot;user.timezone&amp;quot;, &amp;quot;America/Chicago&amp;quot;);
        Calendar cal = Calendar.getInstance();
        cal.set(2013, 10, 28, 12, 1, 0);
        cal.set(Calendar.MILLISECOND, 100);
        cal.setTimeZone(TimeZone.getTimeZone(&amp;quot;CDT&amp;quot;));

        // when
        GregorianCalendar calendar = (GregorianCalendar) GregorianCalendar.getInstance();
        calendar.setTime(cal.getTime());
        XMLGregorianCalendar xmlCal = DatatypeFactory.newInstance().newXMLGregorianCalendar(calendar);
        xmlCal.setTimezone(DatatypeConstants.FIELD_UNDEFINED);
        xmlCal.setMillisecond(DatatypeConstants.FIELD_UNDEFINED);

        // then
        System.out.println(xmlCal.toXMLFormat());
    }
}

[/code]

<pre>
Java 8
2013-11-28T13:01:00

Java7
2013-11-28T06:01:00
</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1392</wp:post_id>
  <wp:post_date>2015-03-27 17:32:59</wp:post_date>
  <wp:post_date_gmt>2015-03-27 16:32:59</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>java-7-and-8-different-xmlgregoriancallendar</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Leasons learned</title>
  <link>https://bmwieczorek.wordpress.com/2015/03/30/leasons-learned/</link>
  <pubDate>Mon, 30 Mar 2015 10:24:18 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1396</guid>
  <description/>
  <content:encoded><![CDATA[Kanban - limit WIP (work in progress) to max 3 taks, since context swithing will downgrade performance
prioritize to 3 most important things

BadMultitasking.info

Bad: do not help or do not ask for help

]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1396</wp:post_id>
  <wp:post_date>2015-03-30 12:24:18</wp:post_date>
  <wp:post_date_gmt>2015-03-30 10:24:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>leasons-learned</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>gitignore .gitignore</title>
  <link>https://bmwieczorek.wordpress.com/2015/04/06/gitignore-gitignore/</link>
  <pubDate>Mon, 06 Apr 2015 13:26:29 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1398</guid>
  <description/>
  <content:encoded><![CDATA[<pre>
.classpath
.project
target/
bin/
.settings/
.idea/
*.iml
</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1398</wp:post_id>
  <wp:post_date>2015-04-06 15:26:29</wp:post_date>
  <wp:post_date_gmt>2015-04-06 13:26:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>gitignore-gitignore</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="git"><![CDATA[git]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Java Date SimpleDateFormat Locale</title>
  <link>https://bmwieczorek.wordpress.com/2015/04/17/java-date-simpledateformat-locale/</link>
  <pubDate>Fri, 17 Apr 2015 10:23:01 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1400</guid>
  <description/>
  <content:encoded><![CDATA[[code language="java"]
        Date date = new Date();
        System.out.println(date);
        System.out.println(new SimpleDateFormat().format(date));
        System.out.println(new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss,SSS&quot;).format(date));
        System.out.println(new SimpleDateFormat(&quot;yyyy-MM-dd'T'HH:mm:ss.SSSXXX&quot;).format(date));
        System.out.println(new SimpleDateFormat(&quot;EEEEEE, d MMMMM yyyy HH:mm:ss Z&quot;, Locale.US).format(date));
        System.out.println(new SimpleDateFormat(&quot;EEEEEE, d MMMMM yyyy HH:mm:ss Z&quot;, new Locale(&quot;pl&quot;, &quot;PL&quot;)).format(date));
[/code]

Result:
<pre>
Fri Apr 17 12:22:53 CEST 2015
4/17/15 12:22 PM
2015-04-17 12:22:53,359
2015-04-17T12:22:53.359+02:00
Friday, 17 April 2015 12:22:53 +0200
piątek, 17 kwiecień 2015 12:22:53 +0200
</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1400</wp:post_id>
  <wp:post_date>2015-04-17 12:23:01</wp:post_date>
  <wp:post_date_gmt>2015-04-17 10:23:01</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>java-date-simpledateformat-locale</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>ssh port forwarding</title>
  <link>https://bmwieczorek.wordpress.com/2015/05/21/ssh-port-forwarding/</link>
  <pubDate>Thu, 21 May 2015 09:40:16 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1402</guid>
  <description/>
  <content:encoded><![CDATA[<strong>Problem:</strong>

You are on box A and you want to connect to box C (to some port),but there is not direct connectivity from box A to box C on to a particular port: e.g.

A $ telnet C_IP_OR_NAME C_PORT ( does not work)

However, there is a box B which has connectivity to box C to that port

B $ telnet C_IP_OR_NAME C_PORT ( does work)

<strong>Solution</strong>:

Assuming you have ssh connectivity from box A to box B, then start port forwarding on box A to be routed to box C via box B:

ssh -f B_USER@B_IP_OR_NAME -L A_PORT:C_IP_OR_NAME:C_PORT -N

that will make every call to the A_PORT on box A to be routed to box C port (C_PORT) via box B]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1402</wp:post_id>
  <wp:post_date>2015-05-21 11:40:16</wp:post_date>
  <wp:post_date_gmt>2015-05-21 09:40:16</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ssh-port-forwarding</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="bash"><![CDATA[bash]]></category>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <category domain="post_tag" nicename="linux-2"><![CDATA[linux]]></category>
  <category domain="post_tag" nicename="port-forwarding"><![CDATA[port forwarding]]></category>
  <category domain="post_tag" nicename="ssh"><![CDATA[ssh]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[10845216081]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Java 8 join lists</title>
  <link>https://bmwieczorek.wordpress.com/2015/06/17/1404/</link>
  <pubDate>Wed, 17 Jun 2015 13:40:32 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1404</guid>
  <description/>
  <content:encoded><![CDATA[
[code language="java"]

public class CollectionsJoinWithJava8 {

    @Test
    public void shouldJoinLists() {
        List&lt;Integer&gt; result = Arrays.asList(1,2,3)
            .parallelStream()
            .flatMap(count -&gt; find(count).stream())
            .collect(Collectors.toList());

        assertEquals(Arrays.asList(0, 0, 1, 0, 1, 2), result);
    }

    @Test
    public void shouldJoinLists2() {
        List&lt;Integer&gt; result = new ArrayList&lt;Integer&gt;();
        for (Integer count : Arrays.asList(1,2,3)) {
            List&lt;Integer&gt; find = find(count);
            result.addAll(find);
        }

        assertEquals(Arrays.asList(0, 0, 1, 0, 1, 2), result);
    }

    private List&lt;Integer&gt; find(int i) {
        List&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();
        for (int j = 0; j &lt; i; j++) {
            list.add(j);
        }
        return list;
    }

}

[/code]
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1404</wp:post_id>
  <wp:post_date>2015-06-17 15:40:32</wp:post_date>
  <wp:post_date_gmt>2015-06-17 13:40:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>1404</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[11761886853]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Java substring (basics)</title>
  <link>https://bmwieczorek.wordpress.com/2015/06/20/java-substring-basics/</link>
  <pubDate>Sat, 20 Jun 2015 11:24:25 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1407</guid>
  <description/>
  <content:encoded><![CDATA[[code language="java"]
    public static void main(String[] args) {

        //substring(beginIndex)
        //substring(beginIndexIncluding,endIndexExcluding);

        String s = &quot;0123456789&quot;;
        System.out.println(&quot;'&quot; + s.substring(0) + &quot;'&quot;);
        System.out.println(&quot;'&quot; + s.substring(1) + &quot;'&quot;);
        System.out.println(&quot;'&quot; + s.substring(10) + &quot;'&quot;);
        System.out.println(&quot;'&quot; + s.substring(0, 0) + &quot;'&quot;);
        System.out.println(&quot;'&quot; + s.substring(0, 1) + &quot;'&quot;);
        System.out.println(&quot;'&quot; + s.substring(0, 10) + &quot;'&quot;);
    }

Output:
'0123456789'
'123456789'
''
''
'0'
'0123456789'

[/code]


]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1407</wp:post_id>
  <wp:post_date>2015-06-20 13:24:25</wp:post_date>
  <wp:post_date_gmt>2015-06-20 11:24:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>java-substring-basics</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="post_tag" nicename="substring"><![CDATA[substring]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[11858232796]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Thread in waiting state example and jvisualvm analysis</title>
  <link>https://bmwieczorek.wordpress.com/2015/06/24/thread-in-waiting-state-example-and-jvisualvm-analysis/</link>
  <pubDate>Wed, 24 Jun 2015 21:12:01 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1411</guid>
  <description/>
  <content:encoded><![CDATA[
[code language="java"]
public class ThreadWaitingTest {

	static Object monitor = new Object();
	
	public static void main(String[] args) throws InterruptedException {
		
		System.out.println(Thread.currentThread().getName() + &quot; started&quot;);
		
		new Thread(new Runnable() {
			@Override
			public void run() {
				System.out.println(Thread.currentThread().getName() + &quot; started&quot;);
				sleep(10000000);
				synchronized(monitor) {
					System.out.println(Thread.currentThread().getName() + &quot; in sync section before notify&quot;);
					monitor.notify();
					System.out.println(Thread.currentThread().getName() + &quot; in sync section before after&quot;);
				}
				System.out.println(Thread.currentThread().getName() + &quot; stopped&quot;);
			}
		}).start();
	
		synchronized(monitor) {
			System.out.println(Thread.currentThread().getName() + &quot; in sync section before wait&quot;);
			monitor.wait();
			System.out.println(Thread.currentThread().getName() + &quot; in sync section after wait&quot;);
		}
		
		System.out.println(Thread.currentThread().getName() + &quot; stopped&quot;);
	}

	
	private static void sleep(int i) {
		try {
			Thread.sleep(i);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}

Output:
main started
main in sync section before wait
Thread-0 started

[/code]

<a href="https://bmwieczorek.files.wordpress.com/2015/06/threadwaitingtest.png"><img src="https://bmwieczorek.files.wordpress.com/2015/06/threadwaitingtest.png?w=104" alt="ThreadWaitingTest" width="104" height="300" class="alignnone size-medium wp-image-1412" /></a>
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1411</wp:post_id>
  <wp:post_date>2015-06-24 23:12:01</wp:post_date>
  <wp:post_date_gmt>2015-06-24 21:12:01</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>thread-in-waiting-state-example-and-jvisualvm-analysis</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="threads"><![CDATA[threads]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[12002272491]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Thread in sleeping (TIMED-WAITING) state example and jvisualvm analysis</title>
  <link>https://bmwieczorek.wordpress.com/2015/06/25/thread-in-sleeping-timed-waiting-state-example-and-jvisualvm-analysis/</link>
  <pubDate>Thu, 25 Jun 2015 07:34:39 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1414</guid>
  <description/>
  <content:encoded><![CDATA[[code language="java"]
public class ThreadSleepTest {

	public static void main(String[] args) throws InterruptedException {
		System.out.println(Thread.currentThread().getName() + &quot; started&quot;);
		Thread.sleep(1000000);
		System.out.println(Thread.currentThread().getName() + &quot; stopped&quot;);
	}
}
Output:
main started
[/code]
<a href="https://bmwieczorek.files.wordpress.com/2015/06/threadsleeptest.png"><img src="https://bmwieczorek.files.wordpress.com/2015/06/threadsleeptest.png?w=104" alt="ThreadSleepTest" width="104" height="300" class="alignnone size-medium wp-image-1415" /></a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1414</wp:post_id>
  <wp:post_date>2015-06-25 09:34:39</wp:post_date>
  <wp:post_date_gmt>2015-06-25 07:34:39</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>thread-in-sleeping-timed-waiting-state-example-and-jvisualvm-analysis</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="threads"><![CDATA[threads]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[12015942288]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Thread in monitor (BLOCKED) state due to deadlock example and jvisualvm analysis</title>
  <link>https://bmwieczorek.wordpress.com/2015/06/25/thread-in-monitor-blocked-state-example-and-jvisualvm-analysis/</link>
  <pubDate>Thu, 25 Jun 2015 07:44:13 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1417</guid>
  <description/>
  <content:encoded><![CDATA[[code language="java"]
public class ThreadBlockedTest {

	static class Thread0 extends Thread {
		static synchronized void synchR() {
			System.out.println(Thread.currentThread().getName() + &quot; entered sync r&quot;);
			ThreadBlockedTest.sleep(50);
			ThreadBlockedTest.synchM();
			System.out.println(Thread.currentThread().getName() + &quot; left sync r&quot;);
		}

		@Override
		public void run() {
			System.out.println(Thread.currentThread().getName() + &quot; started&quot;);
			synchR();
			System.out.println(Thread.currentThread().getName() + &quot; stopped&quot;);
		}
	}; 
	
	public static void main(String[] args) throws InterruptedException {
		System.out.println(Thread.currentThread().getName() + &quot; started&quot;);
		new Thread0().start();
		synchM();
		System.out.println(Thread.currentThread().getName() + &quot; stopped&quot;);
	}
	
	static synchronized void synchM() {
		System.out.println(Thread.currentThread().getName() + &quot; entered sync m&quot;);
		sleep(10);
		Thread0.synchR();
		System.out.println(Thread.currentThread().getName() + &quot; left sync m&quot;);
	}

	private static void sleep(int i) {
		try {
			Thread.sleep(i);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
}

Output:
main started
main entered sync m
Thread-0 started
Thread-0 entered sync r

Explanation:
two threads, both entering separate synchronized method holding a separate lock. After some time one thread while being in synchronized block tries to access another synchronized method associated to the different lock that is being already taken by another thread. While waiting for the lock, the another thread finishes sleeping and wants to access the other synchronized block without releasing the lock it has been owning. 
[/code]
	<a href="https://bmwieczorek.files.wordpress.com/2015/06/threadblockedtest.png"><img src="https://bmwieczorek.files.wordpress.com/2015/06/threadblockedtest.png?w=80" alt="ThreadBlockedTest" width="80" height="300" class="alignnone size-medium wp-image-1418" /></a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1417</wp:post_id>
  <wp:post_date>2015-06-25 09:44:13</wp:post_date>
  <wp:post_date_gmt>2015-06-25 07:44:13</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>thread-in-monitor-blocked-state-example-and-jvisualvm-analysis</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="threads"><![CDATA[threads]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[12016158922]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Thread in monitor (BLOCKED) state waiting for synchronized access example and jvisualvm analysis</title>
  <link>https://bmwieczorek.wordpress.com/2015/06/25/thread-in-monitor-blocked-state-waiting-for-synchronized-access-example-and-jvisualvm-analysis/</link>
  <pubDate>Thu, 25 Jun 2015 08:50:06 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1422</guid>
  <description/>
  <content:encoded><![CDATA[[code language="java"]

public class ThreadBlockedOnSynchronizedTest {

	public static void main(String[] args) throws InterruptedException {
		System.out.println(Thread.currentThread().getName() + &quot; started&quot;);
		
		new Thread(() -&gt; {
			System.out.println(Thread.currentThread().getName() + &quot; started&quot;);
			synchSleep(10000000);
			System.out.println(Thread.currentThread().getName() + &quot; stopped&quot;);
		}).start();
		
		Thread.sleep(50);
		synchSleep(50);
		System.out.println(Thread.currentThread().getName() + &quot; stopped&quot;);
	}

	static synchronized void synchSleep(int i) {
		try {
			System.out.println(Thread.currentThread().getName() + &quot; entered sync sleep&quot;);
			Thread.sleep(i);
			System.out.println(Thread.currentThread().getName() + &quot; left sync sleep&quot;);

		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
	
}

Output:
main started
Thread-0 started
Thread-0 entered sync sleep
[/code]

<a href="https://bmwieczorek.files.wordpress.com/2015/06/threadblockedonsynchronizedtest.png"><img src="https://bmwieczorek.files.wordpress.com/2015/06/threadblockedonsynchronizedtest.png?w=89" alt="ThreadBlockedOnSynchronizedTest" width="89" height="300" class="alignnone size-medium wp-image-1423" /></a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1422</wp:post_id>
  <wp:post_date>2015-06-25 10:50:06</wp:post_date>
  <wp:post_date_gmt>2015-06-25 08:50:06</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>thread-in-monitor-blocked-state-waiting-for-synchronized-access-example-and-jvisualvm-analysis</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="threads"><![CDATA[threads]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[12017647620]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>All threads running example and jvisualvm analysis</title>
  <link>https://bmwieczorek.wordpress.com/2015/06/25/all-threads-running-example-and-jvisualvm-analysis/</link>
  <pubDate>Thu, 25 Jun 2015 12:01:56 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1425</guid>
  <description/>
  <content:encoded><![CDATA[[code language="java"]
public class AllThreadsRunningTest {

	public static void main(String[] args) throws InterruptedException {
		
		System.out.println(Thread.currentThread().getName() + &quot; started&quot;);
		
		int availableProcessorsCount = Runtime.getRuntime().availableProcessors();
		System.out.println(&quot;availableProcessorsCount=&quot; + availableProcessorsCount);
		
		ExecutorService fixedThreadPool = Executors.newFixedThreadPool(availableProcessorsCount);
		
		for (int i = 0; i &lt; availableProcessorsCount; i++) {
			fixedThreadPool.execute(() -&gt; {
				System.out.println(Thread.currentThread().getName() + &quot; started&quot;);
				int count = 0;
				while(true){
					count++;
				}
			});
		}
		
		System.out.println(Thread.currentThread().getName() + &quot; scheduled threads&quot;);
	}
}

Output:
main started
availableProcessorsCount=4
pool-1-thread-1 started
pool-1-thread-2 started
main scheduled threads
pool-1-thread-3 started
pool-1-thread-4 started

[/code]

<a href="https://bmwieczorek.files.wordpress.com/2015/06/allthreadsrunning.png"><img src="https://bmwieczorek.files.wordpress.com/2015/06/allthreadsrunning.png?w=80" alt="AllThreadsRunning" width="80" height="300" class="alignnone size-medium wp-image-1426" /></a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1425</wp:post_id>
  <wp:post_date>2015-06-25 14:01:56</wp:post_date>
  <wp:post_date_gmt>2015-06-25 12:01:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>all-threads-running-example-and-jvisualvm-analysis</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="threads"><![CDATA[threads]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[12022286563]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Threads synchronization on a non-volatile vs volatile boolean flag and AtomicBoolean</title>
  <link>https://bmwieczorek.wordpress.com/2015/06/25/threads-synchronization-on-a-boolean-flag/</link>
  <pubDate>Thu, 25 Jun 2015 12:09:16 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1428</guid>
  <description/>
  <content:encoded><![CDATA[1.
[code language="java"]
public class ThreadsSynchronizationOnBooleanFlag {

    private static final Logger LOGGER = LoggerFactory.getLogger(ThreadsSynchronizationOnBooleanFlag.class);

    static boolean done = false;

    public static void main(String[] args) throws InterruptedException {
        LOGGER.debug(&quot;started&quot;);

        new Thread(new Runnable() {
             
            @Override
            public void run() {
                LOGGER.debug(&quot;started&quot;);
                while (!done) {}
                LOGGER.debug(&quot;stopped&quot;);
            }
        }).start();

        Thread.sleep(500); // give additional time to make sure thread-0 started already
        done = true;
        LOGGER.debug(&quot;stopped&quot;);
    }
}

/*
2015-10-22 12:19:48,794|main    |started
2015-10-22 12:19:48,794|Thread-0|started
2015-10-22 12:19:49,309|main    |stopped
*/
[/code]
Explanation: Thread-0 still running as thread0 does not see flag change done by main thread. 


2. 
[code language="java"]
public class ThreadsSynchronizationOnVolatileBooleanFlag {
    private static final Logger LOGGER = 
           LoggerFactory.getLogger(ThreadsSynchronizationOnVolatileBooleanFlag.class);

    static volatile boolean done = false;

    public static void main(String[] args) throws InterruptedException {
        LOGGER.debug(&quot;started&quot;);

        new Thread(new Runnable() {

            @Override
            public void run() {
                LOGGER.debug(&quot;started&quot;);
                while (!done) {
                }
                LOGGER.debug(&quot;stopped&quot;);
            }
        }).start();

        Thread.sleep(500); // give additional time to make sure thread-0 started already
        done = true;
        LOGGER.debug(&quot;stopped&quot;);
    }
}
/*
2015-10-22 12:24:18,369|main    |started
2015-10-22 12:24:18,369|Thread-0|started
2015-10-22 12:24:18,883|main    |stopped
2015-10-22 12:24:18,883|Thread-0|stopped
*/
[/code]
Explanation: volatile flag makes all threads read/write directly into RAM main memory so the thread-0 can see value change done by the main thread.


3. 
[code language="java"]
public class ThreadsSynchronizationOnAtomicBooleanFlag {
    private static final Logger LOGGER = 
             LoggerFactory.getLogger(ThreadsSynchronizationOnAtomicBooleanFlag.class);

    static AtomicBoolean done = new AtomicBoolean(false);

    public static void main(String[] args) throws InterruptedException {
        LOGGER.debug(&quot;started&quot;);

        new Thread(() -&gt; {
            LOGGER.debug(&quot;started&quot;);
            while (!done.get()) {}
            LOGGER.debug(&quot;stopped&quot;);
        }).start();

        Thread.sleep(500); // give additional time to make sure thread-0 started already
        done.set(true);
        LOGGER.debug(&quot;stopped&quot;);
    }
}
/*
2015-10-22 12:35:57,738|main    |started
2015-10-22 12:35:57,800|Thread-0|started
2015-10-22 12:35:58,315|main    |stopped
2015-10-22 12:35:58,315|Thread-0|stopped
*/
[/code]
Explanation: atomic boolean internally declares boolean as volatile so the thread-0 can see value change done by the main thread.






]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1428</wp:post_id>
  <wp:post_date>2015-06-25 14:09:16</wp:post_date>
  <wp:post_date_gmt>2015-06-25 12:09:16</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>threads-synchronization-on-a-boolean-flag</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="atomicboolean"><![CDATA[AtomicBoolean]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="threads"><![CDATA[threads]]></category>
  <category domain="category" nicename="volatile"><![CDATA[volatile]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[12022480341]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Problems starting from command line Spring 3 and 4 applications packaged as one fat jar using maven-assembly-plugin due to 'Failed to read schema document 'http://www.springframework.org/schema/beans/spring-beans.xsd'</title>
  <link>https://bmwieczorek.wordpress.com/2015/06/30/problems-starting-from-command-line-spring-3-and-4-applications-packaged-as-one-fat-jar-using-maven-assembly-plugin-due-to-failed-to-read-schema-document-httpwww-springframework-orgschemabean/</link>
  <pubDate>Tue, 30 Jun 2015 16:07:50 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1430</guid>
  <description/>
  <content:encoded><![CDATA[I have my simple Spring (release 3 or 4) Java application that I have packaged into single fat jar with all the dependencies using maven-assembly-plugin. Not then trying to jar if as a standalone Java application via:

<code>java -jar target/my-spring-4-xml-0.0.1-SNAPSHOT-jar-with-dependencies.jar </code>

I get the error:

<code>org.xml.sax.SAXParseException; lineNumber: 4; columnNumber: 128; schema_reference.4: Failed to read schema document 'http://www.springframework.org/schema/beans/spring-beans.xsd', because 1) could not find the document; 2) the document could not be read; 3) the root element of the document is not 
...
Caused by: java.net.UnknownHostException: www.springframework.org
</code>

./pom.xml:
[code language="xml"]
&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
	xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;
	&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
	&lt;groupId&gt;com.bawi.spring&lt;/groupId&gt;
	&lt;artifactId&gt;my-spring-4-xml&lt;/artifactId&gt;
	&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;

	&lt;properties&gt;

		&lt;!-- Generic properties --&gt;
		&lt;java.version&gt;1.8&lt;/java.version&gt;
		&lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;
		&lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;

		&lt;!-- Spring --&gt;
		&lt;spring-framework.version&gt;4.1.6.RELEASE&lt;/spring-framework.version&gt;

	&lt;/properties&gt;

	&lt;build&gt;
		&lt;plugins&gt;
			&lt;plugin&gt;
				&lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;
				&lt;version&gt;2.5.5&lt;/version&gt;
				&lt;configuration&gt;
					&lt;descriptorRefs&gt;
						&lt;descriptorRef&gt;jar-with-dependencies&lt;/descriptorRef&gt;
					&lt;/descriptorRefs&gt;
					&lt;archive&gt;
						&lt;manifest&gt;
							&lt;mainClass&gt;com.bawi.spring.MyApplication&lt;/mainClass&gt;
						&lt;/manifest&gt;
					&lt;/archive&gt;
				&lt;/configuration&gt;
				&lt;executions&gt;
					&lt;execution&gt;
						&lt;id&gt;make-assembly&lt;/id&gt;
						&lt;phase&gt;package&lt;/phase&gt;
						&lt;goals&gt;
							&lt;goal&gt;single&lt;/goal&gt;
						&lt;/goals&gt;
					&lt;/execution&gt;
				&lt;/executions&gt;
			&lt;/plugin&gt;
		&lt;/plugins&gt;
	&lt;/build&gt;

	&lt;dependencies&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.springframework&lt;/groupId&gt;
			&lt;artifactId&gt;spring-context&lt;/artifactId&gt;
			&lt;version&gt;${spring-framework.version}&lt;/version&gt;
		&lt;/dependency&gt;

	&lt;/dependencies&gt;
&lt;/project&gt;
[/code]

./src/main/resources/application-context.xml:
[code language="xml"]
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;
	xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
	xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&gt;

	&lt;bean id=&quot;myClass&quot; class=&quot;com.bawi.spring.MyClass&quot; /&gt;

&lt;/beans&gt;
[/code]

./src/main/java/com/bawi/MyClass.java:
[code language="java"]
package com.bawi.spring;

public class MyClass {

	public void doSth() {
		System.out.println(&quot;MyClass started&quot;);
	}
}
[/code]

./src/main/java/com/bawi/MyApplication.java:
[code language="java"]
package com.bawi.spring;

import org.springframework.context.ConfigurableApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

public class MyApplication {

	public static void main(String[] args) {
		ConfigurableApplicationContext context = new ClassPathXmlApplicationContext(&quot;/application-context.xml&quot;);
		MyClass myClass = context.getBean(MyClass.class);
		myClass.doSth();
		context.close();
	}
}
[/code]

When unzipped the my-spring-4-xml-0.0.1-SNAPSHOT-jar-with-dependencies.jar we get no spring-beans in 
target/META-INF/spring.schemas

<strong>Solution: </strong>
Modify your pom.xml dependencies to add spring-beans at the top:
[code language="xml"]
	&lt;dependencies&gt;

		&lt;!-- spring-beans needs to be explicitly at the top (before spring-context) when assembling one fat jar with maven-assembly-plugin so that META-INF/spring.schemas (with spring-beans.xsd) from spring-beans with be packaged instead one from spring-context --&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;org.springframework&lt;/groupId&gt;
			&lt;artifactId&gt;spring-beans&lt;/artifactId&gt;
			&lt;version&gt;${spring-framework.version}&lt;/version&gt;
		&lt;/dependency&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.springframework&lt;/groupId&gt;
			&lt;artifactId&gt;spring-context&lt;/artifactId&gt;
			&lt;version&gt;${spring-framework.version}&lt;/version&gt;
		&lt;/dependency&gt;

	&lt;/dependencies&gt;
[/code]

After applying the fix the unzipped my-spring-4-xml-0.0.1-SNAPSHOT-jar-with-dependencies.jar has
target/META-INF/spring.schemas with:
<code>$ cat META-INF/spring.schemas | grep spring-beans</code>

[code language="xml"]
http\://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd
http\://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd
http\://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd
http\://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd
http\://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd
http\://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd
http\://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd
http\://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd
[/code]
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1430</wp:post_id>
  <wp:post_date>2015-06-30 18:07:50</wp:post_date>
  <wp:post_date_gmt>2015-06-30 16:07:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>problems-starting-from-command-line-spring-3-and-4-applications-packaged-as-one-fat-jar-using-maven-assembly-plugin-due-to-failed-to-read-schema-document-httpwww-springframework-orgschemabean</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="maven-assembly-plugin"><![CDATA[maven-assembly-plugin]]></category>
  <category domain="post_tag" nicename="spring"><![CDATA[spring]]></category>
  <category domain="category" nicename="spring-beans"><![CDATA[spring-beans]]></category>
  <category domain="category" nicename="springframework"><![CDATA[Springframework]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[12187236047]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>1696</wp:comment_id>
    <wp:comment_author><![CDATA[jonakmex]]></wp:comment_author>
    <wp:comment_author_email>jonakmex@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/jonakmex</wp:comment_author_url>
    <wp:comment_author_IP>200.33.74.37</wp:comment_author_IP>
    <wp:comment_date>2016-06-10 18:39:09</wp:comment_date>
    <wp:comment_date_gmt>2016-06-10 16:39:09</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Not working for me.]]></wp:comment_content>
    <wp:comment_approved>0</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>51015474</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:3:{s:4:"time";d:1465576749.997231006622314453125;s:5:"event";s:9:"check-ham";s:4:"user";s:8:"jonakmex";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:3:{s:4:"time";d:1465581268.55276393890380859375;s:5:"event";s:9:"check-ham";s:4:"user";s:8:"jonakmex";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>cygwin packages to install</title>
  <link>https://bmwieczorek.wordpress.com/2015/07/01/cygwin-packages-to-install/</link>
  <pubDate>Wed, 01 Jul 2015 10:42:25 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1437</guid>
  <description/>
  <content:encoded><![CDATA[wget
unzip
ssh
vim
inetutils (telnet)
bc (binary calculator)
git
git-completion
subversion

&nbsp;

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1437</wp:post_id>
  <wp:post_date>2015-07-01 12:42:25</wp:post_date>
  <wp:post_date_gmt>2015-07-01 10:42:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>cygwin-packages-to-install</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="bash"><![CDATA[bash]]></category>
  <category domain="category" nicename="cygwin"><![CDATA[cygwin]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[12212001137]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>nohup</title>
  <link>https://bmwieczorek.wordpress.com/2015/07/04/nohup/</link>
  <pubDate>Sat, 04 Jul 2015 16:10:06 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1439</guid>
  <description/>
  <content:encoded><![CDATA[nohup ./some-process.sh &gt; some-process.log 2&gt;&amp;1&amp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1439</wp:post_id>
  <wp:post_date>2015-07-04 18:10:06</wp:post_date>
  <wp:post_date_gmt>2015-07-04 16:10:06</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>nohup</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="bash"><![CDATA[bash]]></category>
  <category domain="post_tag" nicename="bash-nohup"><![CDATA[bash nohup]]></category>
  <category domain="category" nicename="nohup"><![CDATA[nohup]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[12338377950]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>eclipse checkstyle tags</title>
  <link>https://bmwieczorek.wordpress.com/2015/07/08/eclipse-checkstyle-tags/</link>
  <pubDate>Wed, 08 Jul 2015 11:55:38 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1442</guid>
  <description/>
  <content:encoded><![CDATA[1. eclipse (need to enable it explicitly in settings)
[code language="java"]
// @formatter:off

// some code here

// @formatter:on
[/code]

2. checkstyle - assuming your checkstyle xml setting has 
[code language="xml"]
&lt;module name=&quot;Checker&quot;&gt;
   &lt;module name=&quot;SuppressionCommentFilter&quot;/
[/code]
then use:
[code language="java"]
// CHECKSTYLE:OFF

// some code here

// CHECKSTYLE:ON
[/code]
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1442</wp:post_id>
  <wp:post_date>2015-07-08 13:55:38</wp:post_date>
  <wp:post_date_gmt>2015-07-08 11:55:38</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>eclipse-checkstyle-tags</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="checkstyle"><![CDATA[checkstyle]]></category>
  <category domain="category" nicename="eclipse"><![CDATA[eclipse]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[12521323168]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Grep for alternative of words</title>
  <link>https://bmwieczorek.wordpress.com/2015/07/09/grep-for-alternative-of-words/</link>
  <pubDate>Thu, 09 Jul 2015 09:39:50 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1449</guid>
  <description/>
  <content:encoded><![CDATA[$ cat sample.txt
abc
abc Exception efg
123 ERROR 456
a1 Exception b2 ERROR
1a ERROR 2b Exception
123

$ cat sample.txt | egrep "ERROR|Exception"
abc Exception efg
123 ERROR 456
a1 Exception b2 ERROR
1a ERROR 2b Exception

$ cat sample.txt | egrep --color=always "ERROR|Exception"
abc <strong>Exception</strong> efg
123 <strong>ERROR</strong> 456
a1 <strong>Exception</strong> b2 <strong>ERROR</strong>
1a <strong>ERROR</strong> 2b <strong>Exception</strong>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1449</wp:post_id>
  <wp:post_date>2015-07-09 11:39:50</wp:post_date>
  <wp:post_date_gmt>2015-07-09 09:39:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>grep-for-alternative-of-words</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="bash"><![CDATA[bash]]></category>
  <category domain="category" nicename="egrep"><![CDATA[egrep]]></category>
  <category domain="category" nicename="grep"><![CDATA[grep]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[12556335254]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Java exceptions</title>
  <link>https://bmwieczorek.wordpress.com/2015/07/08/java-exceptions/</link>
  <pubDate>Wed, 08 Jul 2015 16:28:01 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1450</guid>
  <description/>
  <content:encoded><![CDATA[[code language="java"]
package exceptions;

public class CatchingExceptionExample {

    public static void main(String[] args) {
        int i = 0;
        int result = 0;
        try {
            result = 10 / i;
        } catch (ArithmeticException ae) {
            System.out.println(&quot;In catch ArithmeticException: &quot; + ae.getMessage() + &quot;, result=&quot; + result);
        } finally {
            System.out.println(&quot;In finally, result=&quot; + result);
        }
        System.out.println(&quot;Out of try-catch-finally, result=&quot; + result);
    }

}

// In catch ArithmeticException: / by zero, result=0
// In finally, result=0
// Out of try-catch-finally, result=0
[/code]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1450</wp:post_id>
  <wp:post_date>2015-07-08 18:28:01</wp:post_date>
  <wp:post_date_gmt>2015-07-08 16:28:01</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>java-exceptions</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="exception"><![CDATA[Exception]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[12530002234]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Java exception in method signature in subclasses</title>
  <link>https://bmwieczorek.wordpress.com/2015/07/08/java-exception-in-method-signature-in-subclasses/</link>
  <pubDate>Wed, 08 Jul 2015 16:53:02 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1452</guid>
  <description/>
  <content:encoded><![CDATA[[code language="java"]
interface Printable {
    void print() throws IOException;
}

class Doc1 implements Printable {

    @Override
    public void print() throws IOException { // ok as the same exception
    }
}

class Doc2 implements Printable {
    
    @Override
    public void print() throws FileNotFoundException { // ok as FileNotFoundException extends IOException
    }
}

    // not possible as Exception is not a subclass of IOException (not to violate Liskov substitution principle)
    //public void print() throws Exception { // Exception is not compatible with throws clause in Printable.print()

[/code]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1452</wp:post_id>
  <wp:post_date>2015-07-08 18:53:02</wp:post_date>
  <wp:post_date_gmt>2015-07-08 16:53:02</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>java-exception-in-method-signature-in-subclasses</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="exception"><![CDATA[Exception]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="liskov"><![CDATA[Liskov]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[12530825637]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Java Junit Assume</title>
  <link>https://bmwieczorek.wordpress.com/2015/07/20/java-junit-assume/</link>
  <pubDate>Mon, 20 Jul 2015 11:48:23 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1461</guid>
  <description/>
  <content:encoded><![CDATA[[code language="java"]
public class JunitAssumeSampleTest {
    
    @Test
    public void shouldSkipTest() {
        boolean isIntegrationEnvironment = false;

        // assume
        Assume.assumeTrue(&quot;This test should only run in integration environment&quot;, isIntegrationEnvironment);

        // this code will NOT be executed
        throw new RuntimeException();
    }

    @Test(expected = RuntimeException.class)
    public void shouldRunTestTest() {
        boolean isIntegrationEnvironment = true;

        // assume
        Assume.assumeTrue(&quot;This test should only run in integration environment&quot;, isIntegrationEnvironment);

        // this code will be executed
        throw new RuntimeException();
    }
}
[/code]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1461</wp:post_id>
  <wp:post_date>2015-07-20 13:48:23</wp:post_date>
  <wp:post_date_gmt>2015-07-20 11:48:23</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>java-junit-assume</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="assume"><![CDATA[Assume]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="junit"><![CDATA[Junit]]></category>
  <category domain="post_tag" nicename="junit-2"><![CDATA[junit]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[12903361766]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>My Eclipse shortcuts</title>
  <link>https://bmwieczorek.wordpress.com/2015/07/22/my-eclipse-shortcuts/</link>
  <pubDate>Wed, 22 Jul 2015 17:44:11 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1467</guid>
  <description/>
  <content:encoded><![CDATA[Eclipse shortcuts

<strong>Switching:</strong>
ctrl+M (maximize/minimize the window)
ctrl+E recently open tabs
ctrl+O - outline methods/fields
alt+shift+Q,P - switch to package explorer
alt+shift+left/right - collapse/expand projects or packages
ctrl+F7 - switch views (junit, package explorer)
ctrl+F8 - switch perspective (java/debug/synchronization)

<strong>Searching:</strong>
ctrl+shift+L (search everywhere) - requires additional plugin "Quick search" by Spring

<strong>Moving:</strong>
ctrl+right/left - move cursor to the previous/next word
ctrl+up/down - move page up/down with stationary cursor
ctrl+pgUp/pgDown - move to the left/right across open tabs
ctrl+home/end - move page and cursor to the top/bottom of the file
ctrl+shift+up/down - move cursor to previous/next method or field
ctrl+shift+P - move to the corresponding bracket

<strong>Selecting text:</strong>
shift+left/right - select previous/next character
shift+up/down - select lines above/below
shift+ctrl+left/right - select previous/next word
shift+alt+left/right or up/down - select more enclosing statement

<strong>Refactoring:</strong>
alt+shift+V - mo<code>v</code>e method
alt+shift+L - extract <code>l</code>ocal variable
alt+shift+I - method <code>i</code>nline
alt+shift+M - extract <code>m</code>ethod
alt+shift+R - <code>r</code>ename
alt+shift+T,G - infer <code>generic</code> type arguments
alt+shift+T,H - use super type where possible (select class name declaration that instances should be replaces with super type)
alt+shift+T,O - intr<code>o</code>duce static factory method

ctrl+alt+J - <code>j</code>oin lines
ctrl+shift+M - add static method import instead of class


<strong>Generating code: </strong>
alt+shift+S(ource) view
ctrl+N(new)
-my own source code bindings (in window)
ctrl+alt+S, C(onstructor generate using fields)
ctrl+alt+S, G(etters/setter generate)
ctrl+alt+S, E(quals/hashcode generate)
ctrl+alt+T, E(toString generate)
-my own new generation bindings:
ctrl+alt+N(ew), C(lass)
ctrl+alt+N(ew), I(interface)
ctrl+alt+N(ew), P(ackage)
ctrl+alt+N(ew), T(est)
ctrl+alt+N(ew), X(ml)
ctrl+alt+N(ew), F(ile)

<strong>Duplication:</strong>
alt+ctrl+up/down - duplication of line above/below

<strong>SVN</strong>
- my own SVN bindings (in window)
ctrl+alt+shift+S(ubversion), C(ommit)
ctrl+alt+shift+S(ubversion), A(add to version control)
ctrl+alt+shift+S(ubversion), R(evert)
ctrl+alt+shift+S(ubversion), U(update)
ctrl+alt+shift+S(ubversion), H(update)
ctrl+alt+shift+S(ubversion), L(atest repo compare)
ctrl+alt+shift+S(ubversion), B(base repo compare)

<strong>GIT</strong>
- my own GIT bindings (in window)
ctrl+alt+shift+G(it), C(ommit)
ctrl+alt+shift+G(it), A(dd to index)
ctrl+alt+shift+G(it), R(eplace with File from index)
ctrl+alt+shift+G(it), I(ndex compare)

<strong>Contextual hints:</strong>
[code language="java"]
String name = &amp;amp;quot;Bob&amp;amp;quot;;
String message = &amp;amp;quot;Good morning &amp;amp;quot; + name;
[/code]
highlight '"Good morning " + name', hit ctrl+1, and choose StringBuilder contatenation or Message format.
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1467</wp:post_id>
  <wp:post_date>2015-07-22 19:44:11</wp:post_date>
  <wp:post_date_gmt>2015-07-22 17:44:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>my-eclipse-shortcuts</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="eclipse"><![CDATA[eclipse]]></category>
  <category domain="category" nicename="git"><![CDATA[git]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="svn"><![CDATA[svn]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[12981636916]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Java 8, lambda, functional interfaces, method reference, constructor reference</title>
  <link>https://bmwieczorek.wordpress.com/2015/07/27/java-8-lambda-functional-interfaces-method-reference-constructor-reference/</link>
  <pubDate>Mon, 27 Jul 2015 10:35:30 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1484</guid>
  <description/>
  <content:encoded><![CDATA[[code language="java"]
package e;

import java.util.function.BiFunction;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.function.Supplier;

@SuppressWarnings(&quot;unused&quot;)
public class FunctionalInterfaces {

    public interface Callback {
        void doSth();
    }

    public static class Person {
        private String name;
        private int age;
        public Person() {
        }
        public Person(String name, int age) {
            this.age = age;
            this.name = name;
        }
        public String getName() {
            return name;
        }
        public int getAge() {
            return age;
        }
        public void setName(String name) {
            this.name = name;
        }
        public void setAge(int age) {
            this.age = age;
        }
    }
    
    static class PersonComparer {
        public int compareByAge(Person p1, Person p2) {
            int age1 = p1.getAge();
            int age2 = p2.getAge();
            return age1 == age2 ? 0 : age1 &gt; age2 ? 1 : -1; 
        }

        public static int staticCompareByAge(Person p1, Person p2) {
            int age1 = p1.getAge();
            int age2 = p2.getAge();
            return age1 == age2 ? 0 : age1 &gt; age2 ? 1 : -1; 
        }

    }

    public static void main(String[] args) {
        Callback callback1 = new Callback() {

            @Override
            public void doSth() {
                System.out.println(&quot;Hello&quot;);
            }
        };

        Callback callback2 = () -&gt; System.out.println(&quot;Hello&quot;);

        Callback callback3 = () -&gt; {
            System.out.println(&quot;Hello&quot;);
        };


        int age = 10;
        Supplier&lt;Person&gt; supplier = new Supplier&lt;Person&gt;() {
            @Override
            public Person get() { 
                return new Person(&quot;Bob&quot;, age); 
            }
        };

        Supplier&lt;Person&gt; supplier2 = () -&gt; new Person(&quot;Bob&quot;, age);

        Supplier&lt;Person&gt; supplier3 = () -&gt; {
            return new Person(&quot;Bob&quot;, age);
        };

        Supplier&lt;Person&gt; supplier4 = () -&gt; {
            return new Person();
        };

        Supplier&lt;Person&gt; supplier5 = () -&gt;  new Person();

        Supplier&lt;Person&gt; supplier6 = Person::new; // Constructor reference (only for parameterless constructor)


        Consumer&lt;String&gt; consumer1 = new Consumer&lt;String&gt;() {
            @Override
            public void accept(String s) {
                System.out.println(s);
            }
        };

        Consumer&lt;String&gt; consumer = s -&gt; {
            System.out.println(s);
        };

        Consumer&lt;String&gt; consumer2 = s -&gt; System.out.println(s);

        Consumer&lt;String&gt; consumer3 = (String s) -&gt; System.out.println(s);

        Consumer&lt;?&gt; consumer4 = o -&gt; System.out.println(o);

        Consumer&lt;?&gt; consumer5 = System.out::println;


        Predicate&lt;String&gt; predicate = new Predicate&lt;String&gt;() {
            @Override
            public boolean test(String s) {
                return true;
            }
        };

        Predicate&lt;String&gt; predicate2 = (String s) -&gt; true;

        Predicate&lt;String&gt; predicate3 = s -&gt; true;

        Predicate&lt;String&gt; predicate4 = s -&gt; {
            return true;
        };

        Predicate&lt;?&gt; predicate5 = s -&gt; true;

        Predicate&lt;?&gt; predicate6 = s -&gt; Boolean.TRUE;
        
        Predicate&lt;Person&gt; isMature = new Predicate&lt;Person&gt;() {
            @Override
            public boolean test(Person person) {
                return person.getAge() &gt; 18;
            }
        };
        Predicate&lt;Person&gt; isMature2 = person -&gt; person.getAge() &gt; 18;

        Predicate&lt;Person&gt; isMature3 = person -&gt; {
            return person.getAge() &gt; 18;
        };


        Function&lt;String, Integer&gt; function = new Function&lt;String, Integer&gt;() {
            @Override
            public Integer apply(String s) {
                return Integer.parseInt(s);
            }
        };

        Function&lt;String, Integer&gt; function2 = (String s) -&gt; Integer.parseInt(s);

        Function&lt;String, Integer&gt; function3 = s -&gt; Integer.parseInt(s);

        Function&lt;String, Integer&gt; function4 = s -&gt; {
            return Integer.parseInt(s);
        };

        Function&lt;String, Integer&gt; function5 = Integer::parseInt; // static method reference

        Function&lt;Person, Integer&gt; function6 = new Function&lt;Person, Integer&gt;() {
            @Override
            public Integer apply(Person t) {
                return t.getAge();
            }
        };

        Function&lt;Person, Integer&gt; function7 = t -&gt; t.getAge();

        Function&lt;Person, Integer&gt; function8 = Person::getAge; // instance method reference

        PersonComparer personComparer = new PersonComparer();
        BiFunction&lt;Person, Person, Integer&gt; biFunction = new BiFunction&lt;Person, Person, Integer&gt;() {
            @Override
            public Integer apply(Person p1, Person p2) {
                return personComparer.compareByAge(p1, p2);
            }
        }; 

        BiFunction&lt;Person, Person, Integer&gt; biFunction2 = (p1, p2) -&gt; personComparer.compareByAge(p1, p2);

        BiFunction&lt;Person, Person, Integer&gt; biFunction3 = personComparer::compareByAge; // instance method reference

        BiFunction&lt;Person, Person, Integer&gt; biFunction4 = new BiFunction&lt;Person, Person, Integer&gt;() {
            @Override
            public Integer apply(Person p1, Person p2) {
                return PersonComparer.staticCompareByAge(p1, p2);
            }
        };

        BiFunction&lt;Person, Person, Integer&gt; biFunction5 = (p1, p2) -&gt; PersonComparer.staticCompareByAge(p1, p2);

        BiFunction&lt;Person, Person, Integer&gt; biFunction6 = PersonComparer::staticCompareByAge; // static method reference
    }

}
[/code]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1484</wp:post_id>
  <wp:post_date>2015-07-27 12:35:30</wp:post_date>
  <wp:post_date_gmt>2015-07-27 10:35:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>java-8-lambda-functional-interfaces-method-reference-constructor-reference</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="constructor-reference"><![CDATA[constructor reference]]></category>
  <category domain="category" nicename="functional-interface"><![CDATA[functional interface]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="lambda"><![CDATA[lambda]]></category>
  <category domain="category" nicename="method-reference"><![CDATA[method reference]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[13131941001]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Remember</title>
  <link>https://bmwieczorek.wordpress.com/2015/08/23/remember/</link>
  <pubDate>Sun, 23 Aug 2015 11:58:30 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1486</guid>
  <description/>
  <content:encoded><![CDATA[1. Baby steps, don't change everything at once, 1 day with 1% improvement
2. Do write 100 test for one bit, but do the e2e test
2. Kregoslup - a) czubek glowy do gory az odciaza sie ledzwie (mozna polaczyc ze zwisem), b) lezac na plecach podnosic zgiete kolana przy ledzwiach wcisnietych w podloge
c) ciepla kompiel, prysznic, patelnia na ledzwie zeby rozluznic gdy boli,
d) silne miesnie brzycha trzymaja cale wnetrznosci

]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1486</wp:post_id>
  <wp:post_date>2015-08-23 13:58:30</wp:post_date>
  <wp:post_date_gmt>2015-08-23 11:58:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>remember</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="me"><![CDATA[me]]></category>
  <category domain="category" nicename="remember"><![CDATA[remember]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[14008263330]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Waiting on access to mutex until another thread finishes and releases the lock</title>
  <link>https://bmwieczorek.wordpress.com/2015/10/02/waiting-on-access-to-mutex-until-another-thread-finishes-and-releases-the-lock/</link>
  <pubDate>Fri, 02 Oct 2015 09:07:11 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1491</guid>
  <description/>
  <content:encoded><![CDATA[
[code language="java"]

public class WaitingAccessMutexUntilAnotherThreadFinishesAndReleasesTheLock {
    public static void main(String[] args) {
        System.out.println(Thread.currentThread() + &quot; started&quot;);
        
        new Thread(() -&gt; {
            System.out.println(Thread.currentThread() + &quot; started&quot;);
            doSth1();
            // doSth2();
        }).start();

        doSth1();
    }
    
    public synchronized static void doSth1() {
        try {
            System.out.println(Thread.currentThread() + &quot; doSth1 begin&quot;);
            Thread.sleep(5000);
            System.out.println(Thread.currentThread() + &quot; doSth1 end&quot;);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }

    public synchronized static void doSth2() {
        try {
            System.out.println(Thread.currentThread() + &quot; doSth2 begin&quot;);
            Thread.sleep(5000);
            System.out.println(Thread.currentThread() + &quot; doSth2 end&quot;);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }
    
}

[/code]

Output:
Thread[main,5,main] started
Thread[main,5,main] doSth1 begin
Thread[Thread-0,5,main] started
Thread[main,5,main] doSth1 end
Thread[Thread-0,5,main] doSth1 begin
Thread[Thread-0,5,main] doSth1 end

Explanation:
It does not matter if the Thread-0 wants to acccess doSth1 or doSth2 - the result is the same as they are both synchronized on the same lock. So Thread-0 needs to wait for main thread to finish sleeping while keeping the lock. When main thread releases the lock by exiting doSth1, then Thread-0 can execute synchronized code from doSth1 or doSth2.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1491</wp:post_id>
  <wp:post_date>2015-10-02 11:07:11</wp:post_date>
  <wp:post_date_gmt>2015-10-02 09:07:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>waiting-on-access-to-mutex-until-another-thread-finishes-and-releases-the-lock</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="threads"><![CDATA[threads]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[15392450686]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Usage of Optional</title>
  <link>https://bmwieczorek.wordpress.com/2015/10/07/usage-of-optional/</link>
  <pubDate>Wed, 07 Oct 2015 11:57:27 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1495</guid>
  <description/>
  <content:encoded><![CDATA[As a return type if null is possible:

[code language="java"]
public static Optional&lt;Configuration&gt;; findConfigurationForCarrier(String carrier) {
Configuration configuration = ...
return Optional.ofNullable(configuration);
}
[/code]

Using it:

[code language="java"]
String carrier = &quot;ABC123&quot;;
Optional&lt;Configuration&gt; maybeConfiguration = findConfigurationForCarrier(carrier);

maybeConfiguration.ifPresent(configuration -&gt; 
     System.out.println(&quot;Found: &quot; + configuration + &quot; for &quot; + carrier));

Configuration configuration = maybeConfiguration.orElse(new Configuration());

// or
// Configuration configuration = maybeConfiguration.orElseGet(DefaultConfigurationProvider::get);

// or
// maybeConfiguration.orElseThrow(() -&gt; 
//        new ConfigurationNotFoundException(&quot;Configuration not found for carrier: &quot; + carrier));
[/code]

It is not recommended to use Optional as method parameters. Instead it is recommended to overload methods - one with signature with a parameter when the value is not null and the other without that parameter.

It is not recommended to use optional in private methods nor local variables and class fields.

Example
[code language="java"]
package com.sabre.java8.newfeatures;

import java.util.Arrays;
import java.util.List;
import java.util.Optional;

public class MyOptional {

    public static void main(String[] args) {
        MyOptional m = new MyOptional();
        List&lt;Integer&gt; list24 = Arrays.asList(2, 4);
        System.out.println(m.findFirstEven(list24)); // 2
        System.out.println(m.findFistEvenOptional(list24)); // Optional[2]
        System.out.println(m.findFistEvenOptional(list24).isPresent()); // true
        System.out.println(m.findFistEvenOptional(list24).orElse(-1)); // 2
        m.findFistEvenOptional(list24).ifPresent(System.out::println); // 2
        System.out.println(m.findFistEvenOptional(list24).get()); // 2

        List&lt;Integer&gt; list13 = Arrays.asList(1, 3);
        System.out.println(m.findFirstEven(list13)); // null
        System.out.println(m.findFistEvenOptional(list13)); // Optional.emtpy
        System.out.println(m.findFistEvenOptional(list13).isPresent()); // false
        System.out.println(m.findFistEvenOptional(list13).orElse(-1)); // -1
        m.findFistEvenOptional(list13).ifPresent(System.out::println); // not printed
        System.out.println(m.findFistEvenOptional(list13).get()); // java.util.NoSuchElementException: 
                                                                  //    No value present
    }

    public Optional&lt;Integer&gt; findFistEvenOptional(List&lt;Integer&gt; numbers) {
        return numbers.stream().filter(n -&gt; n % 2 == 0).findFirst();
    }

    public Integer findFirstEven(List&lt;Integer&gt; numbers) {
        for (Integer number : numbers) {
            if (number % 2 == 0) {
                return number;
            }
        }
        return null;
    }
}
[/code]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1495</wp:post_id>
  <wp:post_date>2015-10-07 13:57:27</wp:post_date>
  <wp:post_date_gmt>2015-10-07 11:57:27</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>usage-of-optional</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="java8"><![CDATA[java8]]></category>
  <category domain="category" nicename="jdk8"><![CDATA[jdk8]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[15569647219]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Stream map and flatMap</title>
  <link>https://bmwieczorek.wordpress.com/2015/10/07/stream-map-and-flatmap/</link>
  <pubDate>Wed, 07 Oct 2015 14:42:52 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1500</guid>
  <description/>
  <content:encoded><![CDATA[[code language="java"]
java.util.stream.Stream&lt;T&gt;
    &lt;R&gt; Stream&lt;R&gt; flatMap(Function&lt;? super T, ? extends Stream&lt;? extends R&gt;&gt; mapper);
[/code]
Takes each element from the stream and apply function to create the stream of that element. All the new streams are flattened to one stream.

[code language="java"]
    List&lt;List&lt;String&gt;&gt; lists = asList(asList(&quot;a&quot;, &quot;b&quot;), asList(&quot;A&quot;, &quot;B&quot;), asList(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;));
    Stream&lt;List&lt;String&gt;&gt; stream = lists.stream();
    Stream&lt;String&gt; flatMappedStream = stream.flatMap(list -&gt; {
        System.out.println(&quot;in flatMap: &quot; + list);
        return list.stream();
    });
[/code]

Up to this point nothing is printed since streams are "lazy". Now Now let's call the terminal operation like 'forEach':

[code language="java"]
    flatMappedStream
        .forEach(System.out::println);
[/code]

Produces a stream of Strings:
Output:
<blockquote>
in flatMap: [a, b]
a
b
in flatMap: [A, B]
A
B
in flatMap: [1, 2, 3]
1
2
3
</blockquote>

[code language="java"]
java.util.stream.Stream&lt;T&gt;
    &lt;R&gt; Stream&lt;R&gt; map(Function&lt;? super T, ? extends R&gt; mapper);
[/code]
Note that mapping function in flatMap(...) returns 
[code language="java"]
? extends Stream&lt;? extends R&gt; 
[/code]
where as mapping function in map(...) returns 
[code language="java"]
? extends R
[/code]
Takes each element from stream and apply the function to produce a result on it and replace each element with a result (not a stream). The output is a stream of results.

[code language="java"]
    List&lt;List&lt;String&gt;&gt; lists = asList(asList(&quot;a&quot;, &quot;b&quot;), asList(&quot;A&quot;, &quot;B&quot;), asList(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;));
    Stream&lt;List&lt;String&gt;&gt; stream = lists.stream();
    Stream&lt;List&lt;String&gt;&gt; mappedStream = stream.map(list -&gt; {
        System.out.println(&quot;in map: &quot; + list);
        return list;
    });

    mappedStream
        .forEach(System.out::println);
[/code]

Produces a stream of Integers (representing each list size):
Output:
<blockquote>
in map: [a, b]
2
in map: [A, B]
2
in map: [1, 2, 3]
3
</blockquote>
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1500</wp:post_id>
  <wp:post_date>2015-10-07 16:42:52</wp:post_date>
  <wp:post_date_gmt>2015-10-07 14:42:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>stream-map-and-flatmap</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="java8"><![CDATA[java8]]></category>
  <category domain="category" nicename="jdk8"><![CDATA[jdk8]]></category>
  <category domain="category" nicename="stream"><![CDATA[stream]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[15574195722]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Reusing streams</title>
  <link>https://bmwieczorek.wordpress.com/2015/10/07/reusing-streams/</link>
  <pubDate>Wed, 07 Oct 2015 16:21:38 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1511</guid>
  <description/>
  <content:encoded><![CDATA[[code language="java"]
    Stream&lt;String&gt; stream = asList(&quot;a&quot;, &quot;b&quot;).stream();
    stream.forEach(t -&gt; System.out.println(&quot;s1: &quot; + t));
    stream.forEach(t -&gt; System.out.println(&quot;s2: &quot; + t));
[/code]

<blockquote>
s1: a
s1: b
Exception in thread "main" java.lang.IllegalStateException: stream has already been operated upon or closed
	at java.util.stream.AbstractPipeline.sourceStageSpliterator(AbstractPipeline.java:279)
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:580)
	at com.sabre.ticketing.emd.mt.MyListFlatMap.main(MyListFlatMap.java:32)
</blockquote>

Note that exception is thrown from the line #3 since the stream has been already used in the line #2. So cannot reuse it. ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1511</wp:post_id>
  <wp:post_date>2015-10-07 18:21:38</wp:post_date>
  <wp:post_date_gmt>2015-10-07 16:21:38</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>reusing-streams</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="java8"><![CDATA[java8]]></category>
  <category domain="category" nicename="jdk8"><![CDATA[jdk8]]></category>
  <category domain="category" nicename="stream"><![CDATA[stream]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[15577158112]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Arrays, lists and copying elements</title>
  <link>https://bmwieczorek.wordpress.com/2015/10/08/arrays-lists-and-copying-elements/</link>
  <pubDate>Thu, 08 Oct 2015 07:12:22 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1514</guid>
  <description/>
  <content:encoded><![CDATA[[code language="java"]
    Person person = new Person(); //Created: Person [name=null]
    person.setName(&quot;Bartek&quot;);
    List&lt;Person&gt; persons = new ArrayList&lt;&gt;();
    persons.add(person);
    System.out.println(&quot;Persons=&quot; + persons); // Persons=[Person [name=Bartek]]

    List&lt;Person&gt; persons2 = new ArrayList&lt;&gt;(persons);

    person.setName(&quot;Kazek&quot;);
    System.out.println(&quot;Persons=&quot; + persons); // Persons=[Person [name=Kazek]]
    System.out.println(&quot;Persons2=&quot; + persons2); // Persons2=[Person [name=Kazek]]

    persons.remove(0);
    System.out.println(&quot;Persons=&quot; + persons); // Persons=[]
    System.out.println(&quot;Persons2=&quot; + persons2);  // Persons2=[Person [name=Kazek]]   
[/code]

Output:
<blockquote>
Created: Person [name=null]
Persons=[Person [name=Bartek]]
Persons=[Person [name=Kazek]]
Persons2=[Person [name=Kazek]]
Persons=[]
Persons2=[Person [name=Kazek]]
</blockquote>

Note: 
persons2 = new ArrayList(persons) makes a safe (deep) copy of all references in persons list. So removing an element from persons does not affect persons2 list. However, modification of a particular person internal state is reflected in both of the list. ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1514</wp:post_id>
  <wp:post_date>2015-10-08 09:12:22</wp:post_date>
  <wp:post_date_gmt>2015-10-08 07:12:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>arrays-lists-and-copying-elements</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="collections"><![CDATA[collections]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="post_tag" nicename="java-basics"><![CDATA[java basics]]></category>
  <category domain="category" nicename="java-basisc"><![CDATA[java basisc]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[15599434590]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Java 8 streams collectors groupBy</title>
  <link>https://bmwieczorek.wordpress.com/2015/10/14/java-8-streams-collectors-groupby/</link>
  <pubDate>Wed, 14 Oct 2015 14:45:09 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1516</guid>
  <description/>
  <content:encoded><![CDATA[[code language="java"]
package com.bawi.java8.groupBy;

import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.stream.Collectors;

public class MyJavaGroupBy {
    static class Person {
        private final String name;
        private final int age;
        
        public Person(String name, int age) {
            this.name = name;
            this.age = age;
        }
        
        public String getName() {
            return name;
        }
        
        public int getAge() {
            return age;
        }
        
        @Override
        public String toString() {
            return &quot;Person [name=&quot; + name + &quot;, age=&quot; + age + &quot;]&quot;;
        }
    }
    public static void main(String[] args) {
        List&lt;Person&gt; persons = Arrays.asList(
                new Person(&quot;John&quot;, 20), 
                new Person(&quot;Rob&quot;, 20), 
                new Person(&quot;Bartek&quot;, 22), 
                new Person(&quot;Ania&quot;, 21));
        
        // Group by person age, default collect to map: key=age, value = list of people (aggregate function is returning as list of persons)
        Map&lt;Integer, List&lt;Person&gt;&gt; peopleListByAge = persons.stream().collect(Collectors.groupingBy(Person::getAge));
        System.out.println(peopleListByAge);
        // {20=[Person [name=John, age=20], Person [name=Rob, age=20]], 21=[Person [name=Ania, age=21]], 22=[Person [name=Bartek, age=22]]}

        // Group by person age (key), map person to person name and collect the names to set (value), (aggregate function is returning as set of names)  
        Map&lt;Integer, Set&lt;String&gt;&gt; peopleNameSetByAge = persons.stream().collect(Collectors.groupingBy(Person::getAge, Collectors.mapping(Person::getName, Collectors.toSet())));
        System.out.println(peopleNameSetByAge);
        // {20=[Rob, John], 21=[Ania], 22=[Bartek]}

        
        // Group by person age (key) and count of person for a given age (value), apply counting aggregate function  
        Map&lt;Integer, Long&gt; peopleByAgeWithCount = persons.stream().collect(Collectors.groupingBy(Person::getAge, Collectors.counting()));
        System.out.println(peopleByAgeWithCount);
        // {20=2, 21=1, 22=1}

    }
}


[/code]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1516</wp:post_id>
  <wp:post_date>2015-10-14 16:45:09</wp:post_date>
  <wp:post_date_gmt>2015-10-14 14:45:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>java-8-streams-collectors-groupby</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="group-by"><![CDATA[group by]]></category>
  <category domain="category" nicename="groupby"><![CDATA[groupBy]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="java8"><![CDATA[java8]]></category>
  <category domain="category" nicename="jdk8"><![CDATA[jdk8]]></category>
  <category domain="category" nicename="stream"><![CDATA[stream]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[15816326547]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Java 8 reduce method</title>
  <link>https://bmwieczorek.wordpress.com/2015/10/14/java-8-reduce-method/</link>
  <pubDate>Wed, 14 Oct 2015 15:14:20 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1518</guid>
  <description/>
  <content:encoded><![CDATA[[code language="java"]
package com.bawi.java8.reduce;

import static java.util.Arrays.asList;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Optional;

public class MyReduce {
    public static void main(String[] args) {
        
        List&lt;Integer&gt; numbers = asList(1, 2, 3, 4);
        Optional&lt;Integer&gt; resultOptional = numbers
                .stream()
                .reduce((x, y) -&gt; x * y);
        resultOptional.ifPresent(System.out::println);
        // 24, note optional is returned from reduce

        
        Integer result = numbers
                .stream()
                .reduce(1, (x, y) -&gt; x * y);
        System.out.println(result);
        // 24, note Integer is returned from reduce        
        
        
        // reduce to map with key string (letter) and value (count of each letter), note alternative for that is: Collectors.groupingBy(s -&gt; s, Collections.counting())
        Map&lt;String, Integer&gt; reduce = Arrays.asList(&quot;a&quot;, &quot;b&quot;, &quot;a&quot;, &quot;c&quot;, &quot;b&quot;, &quot;a&quot;)
            .stream()
            //.parallelStream()
            .reduce(new HashMap&lt;String, Integer&gt;(), 
                    (map, string) -&gt; { 
                        map.compute(string, (k, v) -&gt; map.containsKey(k) ? v + 1 : 1);
                        System.out.println(&quot;In accumulator: &quot; + Thread.currentThread().getName());
                        return map; 
                    }, 
                    (map1, map2) -&gt; {  
                        map1.putAll(map2);
                        System.out.println(&quot;In combiner: &quot; + Thread.currentThread().getName()); // only used for parallel stream
                        return map1; 
                    }
            );
        System.out.println(reduce);
        /*
        // (sequential) stream output: (accumulator used for each element, combiner not used)
        In accumulator: main
        In accumulator: main
        In accumulator: main
        In accumulator: main
        In accumulator: main
        In accumulator: main
        {a=3, b=2, c=1}
        
        // parallel stream output: (accumulator used for each element, combiner used for merging)
        In accumulator: main
        In accumulator: main
        In accumulator: main
        In combiner: main
        In combiner: main
        In accumulator: ForkJoinPool.commonPool-worker-1
        In accumulator: ForkJoinPool.commonPool-worker-1
        In combiner: ForkJoinPool.commonPool-worker-1
        In accumulator: ForkJoinPool.commonPool-worker-1
        In combiner: ForkJoinPool.commonPool-worker-1
        In combiner: ForkJoinPool.commonPool-worker-1
        {a=3, b=2, c=1}
        */
    }
}
[/code]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1518</wp:post_id>
  <wp:post_date>2015-10-14 17:14:20</wp:post_date>
  <wp:post_date_gmt>2015-10-14 15:14:20</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>java-8-reduce-method</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="java8"><![CDATA[java8]]></category>
  <category domain="category" nicename="jdk8"><![CDATA[jdk8]]></category>
  <category domain="category" nicename="reduce"><![CDATA[reduce]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[15817156699]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>My thread pool</title>
  <link>https://bmwieczorek.wordpress.com/2015/10/14/my-thread-pool/</link>
  <pubDate>Wed, 14 Oct 2015 19:11:50 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1520</guid>
  <description/>
  <content:encoded><![CDATA[[code language="java"]
package com.bawi.threads;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;

public class MyThreadPool {
    
    static class MyBlockingQueue {
        Lock lock = new ReentrantLock();
        Condition notEmpty;
        Runnable runnable;
        
        public MyBlockingQueue() {
            lock = new ReentrantLock();
            notEmpty = lock.newCondition();
        }

        public Runnable take() throws InterruptedException {
            try {
                System.out.println(&quot;[&quot; + Thread.currentThread().getName() + &quot;] Take: Before lockInterruptibly&quot;);
                lock.lockInterruptibly();
                System.out.println(&quot;[&quot; + Thread.currentThread().getName() + &quot;] Take: After lockInterruptibly&quot;);
                while (runnable == null) {
                    System.out.println(&quot;[&quot; + Thread.currentThread().getName() + &quot;] Take: Before await&quot;);
                    notEmpty.await(); // releases the lock and becomes disabled for thread scheduling, start waiting for signal(all) or interrupts  
                    System.out.println(&quot;[&quot; + Thread.currentThread().getName() + &quot;] Take: After await&quot;);
                }
                return runnable;
            } 
            finally {
                runnable = null;
                lock.unlock();
            }
        }
        
        public void put(Runnable newRunnable) {
            try {
                System.out.println(&quot;[&quot; + Thread.currentThread().getName() + &quot;] Put: Before lockInterruptibly&quot;);
                lock.lockInterruptibly();
                System.out.println(&quot;[&quot; + Thread.currentThread().getName() + &quot;] Put: After lockInterruptibly&quot;);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            try {
                this.runnable = newRunnable;
                System.out.println(&quot;[&quot; + Thread.currentThread().getName() + &quot;] Put: Before signal&quot;);
                notEmpty.signal();
                System.out.println(&quot;[&quot; + Thread.currentThread().getName() + &quot;] Put: After signal&quot;);
            }
            finally {
                lock.unlock();
            }
        }
        
    }
    
    static class MyPool {
        
        MyBlockingQueue myBlockingQueue = new MyBlockingQueue();
        List&lt;Thread&gt; workerThreads = new ArrayList&lt;&gt;();
        
        public static MyPool createAndStartThreadPool(int size) {
            MyPool myPool = new MyPool().withWorkerThreadCount(size);
            myPool.start();
            return myPool;
            
        }
        private MyPool withWorkerThreadCount(int size) {
            addWorkers(size);
            return this;
        }
        private void start() {
            System.out.println(&quot;[&quot; + Thread.currentThread().getName() + &quot;] Starting my worker threads in my pool&quot;);
            workerThreads.stream().forEach(Thread::start);
        }
        private void addWorkers(int size) {
            for (int i = 0; i &lt; size; i++) {
                workerThreads.add(createWorkerThread());
            }
        }
        private Thread createWorkerThread() {
            return new Thread(new Runnable() {
                
                @Override
                public void run() {
                    System.out.println(&quot;[&quot; + Thread.currentThread().getName() + &quot;] Started my worker thread in my pool&quot;);
                    while (true) {
                        Runnable runnable;
                        try {
                            runnable = myBlockingQueue.take();
                        } catch (@SuppressWarnings(&quot;unused&quot;) InterruptedException e) {
                            System.out.println(&quot;[&quot; + Thread.currentThread().getName() + &quot;] My worker thread interrupted, exiting ...&quot;);
                            return;
                        }

                        System.out.println(&quot;[&quot; + Thread.currentThread().getName() + &quot;] Starting to run a task&quot;);
                        runnable.run();
                        System.out.println(&quot;[&quot; + Thread.currentThread().getName() + &quot;] Finished running a task&quot;);
                    }
                }
            });
        }
        public void submit(Runnable r) {
            myBlockingQueue.put(r);
        }
        public void shutdown() {
            workerThreads.stream().forEach(Thread::interrupt);
        };
    }
    
    public static void main(String[] args) {
        MyPool myPool = MyPool.createAndStartThreadPool(2);

        myPool.submit(() -&gt; doTheWork(&quot;My Runnable 1&quot;));
        myPool.submit(() -&gt; doTheWork(&quot;My Runnable 2&quot;));
        myPool.submit(() -&gt; doTheWork(&quot;My Runnable 3&quot;));
        
        sleepMillis(5000);

        myPool.shutdown();

    }

    static void sleepMillis(int sleepMillis) {
        try {
            Thread.sleep(sleepMillis);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }

    private static void doTheWork(String name) {
        int sleepMillis = 1000;
        System.out.println(&quot;Task: &quot; + name + &quot;, sleeping: &quot; + sleepMillis +  &quot; ms ... [&quot; + Thread.currentThread().getName() + &quot;]&quot;); 
        sleepMillis(sleepMillis);
    }
}

/*
[main] Starting my worker threads in my pool
[Thread-0] Started my worker thread in my pool
[Thread-1] Started my worker thread in my pool
[Thread-0] Take: Before lockInterruptibly
[Thread-0] Take: After lockInterruptibly
[Thread-0] Take: Before await
[Thread-1] Take: Before lockInterruptibly
[Thread-1] Take: After lockInterruptibly
[Thread-1] Take: Before await
[main] Put: Before lockInterruptibly
[main] Put: After lockInterruptibly
[main] Put: Before signal
[main] Put: After signal
[Thread-0] Take: After await
[Thread-0] Starting to run a task
Task: My Runnable 1, sleeping: 1000 ms ... [Thread-0]
[main] Put: Before lockInterruptibly
[main] Put: After lockInterruptibly
[main] Put: Before signal
[main] Put: After signal
[Thread-1] Take: After await
[Thread-1] Starting to run a task
Task: My Runnable 2, sleeping: 1000 ms ... [Thread-1]
[main] Put: Before lockInterruptibly
[main] Put: After lockInterruptibly
[main] Put: Before signal
[main] Put: After signal
[Thread-0] Finished running a task
[Thread-0] Take: Before lockInterruptibly
[Thread-0] Take: After lockInterruptibly
[Thread-0] Starting to run a task
Task: My Runnable 3, sleeping: 1000 ms ... [Thread-0]
[Thread-1] Finished running a task
[Thread-1] Take: Before lockInterruptibly
[Thread-1] Take: After lockInterruptibly
[Thread-1] Take: Before await
[Thread-0] Finished running a task
[Thread-0] Take: Before lockInterruptibly
[Thread-0] Take: After lockInterruptibly
[Thread-0] Take: Before await
[Thread-1] My worker thread interrupted, exiting ...
[Thread-0] My worker thread interrupted, exiting ...
*/
[/code]
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1520</wp:post_id>
  <wp:post_date>2015-10-14 21:11:50</wp:post_date>
  <wp:post_date_gmt>2015-10-14 19:11:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>my-thread-pool</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="thread-pool"><![CDATA[thread pool]]></category>
  <category domain="category" nicename="threadpool"><![CDATA[threadpool]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[15824021434]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>My thread pool second implementation</title>
  <link>https://bmwieczorek.wordpress.com/2015/10/16/my-thread-pool-second-implementation/</link>
  <pubDate>Fri, 16 Oct 2015 13:04:08 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1522</guid>
  <description/>
  <content:encoded><![CDATA[[code language="java"]
package com.bawi.threads.my.thread.pool;

import java.util.LinkedList;

public class MyBlockingQueue&lt;T&gt; {
	
	private LinkedList&lt;T&gt; linkedList = new LinkedList&lt;&gt;();
	private final int size;
	
	public MyBlockingQueue(int size) {
		this.size = size;
	}
	
	public synchronized T take() throws InterruptedException {
		while (linkedList.size() == 0) {
			wait();
		};
		notify();
		return linkedList.removeLast();
	}
	
	public synchronized void put(T element) throws InterruptedException {
		while (linkedList.size() == size) {
			wait();
		}
		linkedList.addFirst(element);
		notify();
	}
}

package com.bawi.threads.my.thread.pool;

public class MyWorkerThread extends Thread {

    private MyBlockingQueue&lt;Runnable&gt; queue;
    private volatile boolean isShutdown = false;

    public MyWorkerThread(MyBlockingQueue&lt;Runnable&gt; queue) {
        this.queue = queue;
    }

    @Override
    public void run() {
        while (!isShutdown) {
            try {
                Runnable task = queue.take();
                task.run();
            } catch (InterruptedException e) {
                System.out.println(&quot;[&quot; + Thread.currentThread().getName() + &quot;] Interrupted waiting on next task&quot;);
            }
        }
    }

    public void shutdown() {
        isShutdown = true;
        interrupt();
    }
}

package com.bawi.threads.my.thread.pool;

import java.util.ArrayList;
import java.util.List;

public class MyThreadPoolBuilder {

    private int workerThreadsCount;
    private int blockingQueueSize;

    public MyThreadPoolBuilder withWorkerThreadCount(int count) {
        workerThreadsCount = count;
        return this;
    }

    public MyThreadPoolBuilder withBlockingQueueSize(int size) {
        blockingQueueSize = size;
        return this;
    }

    public MyThreadPool build() {
        validate();
        MyBlockingQueue&lt;Runnable&gt; blockingQueue = new MyBlockingQueue&lt;&gt;(blockingQueueSize);
        List&lt;MyWorkerThread&gt; workerThreads = new ArrayList&lt;&gt;(workerThreadsCount);
        for (int i = 0; i &lt; workerThreadsCount; i++) {
            workerThreads.add(new MyWorkerThread(blockingQueue));
        }
        return new MyThreadPool(workerThreads, blockingQueue);
    }

    private void validate() {
        if (blockingQueueSize &lt;= 0) {
            throw new IllegalArgumentException(&quot;Blocking queue size must me positive&quot;);
        }
        if (workerThreadsCount &lt;= 0) {
            throw new IllegalArgumentException(&quot;Worker thread count must me positive&quot;);
        }
    }

    public MyThreadPool buildAndStart() {
        MyThreadPool myThreadPool = build();
        myThreadPool.start();
        return myThreadPool;
    }
}


package com.bawi.threads.my.thread.pool;

import java.util.List;

public class MyThreadPool {

    private final MyBlockingQueue&lt;Runnable&gt; blockingQueue;
    private final List&lt;MyWorkerThread&gt; workerThreads;
    private volatile boolean isShutdown = false;

    public MyThreadPool(List&lt;MyWorkerThread&gt; workerThreads, MyBlockingQueue&lt;Runnable&gt; blockingQueue) {
        this.workerThreads = workerThreads;
        this.blockingQueue = blockingQueue;
    }

    public void start() {
        workerThreads.stream().forEach(MyWorkerThread::start);
    }

    public void submit(Runnable task) {
        if (!isShutdown) {
            try {
                blockingQueue.put(task);
            } catch (InterruptedException e) {
                System.out.println(&quot;Interrupted putting new task on a processing blockingQueue&quot;);
            }
        }
    }

    public void shutdownNow() {
        isShutdown = true;
        workerThreads.stream().forEach(MyWorkerThread::shutdown);
    }

    public static void main(String[] args) throws InterruptedException {
        MyThreadPool myThreadPool = new MyThreadPoolBuilder()
                .withWorkerThreadCount(2)
                .withBlockingQueueSize(4)
                .buildAndStart();

        myThreadPool.submit(createTask(1));
        myThreadPool.submit(createTask(2));
        myThreadPool.submit(createTask(3));
        myThreadPool.submit(createTask(4));
        myThreadPool.submit(createTask(5));
        myThreadPool.submit(createTask(6));

        Thread.sleep(10); // sleep until all tasks will be picked up for processing
        myThreadPool.shutdownNow();
    }

    private static Runnable createTask(int taskNumber) {
        return () -&gt; {
            System.out.println(&quot;[&quot; + Thread.currentThread().getName() + &quot;] Hello from task #&quot; + taskNumber);
        };
    }

}

[Thread-0] Hello from task #1
[Thread-1] Hello from task #2
[Thread-0] Hello from task #3
[Thread-1] Hello from task #4
[Thread-1] Hello from task #6
[Thread-0] Hello from task #5
[Thread-0] Interrupted waiting on next task
[Thread-1] Interrupted waiting on next task


#Ouputput
[/code]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1522</wp:post_id>
  <wp:post_date>2015-10-16 15:04:08</wp:post_date>
  <wp:post_date_gmt>2015-10-16 13:04:08</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>my-thread-pool-second-implementation</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="thread-pool"><![CDATA[thread pool]]></category>
  <category domain="category" nicename="threadpool"><![CDATA[threadpool]]></category>
  <category domain="category" nicename="threads"><![CDATA[threads]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[15884862754]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Java race condition between threads and solution</title>
  <link>https://bmwieczorek.wordpress.com/2015/10/17/java-race-condition-between-threads-and-solution/</link>
  <pubDate>Sat, 17 Oct 2015 13:43:10 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1525</guid>
  <description/>
  <content:encoded><![CDATA[[code language="java"]
package com.bawi.threads;

public class MyRaceConditionTest {

    static class Counter {
        private long value = 0;

        public void add(long v) {
            value = value + v;
        }

        public long getValue() {
            return value;
        }
    }

    public static void main(String[] args) throws InterruptedException {
        while (true) {
            Counter counter = new Counter();

            Thread t1 = new Thread(() -&gt; counter.add(1));
            Thread t2 = new Thread(() -&gt; counter.add(2));
            t1.start();
            t2.start();

            t1.join();
            t2.join();

            long value = counter.getValue();
            System.out.println(&quot;value=&quot; + value);

            if (value != 3L) {
                throw new RuntimeException(&quot;value=&quot; + value);
            }
        }
    }
}

/*
value=3
...
value=1
Exception in thread &quot;main&quot; java.lang.RuntimeException: value=1
	at com.bawi.threads.MyRaceConditionTest.main(MyRaceConditionTest.java:33)
*/

[/code]

The add method execution consists of 3 steps: read value from memory to register, add value to the register, write new register value to memory. However, operating system can switch between threads at any time. So it possible the following order happened:
1) t1 reads value 0 from memory to t1 register, 
2) t2 reads value 0 from memory to t2 register, 
3) t2 increases register value from 0 to 2, 
4) t2 writes register value '2' to memory, 
5)  t1 increases register value from 0 to 1, 
6) t1 writes register value '1' to memory.
The race condition is when the result depends on the order how threads execute critical section (one or more threads writes to the resource). Race condition does not occurs if there are only reads and no writes. 
  

Solution:
1) apply synchronized at method level (public synchronized void add...)
2) apply synchronized at code level (synchronized (this) { .... } )
3) apply ReentantLock:
[code language="java"]
    static class ReentrantLockCounter {
        private Lock lock = new ReentrantLock();
        private long value = 0;

        public void add(long v) {
            lock.lock();
            value = value + v;
            lock.unlock();
        }
        public long getValue() {
            return value;
        }
    }
[/code]
4) apply AtomicLong:
[code language="java"]
    static class AtomicCounter {
        private AtomicLong value = new AtomicLong();
        public void add(long v) {
            value.getAndAdd(v);
        }
        public long getValue() {
            return value.get();
        }
    }
[/code]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1525</wp:post_id>
  <wp:post_date>2015-10-17 15:43:10</wp:post_date>
  <wp:post_date_gmt>2015-10-17 13:43:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>java-race-condition-between-threads-and-solution</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="concurrency"><![CDATA[Concurrency]]></category>
  <category domain="post_tag" nicename="concurrency-2"><![CDATA[concurrency]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="race-condition"><![CDATA[race condition]]></category>
  <category domain="category" nicename="threads"><![CDATA[threads]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[15918061103]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[java-race-condition-between-threads]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Java Thread run() vs start()</title>
  <link>https://bmwieczorek.wordpress.com/2015/10/17/java-thread-run-vs-start/</link>
  <pubDate>Sat, 17 Oct 2015 14:51:31 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1530</guid>
  <description/>
  <content:encoded><![CDATA[[code language="java"]
package com.bawi.threads;

public class ThreadRunVsStart {
    public static void main(String[] args) {
        // start new thread and task will be executed in the new thread
        new Thread(() -&gt; System.out.println(Thread.currentThread().getName() + &quot; start&quot;)).start(); 

        // common mistake: execute task in the current thread (does not start new one)
        new Thread(() -&gt; System.out.println(Thread.currentThread().getName() + &quot; run&quot;)).run(); 
    }
}
// Thread-0 start
// main run
[/code]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1530</wp:post_id>
  <wp:post_date>2015-10-17 16:51:31</wp:post_date>
  <wp:post_date_gmt>2015-10-17 14:51:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>java-thread-run-vs-start</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="run"><![CDATA[run]]></category>
  <category domain="category" nicename="start"><![CDATA[start]]></category>
  <category domain="category" nicename="threads"><![CDATA[threads]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[15919710923]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[java-concurrency-notes]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Java concurrency vs parallelism</title>
  <link>https://bmwieczorek.wordpress.com/2015/10/17/java-concurrency-vs-parallelism/</link>
  <pubDate>Sat, 17 Oct 2015 17:58:40 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1536</guid>
  <description/>
  <content:encoded><![CDATA[Concurrent processing - when application is making progress on multiple tasks (concurrently) switching while executing from one task to another. One task may not be completely finished when the next task is started to be processed. Opposite to that is sequential processing of tasks - one at the time and one after another.

Parallel processing - when a task can be split by application into smaller units of work processed independently (parallely) at the same time especially on multicore/cpu machines. The opposite to parallel processing of a task is serial processing from start to end. 

When the machine has very busy cpu doing other work (e.g. web server or db on the same box) then parallel or concurrent may give little gain or even loss. Splitting work execution across different cpu/core requires additional coordination that comes with an overhead. If a task is considerably small it may not worth functional parallel nor concurrent processing. Measure it. 

Note that IO operations are not so CPU intensive and are good candidates for functional parallelism e.g. getting an aggregated result from data coming from different subsystems like e.g. http web resources. ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1536</wp:post_id>
  <wp:post_date>2015-10-17 19:58:40</wp:post_date>
  <wp:post_date_gmt>2015-10-17 17:58:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>java-concurrency-vs-parallelism</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="concurrency"><![CDATA[Concurrency]]></category>
  <category domain="post_tag" nicename="concurrency-2"><![CDATA[concurrency]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="parallelism"><![CDATA[parallelism]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[15924285913]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>AtomicLong examples</title>
  <link>https://bmwieczorek.wordpress.com/2015/10/18/atomiclong-examples/</link>
  <pubDate>Sun, 18 Oct 2015 10:07:47 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1541</guid>
  <description/>
  <content:encoded><![CDATA[[code language="java"]
new AtomicLong().get(); // default 0
new AtomicLong().incrementAndGet(); // 1
new AtomicLong().addAndGet(2L); // 2
new AtomicLong(3L).updateAndGet(n -&gt; n * n); // 9
new AtomicLong(3L).accumulateAndGet(2, (n,x) -&gt; n * x); // 6
[/code]
Supports lock-less atomic operations]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1541</wp:post_id>
  <wp:post_date>2015-10-18 12:07:47</wp:post_date>
  <wp:post_date_gmt>2015-10-18 10:07:47</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>atomiclong-examples</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="atomiclong"><![CDATA[AtomicLong]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="jdk8"><![CDATA[jdk8]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[15943798505]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Two methods synchronized on the same monitor accessed by two threads</title>
  <link>https://bmwieczorek.wordpress.com/2015/10/19/two-methods-synchronized-on-the-same-monitor-accessed-by-two-threads/</link>
  <pubDate>Mon, 19 Oct 2015 15:52:34 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1549</guid>
  <description/>
  <content:encoded><![CDATA[[code language="java"]
package com.bawi.threads;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class TwoSynchronizedMethodOnSameMonitor {
    
    private static final Logger LOGGER = LoggerFactory.getLogger(TwoSynchronizedMethodOnSameMonitor.class);
    
    public static void main(String[] args) throws InterruptedException {
        LOGGER.debug(&quot;Started&quot;);
        
        Thread t1 = new Thread(() -&gt; {
            LOGGER.debug(&quot;Started&quot;);
            
            // we explicitly sleep 10 ms in main thread for thread t1 to enter synchronized method sychronizedSleep1 first
            sychronizedSleep1(3000);
            LOGGER.debug(&quot;Finished&quot;);
        });
        t1.start();
        sleepMillis(10); // wait 10 ms so thread t1 enters synchronized sychronizedSleep1 method first

        /* Main thread cannot enter synchronizedSleep2 as thread t1 is already in synchronized method sychronizedSleep1
           that owns the same shared monitor (TwoSynchronizedMethodOnSameMonitor.class) as synchronizedSleep2. 
           So main thread needs to wait 3s till thread t1 leave sychronizedSleep1.
           After that time main thread can eventually enter synchronizedSleep2. 
        */

        synchronizedSleep2(2000); 
        LOGGER.debug(&quot;Finished&quot;);
    }

    public static synchronized void sychronizedSleep1(int sleepMillis) {
        LOGGER.debug(&quot;synchronized sleep1&quot;);
        sleepMillis(sleepMillis);
    }

    public static synchronized void synchronizedSleep2(int sleepMillis) {
        LOGGER.debug(&quot;synchronized sleep2&quot;);
        sleepMillis(sleepMillis);
    }

    public static void sleepMillis(int millis) {
        try {
            Thread.sleep(millis);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }
}

/* 
2015-10-19 17:35:23,158|main    |Started
2015-10-19 17:35:23,210|Thread-0|Started
2015-10-19 17:35:23,210|Thread-0|synchronized sleep1

2015-10-19 17:35:26,210|Thread-0|Finished
2015-10-19 17:35:26,210|main    |synchronized sleep2

2015-10-19 17:35:28,210|main    |Finished
*/
[/code]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1549</wp:post_id>
  <wp:post_date>2015-10-19 17:52:34</wp:post_date>
  <wp:post_date_gmt>2015-10-19 15:52:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>two-methods-synchronized-on-the-same-monitor-accessed-by-two-threads</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="monitor"><![CDATA[monitor]]></category>
  <category domain="category" nicename="synchronized"><![CDATA[synchronized]]></category>
  <category domain="category" nicename="threads"><![CDATA[threads]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[15984539276]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Java Memory Model (including volatile happens-before guarantee and synchronized)</title>
  <link>https://bmwieczorek.wordpress.com/2015/10/21/java-memory-model/</link>
  <pubDate>Wed, 21 Oct 2015 10:10:04 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1553</guid>
  <description/>
  <content:encoded><![CDATA[<strong>Stack</strong> (pl: stos) (LIFO = last in, first out), data structure with push and pop

<strong>Heap</strong> (pl: sterta) is a tree-based data structure with all elements following the same pattern of ordering of values (e.g. max-heep: with parent element having value greater then its nodes). 

Each thread has it own stack and threads' stacks are not shared between threads so all the data on the thread's stack is thread safe. Each stack contains information what methods were called to reach current execution point (so called method execution "call stack") and these methods' local variables (local primitives and local references to objects). Even if threads execute the same method their stack would get its own version of all local variables. One thread can only see its own stack data and cannot see stack data from other threads. One thread calling another thread can only pass a copy of its local primitive variables to another thread but not share it. 
Each new method execution adds a stack frame on the top of the stack and such frame is removed after the methods returns. Stack is fast and smaller that heap. That is why local primitives and local reference variables are stored on the stack. 

On the other hand object graphs can get very big and so they are stored on the heap. Object versions of primitives such as e.g. Integer as also stored on the heap. All threads have access to the heap objects (provided they have a reference to a particular object). The heap is shared among threads so threads can potentially modify the state of same objects at the same time what can lead to race conditions. 


[code language="java"]
class MyClass {

  MyObject myObject = // myObject reference is an object member variable (field) and is created on heap
                      // object member variables (fields) are created on heap
           new MyObject(); // instance of MyObject is created on heap (as all objects)
  
  long id = 123L; // id is a primitive member variable (field) and is also stored on the heap

  static Integer number = new Integer(1); // static class member variables are stored on the heap 
                                          //with its class definition

  public void run() {
    int counter = 1234567; // counter is a local primitive variable of type int, 
                     // counter is created on stack 
                     // (local primitives are created on stack)

    MyObj2 myObj2 = // myObj2 is a local variable referencing object of type MyObj2, 
                    // myObj2 is created on stack 
                    // (local object references are created on stack)

              new MyObj2(); // instance of MyObj2 is created on heap** 
                    // (objects are created on heap)
                    // NOTE if MyObj2 had local variables they would still be stored on 
                    // the stack even though the object itself is stored on the heap  


   Configuration config =
              Configuration.getInstance(); // returns the same configuration 
                                   // for all threads calling this method***
 
  }
}
[/code]
 
** if JVM has explicitly escape analysis flag on and myObj2 would never escape the method (e.g. not returned by the method nor passed to other methods outside) so that others threads could not share it then JVM may decide to create MyObj2 on the stack instead of heap 

Assuming escape analysis disabled, then each thread calling run() method will have a new copy of counter primitive local variable and each thread will create a new separate instance of MyObject2 on the heap. Each thread will have a separate local reference (created on the stack) to the corresponding object of type MyObject2 (created on the heap).

***It is also possible for threads to have their own local reference pointing to the same object created on the heap e.g. created by static factory method Configuration.getInstance() returning the same shared instance of Configuration object (singleton/global state). If threads start to modify the configuration then configuration changes may not be visible to other threads or threads can overwrite each other changes which leads to race conditions. Thread safety can be achieved then by applying additional synchronization e.g. synchronized method or block. 

<strong>Immutability</strong>
If objects needs to be passed among threads then the best way is to make them immutable (once created cannot change internal state). They should not have any setters nor public fields. If they expose some internal state (e.g.  immutableObj.getNames() returning a list), then it should be unmodifiable (e.g Collections.UnmodifiableList) or return a deep copy (new ArrayList(internalList)). It not recommended but if required that such immutable object needs to expose a method to modify the state then such method should return a completely new instance of such immutable object (e.g. ImmutableObject add(List newNames) return new ImmutableObject(addAll(newNames, this.getNames)) ). If a class internally has a reference to immutable field (member variable) it does not necessary mean that this class is immutable itself as it may expose a setter to reset this reference and so the usage of such class may not be thread safe. Then additional synchronization between threads is needed.

<strong>RAM, CPU cache and CPU registers</strong>
Modern computers have RAM (main shared memory) and CPUs with per CPU cache memory (a dedicated cache for a CPU) and per CPU registers (each CPU with its own register). The regular update or read operations flow goes from RAM to CPU cache(s) and then to CPU registers and back to main memory. 

<strong>Volatile</strong>
If data flush to the RAM is delayed then one thread may not see the data changed by another thread using the different CPU cache. Java 'volatile' keyword makes sure that are directly read from RAM and always written to main memory when updated. Since Java 5 volatile also gives extended visibility guarantee so called happens-before guarantee:

[code language="java"]
public class VolatileHappensBeforeGuarantee {

    private static final Logger LOGGER = LoggerFactory.getLogger(VolatileHappensBeforeGuarantee.class);

    static boolean nonVolatileDone = false;
    //static boolean volatileDone = false;
    static volatile boolean volatileDone = false; // volatile write

    public static void main(String[] args) {
        LOGGER.debug(&quot;started&quot;);

        new Thread(new Runnable() {
             
            @Override
            public void run() {
                LOGGER.debug(&quot;started&quot;);
                while (!nonVolatileDone) { // note that synchronization is still made on non-volatile flag but volatile  
                                           // flag makes the non-volatile flag seen eventually as described below

                    boolean done = volatileDone; // volatile read makes also all subsequent non-volatile reads from RAM 
                                                 // so non-volatile read is also from RAM

                }
                LOGGER.debug(&quot;stopped&quot;);
            }
        }).start();

        sleepMillis(100); // give additional time to make sure thread-0 started already

        nonVolatileDone = true;
        volatileDone = true; // volatile write makes all preceding writes (so nonVolatileDone = true as well) 
                             // also to be written to RAM

        LOGGER.debug(&quot;stopped&quot;);
    }

    public static void sleepMillis(int millis) {
        try {
            Thread.sleep(millis);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }
}

/*
2015-10-22 14:08:54,401|main    |started
2015-10-22 14:08:54,401|Thread-0|started
2015-10-22 14:08:54,510|main    |stopped
2015-10-22 14:08:54,510|Thread-0|stopped

but if we remove volatile then
2015-10-22 14:09:59,055|main    |started
2015-10-22 14:09:59,055|Thread-0|started
2015-10-22 14:09:59,164|main    |stopped
(with Thread-0 still running)

Explanation:
Volatile happens-before guarantee makes non-volatile variables write before volatile write to be flushed to RAM as well. 
Then as long as another thread read the volatile variable (from RAM) then the thread will also see changes to the non-volatile variables. 
Note: the example above showed synchronization on a non volatile variable to demonstrate extended visibility. However, it is a good practice for simplicity and clarity to make synchronization on the volatile variable.
*/
[/code]
Thanks to that extended visibility guarantee it is not needed to declare all variables as volatile but only a few.

<strong>Synchronized</strong>
Another case is when two threads read the same value from the main memory to their own CPU cache and each of the threads run concurrently increasing the value by one. Then one thread could write original value +1 to the main memory and that value could be overwritten by another that also to the same value (original +1) - even if the variables were declared as volatile. Then the result would be original + 1 instead of expected original +2. To make sure that this increase operation (read, update, write) operation is executed sequentially and atomically by both of the threads Java introduced synchronized block. Synchronized allows only one thread to enter and execute the critical section. All variables in that synchronized block are read from the main memory and flushed back to the main memory on exit of the synchronized block, regardless if the variables declared in synchronized block are volatile or not. All the synchronized methods or blocks that are synchronized on the same object can only have one thread executing it at the same time while other threads waiting for that thread to exit that synchronized block. The difference between synchronization on instance (this) vs on class is that when threads have their own instances of a class with instance synchronized methods/block then these methods will not block. In case if global synchronized access to the method/block is needed then synchronization on class is needed. In other words: one thread per object instance (can be one or more) vs one thread per class (which is typically only one in the JVM). Synchronized gives also visibility guarantee for the data in the synchronized method/block for threads reading and writing this data.

<strong>Summary</strong>:
<strong>Stack</strong>: all local primitives and local reference variables (each thread is its own copy)

<strong>Heap</strong>: all objects (including Object versions of primitives e.g. Integer), all object member variables (fields) (including fields of primitive type and object reference), all static class members variables (along with class definition) 

<strong>volatile</strong> variable - makes reads/writes directly from/to RAM so that the value is always visible to all threads. Since Java 5 volatile also gives happens-before guarantee what means that all the non-volatile variables writes happening before volatile variable write will be also flushed to RAM main memory when the volatile variable is written. Then, when another thread reads the volatile variable from RAM it will also see changes to non-volatile variables that were written along with the volatile write. Moreover, volatile write and reads vs non-volatile writes and reads cannot be reordered (as that would affect which non-volatile variables will be flushed to RAM along with the volatile write and which non-volatile variable changes would be visible to another thread that reads volatile variables). The use case for volatile is when threads modify the volatile variable with that value that does not depend on it previous value (no re-reading), e.g. volatileIsFinished = true. There is no guarantee that making e.g. long primitive increment by two or more threads will be atomic (thread could read the same value from RAM, update it in their own CPU registers and flush the same result to RAM overwriting each other change). To solve that problem use synchronized or even better Atomic classes e.g. AtomicLong.

<strong>synchronized</strong> method/block - allows only one thread at the time (sequentially) to execute the critical section code with read/writes directly from/to RAM visible to all the threads (visibility guarantee between threads).]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1553</wp:post_id>
  <wp:post_date>2015-10-21 12:10:04</wp:post_date>
  <wp:post_date_gmt>2015-10-21 10:10:04</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>java-memory-model</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="happens-before-guarantee-2"><![CDATA[happens-before guarantee]]></category>
  <category domain="category" nicename="happens-before-guarantee"><![CDATA[happens-before-guarantee]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="java-memory-model"><![CDATA[Java Memory Model]]></category>
  <category domain="category" nicename="memory"><![CDATA[memory]]></category>
  <category domain="category" nicename="synchronized"><![CDATA[synchronized]]></category>
  <category domain="category" nicename="volatile"><![CDATA[volatile]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[16046791844]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Java program - number of threads started, memory size and garbage collectors on JConsole or JVisualVM</title>
  <link>https://bmwieczorek.wordpress.com/2015/10/23/java-program-number-of-threads-started-memory-size-and-garbage-collectors-on-jconsole-or-jvisualvm/</link>
  <pubDate>Fri, 23 Oct 2015 15:03:40 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1561</guid>
  <description/>
  <content:encoded><![CDATA[I have written and started a simple program:

[code language="java"]
package com.bawi.threads;

public class MySleepingMainThread {
    public static void main(String[] args) throws InterruptedException {
        Thread.sleep(10000000);
    }
}
[/code]
Eclipse compiled the MySleepingMainThread.java to

[code language="bash"]
C:\dev\my-projects\my-java-threads\target\classes\com\bawi\threads&gt;dir
23-Oct-15  16:39               562 MySleepingMainThread.class
[/code]
and I started that from windows cmd via:

[code language="bash"]
C:\dev\my-projects\my-java-threads\target\classes&gt;java -cp . com.bawi.threads.MySleepingMainThread
[/code]
Then I got the java pid by jcmd

[code language="bash"]
C:\dev\env\jdk1.8.0_66\bin&gt;jcmd
12784 sun.tools.jcmd.JCmd
9204 com.bawi.threads.MySleepingMainThread
[/code]
and took the thread dump using jstack:

[code language="bash"]
C:\dev\env\jdk1.8.0_66\bin&gt;jstack -l 9204
2015-10-23 17:09:57
Full thread dump Java HotSpot(TM) 64-Bit Server VM (25.66-b17 mixed mode):

&quot;Service Thread&quot; #9 daemon prio=9 os_prio=0 tid=0x00000000589d4000 nid=0x11a0 runnable [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

   Locked ownable synchronizers:
        - None

&quot;C1 CompilerThread2&quot; #8 daemon prio=9 os_prio=2 tid=0x000000005895b800 nid=0x3a78 waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

   Locked ownable synchronizers:
        - None

&quot;C2 CompilerThread1&quot; #7 daemon prio=9 os_prio=2 tid=0x000000005895a000 nid=0x2b44 waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

   Locked ownable synchronizers:
        - None

&quot;C2 CompilerThread0&quot; #6 daemon prio=9 os_prio=2 tid=0x0000000058954800 nid=0x2a04 waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

   Locked ownable synchronizers:
        - None

&quot;Attach Listener&quot; #5 daemon prio=5 os_prio=2 tid=0x0000000057523000 nid=0x1438 waiting on condition [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

   Locked ownable synchronizers:
        - None

&quot;Signal Dispatcher&quot; #4 daemon prio=9 os_prio=2 tid=0x0000000057522000 nid=0x1974 runnable [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

   Locked ownable synchronizers:
        - None

&quot;Finalizer&quot; #3 daemon prio=8 os_prio=1 tid=0x00000000574c6800 nid=0xbcc in Object.wait() [0x000000005894e000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x00000000d5b070b8&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:143)
        - locked &lt;0x00000000d5b070b8&gt; (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:164)
        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:209)

   Locked ownable synchronizers:
        - None

&quot;Reference Handler&quot; #2 daemon prio=10 os_prio=2 tid=0x00000000574bf800 nid=0x1494 in Object.wait() [0x000000005870f000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on &lt;0x00000000d5b06af8&gt; (a java.lang.ref.Reference$Lock)
        at java.lang.Object.wait(Object.java:502)
        at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:157)
        - locked &lt;0x00000000d5b06af8&gt; (a java.lang.ref.Reference$Lock)

   Locked ownable synchronizers:
        - None

&quot;main&quot; #1 prio=5 os_prio=0 tid=0x00000000021dd800 nid=0x25bc waiting on condition [0x00000000023cf000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
        at java.lang.Thread.sleep(Native Method)
        at com.bawi.threads.MySleepingMainThread.main(MySleepingMainThread.java:5)

   Locked ownable synchronizers:
        - None

&quot;VM Thread&quot; os_prio=2 tid=0x00000000574b9800 nid=0x498 runnable

&quot;GC task thread#0 (ParallelGC)&quot; os_prio=0 tid=0x000000000206c000 nid=0x2fc4 runnable

&quot;GC task thread#1 (ParallelGC)&quot; os_prio=0 tid=0x000000000206d800 nid=0x14d0 runnable

&quot;GC task thread#2 (ParallelGC)&quot; os_prio=0 tid=0x000000000206f000 nid=0x14bc runnable

&quot;GC task thread#3 (ParallelGC)&quot; os_prio=0 tid=0x0000000002070800 nid=0x3540 runnable

&quot;VM Periodic Task Thread&quot; os_prio=2 tid=0x00000000589f3000 nid=0x1af4 waiting on condition

JNI global references: 5
[/code]

and noticed 15 threads in the listing. These were "main" thread, but also GC task threads (4), VM threads (2), Compiler threads (3), Service thread, Attach Listener, Signal Dispather, Finalizer, Reference Handler. Most of non "main" threads were daemon threads apart from GC and VM threads.

When connecting via jconsole or jvisualvm I got other 11 thread listed: "main", Attach Listener, Signal Dispather, Finalizer, Reference Handler, and also RMI TCP Accept-0, RMI scheduler(0), RMI TCP Connection to my local machine (3), JMX server connection. Note there were no GC threads mentioned there.

JConsole showed after startup 16MB heap usage (increases to 35MB and the minor gc knocks it down to 5MB after reaching 35MB in eden, each scan taking 12 ms), committed 128MB and max 1.9GB, loaded 1.6k classes (remains constant).

JConsole lists two garbage collectors:

- PS Scavenge (enabled with -XX:+UseParallelGC) - parallel (uses multiple threads) eden/surivor (YOUNG GENERATION) space collector. After first minor scan, the objects were moved from eden to s1; then after second minor scan data from eden and s1 is moved to s0; after third scan objects from eden and s0 are moved to s1.
- PS MarkSweep - parallel (uses multiple threads) OLD GENERATION collector (not same as ConcurrentMarkSweep) (0 collections so far).

Here NOT used OLD GENERATION collector: ConcurrentMarkSweep (enabled with -XX:+UseConcMarkSweepGC) - the concurrent collector that attempts to do most of the garbage collection work in the background without stopping application threads or minimize the pause time (stop-the-world). Note if the concurrent collector fails to keep up with the garbage, it fails over to the serial MarkSweepCompact collector for (just) the next GC.

Jinfo gives me additional information such as

[code language="bash"]
C:\dev\env\jdk1.8.0_66\bin&gt;jinfo.exe 9992
Attaching to process ID 9992, please wait...
Debugger attached successfully.
Server compiler detected.
JVM version is 25.66-b17
Java System Properties:

java.runtime.name = Java(TM) SE Runtime Environment
java.vm.version = 25.66-b17
sun.boot.library.path = C:\dev\env\jdk1.8.0_66\jre\bin
java.vendor.url = http://java.oracle.com/
java.vm.vendor = Oracle Corporation
path.separator = ;
file.encoding.pkg = sun.io
java.vm.name = Java HotSpot(TM) 64-Bit Server VM
sun.os.patch.level = Service Pack 1
sun.java.launcher = SUN_STANDARD
user.script =
user.country = US
user.dir = C:\dev\my-projects\my-java-threads\target\classes
java.vm.specification.name = Java Virtual Machine Specification
java.runtime.version = 1.8.0_66-b17
java.awt.graphicsenv = sun.awt.Win32GraphicsEnvironment
os.arch = amd64
java.endorsed.dirs = C:\dev\env\jdk1.8.0_66\jre\lib\endorsed
line.separator =

java.io.tmpdir = C:\Users\me\AppData\Local\Temp\
java.vm.specification.vendor = Oracle Corporation
user.variant =
os.name = Windows 7
sun.jnu.encoding = Cp1252
java.library.path = C:\dev\env\jdk1.8.0_66\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\dev\env\jdk1.8.0_66\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\windows\CCM;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\TortoiseGit\bin;C:\Program Files\TortoiseSVN\bin;.
java.specification.name = Java Platform API Specification
java.class.version = 52.0
sun.management.compiler = HotSpot 64-Bit Tiered Compilers
os.version = 6.1
user.home = C:\Users\me
user.timezone =
java.awt.printerjob = sun.awt.windows.WPrinterJob
file.encoding = Cp1252
java.specification.version = 1.8
user.name = me
java.class.path = .
java.vm.specification.version = 1.8
sun.arch.data.model = 64
sun.java.command = com.bawi.threads.MySleepingMainThread
java.home = C:\dev\env\jdk1.8.0_66\jre
user.language = en
java.specification.vendor = Oracle Corporation
awt.toolkit = sun.awt.windows.WToolkit
java.vm.info = mixed mode
java.version = 1.8.0_66
java.ext.dirs = C:\dev\env\jdk1.8.0_66\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\extsun.boot.class.path = C:\dev\env\jdk1.8.0_66\jre\lib\resources.jar;C:\dev\env\jdk1.8.0_66\jre\lib\rt.jar;C:\dev\env\jdk1.8.0_66\jre\lib\sunrsasign.jar;C:\dev\env\jdk1.8.0_66\jre\lib\jsse.jar;C:\dev\env\jdk1.8.0_66\jre\lib\jce.jar;C:\dev\env\jdk1.8.0_66\jre\lib\charsets.jar;C:\dev\env\jdk1.8.0_66\jre\lib\jfr.jar;C:\dev\env\jdk1.8.0_66\jre\classes
java.vendor = Oracle Corporation
sun.stderr.encoding = cp437
file.separator = \
java.vendor.url.bug = http://bugreport.sun.com/bugreport/
sun.io.unicode.encoding = UnicodeLittle
sun.cpu.endian = little
sun.stdout.encoding = cp437
sun.desktop = windows
sun.cpu.isalist = amd64

VM Flags:
Non-default VM flags: -XX:CICompilerCount=3 -XX:InitialHeapSize=134217728 -XX:MaxHeapSize=2130706432 -XX:MaxNewSize=709885952 -XX:MinHeapDeltaBytes=524288 -XX:NewSize=44564480 -XX:OldSize=89653248 -XX:+UseCompressedClassPointers -XX:+UseCompressedOops -XX:+UseFastUnorderedTimeStamps -XX:-UseLargePagesIndividualAllocation -XX:+UseParallelGC
Command line:
[/code]

with GC default options -XX:+UseParallelGC, initial heap size 128M and max heap size 2G, new size 42.5MB (EDEN 32.5MB, S1 5MB, S2 5MB), max new size 677 MB (EDEN 676MB, S1 225MB, S2 225MB), old size 85.5MB (85.5 MB init, 1.32 GB max), metaspace (init 9MB, max 1GB)

Max heap size 2G = max new (young) 0.67 GB (2/3 GB) + max OLD 1.32 GB (4/3 GB)
Old max size is twice as big as young.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1561</wp:post_id>
  <wp:post_date>2015-10-23 17:03:40</wp:post_date>
  <wp:post_date_gmt>2015-10-23 15:03:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>java-program-number-of-threads-started-memory-size-and-garbage-collectors-on-jconsole-or-jvisualvm</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="garbage-collector"><![CDATA[garbage collector]]></category>
  <category domain="category" nicename="gc"><![CDATA[gc]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="jconsole"><![CDATA[jconsole]]></category>
  <category domain="category" nicename="jvisualvm"><![CDATA[jvisualvm]]></category>
  <category domain="category" nicename="ps-marksweep"><![CDATA[PS MarkSweep]]></category>
  <category domain="category" nicename="ps-scavenge"><![CDATA[PS Scavenge]]></category>
  <category domain="category" nicename="threads"><![CDATA[threads]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[16128404274]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[java-program-and-number-of-threads-started]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Java calling multiple times parallel stream (ForkJoin pool) vs number of threads started</title>
  <link>https://bmwieczorek.wordpress.com/2015/10/23/java-calling-multiple-times-parallel-stream-forkjoin-pool-vs-number-of-threads-started/</link>
  <pubDate>Fri, 23 Oct 2015 21:10:32 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1639</guid>
  <description/>
  <content:encoded><![CDATA[<strong>Scenario 1. More tasks than CPU cores in parallel stream processing.
</strong>

[code language="java"]
public class ParallelStreamMoreTasksThanThreads {

    private static final Logger LOGGER 
                  = LoggerFactory.getLogger(ParallelStreamMoreTasksThanThreads.class);

    public static void main(String[] args) throws InterruptedException {
      LOGGER.debug(&quot;Available cores: {}&quot;,Runtime.getRuntime().availableProcessors());// n=4 CPU cores 
                                                                                    // on my notebook

    //In general CPU core count = ForkJoin pool size that consists of 1 current and n-1 worker threads

      List&lt;Integer&gt; sleepSecondsList  
                = Arrays.asList(3, 3, 3, 3, 3); // each parallel task will sleep 3 seconds
                            // set list size to CPU core count + 1 to have more tasks than threads

        sleepSeconds(&quot;main&quot;, 15);

        Thread t0 = new Thread(createTask(&quot;t0&quot;, sleepSecondsList));
        t0.start(); 

        t0.join(); // wait until thread t0 finishes (and all ForkJoin pool workers)
        LOGGER.debug(&quot;Thread t0 finished&quot;);

        sleepSeconds(&quot;main&quot;, 100);
    }

    private static Runnable createTask(String id, final List&lt;Integer&gt; sleepSecondsList) {
        return () -&gt; {
            sleepSecondsList
                .parallelStream() //parallel processing by current and fork-join threads
                .forEach(t -&gt; sleepSeconds(id, t));
        };
    }

    private static void sleepSeconds(String id, int sleepSeconds) {
        LOGGER.debug(&quot;{} about to sleep {}&quot;, id, sleepSeconds);
        try{
            Thread.sleep(1000 * sleepSeconds);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }
}
[/code]

<blockquote>
Output:
2015-10-25 10:47:51,073|main                            |Thread id=1 |Available cores: 4
2015-10-25 10:47:51,074|main                            |Thread id=1 |main about to sleep 15

2015-10-25 10:48:06,143|Thread-0                        |Thread id=10|t0 about to sleep 3
2015-10-25 10:48:06,143|ForkJoinPool.commonPool-worker-3|Thread id=13|t0 about to sleep 3
2015-10-25 10:48:06,143|ForkJoinPool.commonPool-worker-1|Thread id=11|t0 about to sleep 3
2015-10-25 10:48:06,143|ForkJoinPool.commonPool-worker-2|Thread id=12|t0 about to sleep 3

2015-10-25 10:48:09,143|ForkJoinPool.commonPool-worker-1|Thread id=11|t0 about to sleep 3 &lt;- completes work in next 3 seconds &quot;slot&quot;

2015-10-25 10:48:12,144|main                            |Thread id=1 |Thread t0 finished
2015-10-25 10:48:12,144|main                            |Thread id=1 |main about to sleep 100
</blockquote>

<a href="https://bmwieczorek.files.wordpress.com/2015/10/parallel-stream-fork-join-threads.png"><img class="alignnone size-medium wp-image-1664" src="https://bmwieczorek.files.wordpress.com/2015/10/parallel-stream-fork-join-threads.png?w=300" alt="parallel-stream--fork-join-threads" width="300" height="130" /></a>

Note: JVM initially started with 10 threads (the main thread and other daemon threads). The main thread started new t0 thread to process 5 tasks using <code>parallelStream()</code>. Each task was about to sleep for 3 seconds. Internally <code>parallelStream()</code> started <code>ForkJoinPool</code> with 3 <code>ForkJoinWorkerThread</code>s. Parallel stream processed first 4 tasks parallelly in 3 seconds using the main thread and 3 worker threads. After 3 seconds 4 threads finished processing first 4 tasks and since there was one task left it was picked by one of four threads for processing. All tasks were processed in around 6 seconds by 4 threads that were started apart from the main thread. See the JVisualVM screenshots for details:

<a href="https://bmwieczorek.files.wordpress.com/2015/10/parallel-stream-fork-join-threads-threads-started.png"><img class="alignnone size-medium wp-image-1665" src="https://bmwieczorek.files.wordpress.com/2015/10/parallel-stream-fork-join-threads-threads-started.png?w=300" alt="parallel-stream--fork-join-threads--threads-started" width="300" height="116" /></a>
 

<strong>Scenario 2. Reusing ForkJoin pool worker threads for next processing
</strong>
This time after first 3 threads (t0-t2) finished parallelStream() processing we started threads new three threads (t3-t5) to process new tasks. As the ForkJoin pool worker has not yet been stopped the same workers were reused for subsequent processing:

[code language="java"]
    public static void main(String[] args) throws InterruptedException {
      LOGGER.debug(&quot;Available cores: {}&quot;, Runtime.getRuntime().availableProcessors()); // n=4 CPU cores 
                                                                                       // on my notebook

      // In general CPU core count = ForkJoin pool size that consists of 1 current and n-1 worker threads

      List&lt;Integer&gt; sleepSecondsList = Arrays.asList(5, 5);// assuming all 3 workers reuse then lets start 
      // 6 tasks for 3 manually started threads + 3 workers what gives 2 tasks (list size = 2) per thread 

        sleepSeconds(&quot;main&quot;, 15);

        Thread t0 = new Thread(createTask(&quot;t0&quot;, sleepSecondsList));
        Thread t1 = new Thread(createTask(&quot;t1&quot;, sleepSecondsList));
        Thread t2 = new Thread(createTask(&quot;t2&quot;, sleepSecondsList));
        t0.start();
        t1.start();
        t2.start();

        t0.join();
        t1.join();
        t2.join();
        LOGGER.debug(&quot;Threads t0, t1, t2 finished&quot;);

        sleepSeconds(&quot;main&quot;, 1); // fork-join pool keeps all its worker threads for a couple of seconds 
                                 // so that they can be reused

        Thread t3 = new Thread(createTask(&quot;t3&quot;, sleepSecondsList));
        Thread t4 = new Thread(createTask(&quot;t4&quot;, sleepSecondsList));
        Thread t5 = new Thread(createTask(&quot;t5&quot;, sleepSecondsList));
        t3.start();
        t4.start();
        t5.start();

        t3.join();
        t4.join();
        t5.join();

        LOGGER.debug(&quot;Threads t3, t4, t5 finished&quot;);
        sleepSeconds(&quot;main&quot;, 100);
    }
[/code]

<blockquote>
Output:
2015-11-02 21:09:55,822|main                            |Thread id=1 |Available cores: 4
2015-11-02 21:09:55,823|main                            |Thread id=1 |main about to sleep 15

2015-11-02 21:10:10,899|Thread-0                        |Thread id=10|t0 about to sleep 5
2015-11-02 21:10:10,899|Thread-2                        |Thread id=12|t2 about to sleep 5
2015-11-02 21:10:10,899|ForkJoinPool.commonPool-worker-1|Thread id=13|t2 about to sleep 5
2015-11-02 21:10:10,900|ForkJoinPool.commonPool-worker-3|Thread id=15|t0 about to sleep 5
2015-11-02 21:10:10,900|Thread-1                        |Thread id=11|t1 about to sleep 5
2015-11-02 21:10:10,900|ForkJoinPool.commonPool-worker-2|Thread id=14|t1 about to sleep 5

2015-11-02 21:10:15,901|main                            |Thread id=1 |Threads t0, t1, t2 finished
2015-11-02 21:10:15,902|main                            |Thread id=1 |main about to sleep 1
2015-11-02 21:10:16,903|Thread-3                        |Thread id=16|t3 about to sleep 5
2015-11-02 21:10:16,903|ForkJoinPool.commonPool-worker-3|Thread id=15|t3 about to sleep 5
2015-11-02 21:10:16,904|Thread-4                        |Thread id=17|t4 about to sleep 5
2015-11-02 21:10:16,904|ForkJoinPool.commonPool-worker-2|Thread id=14|t4 about to sleep 5
2015-11-02 21:10:16,905|Thread-5                        |Thread id=18|t5 about to sleep 5
2015-11-02 21:10:16,905|ForkJoinPool.commonPool-worker-1|Thread id=13|t5 about to sleep 5</blockquote>
Note that ForkJoinPool threads were reused (thread ids: 13, 14 and 15)

Notice on the JVisualVM screenshot below that forkjoin pool keeps all its worker threads for a couple of seconds so that they can be reused:

<a href="https://bmwieczorek.files.wordpress.com/2015/10/parallel-stream-fork-join-worker-pool-reuse.png"><img class="alignnone size-medium wp-image-1646" src="https://bmwieczorek.files.wordpress.com/2015/10/parallel-stream-fork-join-worker-pool-reuse.png?w=300" alt="parallel-stream--fork-join-worker-pool-reuse" width="300" height="132" /></a>

Java started initially with 9 daemon threads and one main thread from the application. Then 6 threads were explicitly started to process 2 tasks each. Each thread called parallelStream() that internally started a shared fork join pool to create 3 shared worker threads. That makes 19 threads started in total. See screenshot:

<a href="https://bmwieczorek.files.wordpress.com/2015/10/parallel-stream-fork-join-worker-pool-reuse-threads-started.png"><img class="alignnone size-medium wp-image-1661" src="https://bmwieczorek.files.wordpress.com/2015/10/parallel-stream-fork-join-worker-pool-reuse-threads-started.png?w=300" alt="parallel-stream--fork-join-worker-pool-reuse--threads-started" width="300" height="139" /></a>

<strong>Scenario 3. Creating new ForkJoin pool when longer delay between subsequent parallelStream processing
</strong>

This time after first 3 threads (t0-t2) finished then main thread waited much longer (here 13 seconds) and then started new 3 threads (t3-t5). 13 seconds was apparently long enough to stop all the 3 forkjoin pool workers and new forkjoin workers needed to be created to handle parallel processing.

[code language="java"]
        ...
        LOGGER.debug(&quot;Threads t0, t1, t2 finished&quot;);

        sleepSeconds(&quot;main&quot;, 13); // 13 seconds was apparently enough to stop all the 3 fork-join workers 
                                // and new fork-join workers needed to be created to handle parallel processing

        Thread t3 = new Thread(createTask(&quot;t3&quot;, sleepSecondsList));
        ...
[/code]

<blockquote>
2015-11-02 21:15:36,527|main                            |Thread id=1 |Available cores: 4
2015-11-02 21:15:36,528|main                            |Thread id=1 |main about to sleep 15

2015-11-02 21:15:51,598|Thread-1                        |Thread id=11|t1 about to sleep 5
2015-11-02 21:15:51,598|ForkJoinPool.commonPool-worker-2|Thread id=15|t0 about to sleep 5
2015-11-02 21:15:51,598|ForkJoinPool.commonPool-worker-3|Thread id=13|t2 about to sleep 5
2015-11-02 21:15:51,598|Thread-0                        |Thread id=10|t0 about to sleep 5
2015-11-02 21:15:51,598|Thread-2                        |Thread id=12|t2 about to sleep 5
2015-11-02 21:15:51,598|ForkJoinPool.commonPool-worker-1|Thread id=14|t1 about to sleep 5

2015-11-02 21:15:56,600|main                            |Thread id=1 |Threads t0, t1, t2 finished
2015-11-02 21:15:56,602|main                            |Thread id=1 |main about to sleep 13

2015-11-02 21:16:09,605|Thread-4                        |Thread id=17|t4 about to sleep 5
2015-11-02 21:16:09,605|Thread-3                        |Thread id=16|t3 about to sleep 5
2015-11-02 21:16:09,606|Thread-5                        |Thread id=18|t5 about to sleep 5
2015-11-02 21:16:09,606|ForkJoinPool.commonPool-worker-1|Thread id=19|t4 about to sleep 5
2015-11-02 21:16:09,606|ForkJoinPool.commonPool-worker-3|Thread id=21|t3 about to sleep 5
2015-11-02 21:16:09,607|ForkJoinPool.commonPool-worker-2|Thread id=20|t5 about to sleep 5

2015-11-02 21:16:14,611|main                            |Thread id=1 |Threads t3, t4, t5 finished
2015-11-02 21:16:14,612|main                            |Thread id=1 |main about to sleep 100
</blockquote>

Note: ForkJoinPool threads were not reused: e.g.: ForkJoinPool.commonPool-worker-1 had thread id 14 and later 19.

<a href="https://bmwieczorek.files.wordpress.com/2015/10/parallel-stream-new-fork-join-worker-pool.png"><img class="alignnone size-medium wp-image-1653" src="https://bmwieczorek.files.wordpress.com/2015/10/parallel-stream-new-fork-join-worker-pool.png?w=300" alt="parallel-stream--new-fork-join-worker-pool" width="300" height="150" /></a>

Again Java started initially with 9 daemon threads and one main thread from the application. Then 6 threads were explicitly started to call parallelStream. In this case fork join pool workers (3 threads) were started and stopped twice. That makes 22 threads started in total. See screenshot:

<a href="https://bmwieczorek.files.wordpress.com/2015/10/parallel-stream-new-fork-join-worker-pool-threads-started.png"><img class="alignnone size-medium wp-image-1657" src="https://bmwieczorek.files.wordpress.com/2015/10/parallel-stream-new-fork-join-worker-pool-threads-started.png?w=300" alt="parallel-stream--new-fork-join-worker-pool--threads-started" width="300" height="136" /></a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1639</wp:post_id>
  <wp:post_date>2015-10-23 23:10:32</wp:post_date>
  <wp:post_date_gmt>2015-10-23 21:10:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>java-calling-multiple-times-parallel-stream-forkjoin-pool-vs-number-of-threads-started</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="fork-join"><![CDATA[fork join]]></category>
  <category domain="category" nicename="forkjoin"><![CDATA[ForkJoin]]></category>
  <category domain="category" nicename="forkjoinpool"><![CDATA[ForkJoinPool]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="jdk8"><![CDATA[jdk8]]></category>
  <category domain="category" nicename="number-of-threads-running"><![CDATA[number of threads running]]></category>
  <category domain="category" nicename="number-of-threads-started"><![CDATA[number of threads started]]></category>
  <category domain="category" nicename="parallel"><![CDATA[parallel]]></category>
  <category domain="category" nicename="parallel-stream"><![CDATA[parallel stream]]></category>
  <category domain="category" nicename="threads"><![CDATA[threads]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[16138460161]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[java-calling-mutliple-times-parallel-stream-forkjoin-pool-vs-number-of-threads-running]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Java  - monitoring elapsed, CPU, user and system time</title>
  <link>https://bmwieczorek.wordpress.com/2015/11/01/java-monitoring-elapsed-cpu-user-system-time/</link>
  <pubDate>Sun, 01 Nov 2015 17:34:36 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1736</guid>
  <description/>
  <content:encoded><![CDATA[<strong>Sleeping waiting (Thread.sleep())</strong>
[code language="java"]
public class SleepingThread {
    public static void main(String[] args) throws InterruptedException {
        StopWatch stopWatch = new StopWatch();
        stopWatch.start();

        TimeUnit.NANOSECONDS.sleep(3000000000L); // 3s

        stopWatch.stop();
        System.out.println(stopWatch);
    }
}
[/code]

<blockquote>
User (app code only) time:                   0 ms (0.00%)
System (os code on behalf app e.g.I/O) time: 0 ms (0.00%)
CPU (total CPU spent for app) time:          0 ms (0.00%)
Elapsed time:                                3000 ms (100.00%)

"main" #1 prio=5 os_prio=0 tid=0x0000000001c5e000 nid=0x16dc waiting on condition [0x00000000025af000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
    at java.lang.Thread.sleep(Native Method)
    at java.lang.Thread.sleep(Thread.java:340)
    at java.util.concurrent.TimeUnit.sleep(TimeUnit.java:386)
    at com.bawi.threads.cpu.SleepingThread.main(SleepingThread.java:11)
</blockquote>
<strong>Waiting (Object.wait())</strong>
[code language="java"]
public class WaitingThread {
    public static void main(String[] args) throws InterruptedException {
        Object monitor = new Object();
        new Thread(() -&gt; {
            synchronized (monitor) {
                try {
                    StopWatch stopWatch = new StopWatch();
                    stopWatch.start();

                    monitor.wait();

                    stopWatch.stop();
                    System.out.println(stopWatch);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }).start();
        TimeUnit.NANOSECONDS.sleep(3000000000L); // 3s
        synchronized(monitor) {
            monitor.notify();
        }
    }
}
[/code]
<blockquote>
User (app code only) time:                   0 ms (0.00%)
System (os code on behalf app e.g.I/O) time: 0 ms (0.00%)
CPU (total CPU spent for app) time:          0 ms (0.00%)
Elapsed time:                                2998 ms (100.00%)

"Thread-0" #10 prio=5 os_prio=0 tid=0x0000000058b5b000 nid=0x162c in Object.wait() [0x00000000595ae000]
   java.lang.Thread.State: WAITING (on object monitor)
    at java.lang.Object.wait(Native Method)
    - waiting on  (a java.lang.Object)
    at java.lang.Object.wait(Object.java:502)
    at com.bawi.threads.cpu.SynchronizedWaitingThread.lambda$0(SynchronizedWaitingThread.java:16)
    - locked  (a java.lang.Object)
    at com.bawi.threads.cpu.SynchronizedWaitingThread$$Lambda$1/321001045.run(Unknown Source)
    at java.lang.Thread.run(Thread.java:745)
</blockquote>

<strong>Parked waiting (LockSupport.park())</strong>
[code language="java"]
public class ParkedThread {
    public static void main(String[] args) throws InterruptedException {
        Lock lock = new ReentrantLock();
        lock.lock();
        new Thread(() -&gt; {
            StopWatch stopWatch = new StopWatch();
            stopWatch.start();

            lock.lock();

            stopWatch.stop();
            System.out.println(stopWatch);
        }).start();
        TimeUnit.NANOSECONDS.sleep(3000000000L); // 3s
        lock.unlock();
    }
}
[/code]
<blockquote>
User (app code only) time:                   0 ms (0.00%)
System (os code on behalf app e.g.I/O) time: 0 ms (0.00%)
CPU (total CPU spent for app) time:          0 ms (0.00%)
Elapsed time:                                3010 ms (100.00%)

"Thread-0" #10 prio=5 os_prio=0 tid=0x0000000058abf000 nid=0x3c0 waiting on condition [0x0000000059a4e000]
   java.lang.Thread.State: WAITING (parking)
    at sun.misc.Unsafe.park(Native Method)
    - parking to wait for   (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
    at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
    at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:836)
    at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:870)
    at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1199)
    at java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:209)
    at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:285)
    at com.bawi.threads.cpu.ParkedThread.lambda$0(ParkedThread.java:17)
    at com.bawi.threads.cpu.ParkedThread$$Lambda$1/471910020.run(Unknown Source)
    at java.lang.Thread.run(Thread.java:745)
</blockquote>

<strong>Blocked (on object monitor)</strong>
[code language="java"]
public class BlockedThread {
    public static void main(String[] args) throws InterruptedException {
        Object monitor = new Object();
        new Thread(() -&gt; {
            StopWatch stopWatch = new StopWatch();
            stopWatch.start();

            synchronized (monitor) {
            }

            stopWatch.stop();
            System.out.println(stopWatch);
        }).start();
        synchronized (monitor) {
            TimeUnit.NANOSECONDS.sleep(5000000000L); // 5s
        }
    }
}
[/code]
<blockquote>
User (app code only) time:                   0 ms (0.00%)
System (os code on behalf app e.g.I/O) time: 0 ms (0.00%)
CPU (total CPU spent for app) time:          0 ms (0.00%)
Elapsed time:                                4993 ms (100.00%)

"Thread-0" #10 prio=5 os_prio=0 tid=0x0000000058f8c800 nid=0x1ddc waiting for monitor entry [0x0000000059d1e000]
   java.lang.Thread.State: BLOCKED (on object monitor)
    at com.bawi.threads.cpu.BlockedThread.lambda$0(BlockedThread.java:14)
    - waiting to lock  (a java.lang.Object)
    at com.bawi.threads.cpu.BlockedThread$$Lambda$1/321001045.run(Unknown Source)
    at java.lang.Thread.run(Thread.java:745)
</blockquote>

<strong>Disc IO operation</strong>
[code language="java"]
public class WritingFile {
    private static final String LINE = &quot;abcdefghijklmnopqrstuwvxyzABCDEFGHIJKLMNOPQRSUWVXYZ\r\n&quot;;
    public static void main(String[] args) throws IOException {
        Path path = Paths.get(&quot;target/data.txt&quot;);
        Files.deleteIfExists(path);
        Files.createFile(path);
        BufferedWriter bufferedWriter = Files.newBufferedWriter(path, StandardOpenOption.APPEND);
        StopWatch stopWatch = new StopWatch();
        stopWatch.start();

        for (int i = 0; i &lt; 29999999; i++) { // generates 1.7GB file 
            bufferedWriter.write(i + LINE); // without this line it takes 3ms
        }

        stopWatch.stop();
        System.out.println(stopWatch);
    }
}
[/code]
<blockquote>
User (app code only) time:                   5023 ms (23.71%)
System (os code on behalf app e.g.I/O) time: 1950 ms (9.21%)
CPU (total CPU spent for app) time:          6973 ms (32.92%)
Elapsed time:                                21181 ms (100.00%)


"main" #1 prio=5 os_prio=0 tid=0x000000000035e000 nid=0x2158 runnable [0x000000000259e000]
   java.lang.Thread.State: RUNNABLE
    at sun.nio.ch.FileDispatcherImpl.write0(Native Method)
    at sun.nio.ch.FileDispatcherImpl.write(FileDispatcherImpl.java:75)
    at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
    at sun.nio.ch.IOUtil.write(IOUtil.java:65)
    at sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:211)
    - locked  (a java.lang.Object)
    at java.nio.channels.Channels.writeFullyImpl(Channels.java:78)
    at java.nio.channels.Channels.writeFully(Channels.java:101)
    at java.nio.channels.Channels.access$000(Channels.java:61)
    at java.nio.channels.Channels$1.write(Channels.java:174)
    - locked  (a java.nio.channels.Channels$1)
    at sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:221)
    at sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:282)
    at sun.nio.cs.StreamEncoder.write(StreamEncoder.java:125)
    - locked  (a java.io.OutputStreamWriter)
    at java.io.OutputStreamWriter.write(OutputStreamWriter.java:207)
    at java.io.BufferedWriter.flushBuffer(BufferedWriter.java:129)
    - locked  (a java.io.OutputStreamWriter)
    at java.io.BufferedWriter.write(BufferedWriter.java:230)
    - locked  (a java.io.OutputStreamWriter)
    at java.io.Writer.write(Writer.java:157)
    at com.bawi.threads.cpu.WritingFile.main(WritingFile.java:23)
</blockquote>

<strong>Network IO operation</strong>
[code language="java"]
public class FluentFormLoginAuthorizationTest {
    public static void main(String[] args) throws Exception {
        Executor executor = Executor.newInstance()
                .auth(new HttpHost(&quot;myhost&quot;, 8090), Settings.USERNAME, Settings.PASSWORD);

        StopWatch stopWatch = new StopWatch();
        stopWatch.start();

        String content = executor
                .execute(Request.Get(&quot;http://myhost:8090/view?pattern=XYZ&amp;path=/apps/tkt-hub/logs/&quot;))
                .returnContent()
                .asString();

        stopWatch.stop();
        System.out.println(stopWatch);
        //System.out.println(content);
    }
}
[/code]
<blockquote>
User (app code only) time:                   78 ms (0.85%)
System (os code on behalf app e.g.I/O) time: 46 ms (0.51%)
CPU (total CPU spent for app) time:          124 ms (1.37%)
Elapsed time:                                9127 ms (100.00%)

"main" #1 prio=5 os_prio=0 tid=0x00000000021fe000 nid=0x2214 runnable [0x000000000260e000]
   java.lang.Thread.State: RUNNABLE
    at java.net.SocketInputStream.socketRead0(Native Method)
    at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
    at java.net.SocketInputStream.read(SocketInputStream.java:170)
    at java.net.SocketInputStream.read(SocketInputStream.java:141)
    at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:139)
    at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:155)
    at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:284)
...
</blockquote>

<strong>Infinite loop</strong>
[code language="java"]
    public static void main(String[] args) {
        StopWatch stopWatch = new StopWatch();
        stopWatch.start();

        for (long i = 0L; i &lt; 9999999999L; i++) { // 6s
         // Thread running 100%, taking 1/(n cores) of JVM/System overall CPU
        }

        stopWatch.stop();
        System.out.println(stopWatch);
    }
[/code]
<blockquote>
User (app code only) time:                   3166 ms (99.44%)
System (os code on behalf app e.g.I/O) time: 0 ms (0.00%)
CPU (total CPU spent for app) time:          3166 ms (99.44%)
Elapsed time:                                3184 ms (100.00%)

"main" #1 prio=5 os_prio=0 tid=0x0000000001c9e000 nid=0x1e4c runnable [0x000000000241f000]
   java.lang.Thread.State: RUNNABLE
    at com.bawi.threads.cpu.InfiniteLoop.main(InfiniteLoop.java:9)
</blockquote>

<strong>Heavy CPU calculation</strong>
[code language="java"]
public class HeavyCpuCalculation {
    public static void main(String[] args) {
        StopWatch stopWatch = new StopWatch();
        stopWatch.start();

        for (int j = 0; j &lt; 10000; j++) { 
            BigDecimal n = BigDecimal.ONE;
            BigDecimal i = BigDecimal.ONE;
            BigDecimal max = BigDecimal.valueOf(1600L);
            while (i.compareTo(max) &lt;= 0) {
                n = n.multiply(i);
                i = i.add(BigDecimal.ONE);
            }
        }

        stopWatch.stop();
        System.out.println(stopWatch);
    }
}
[/code]

<blockquote>
User (app code only) time:                   5304 ms (97.01%)
System (os code on behalf app e.g.I/O) time: 93 ms (1.71%)
CPU (total CPU spent for app) time:          5397 ms (98.72%)
Elapsed time:                                5467 ms (100.00%)

"main" #1 prio=5 os_prio=0 tid=0x000000000213d800 nid=0x1078 runnable [0x00000000023ef000]
   java.lang.Thread.State: RUNNABLE
    at com.bawi.threads.cpu.HeavyCpuCalculation.main(HeavyCpuCalculation.java:17)
</blockquote>

[code language="java"]
import java.lang.management.ManagementFactory;
import java.lang.management.ThreadMXBean;
import java.util.concurrent.TimeUnit;

public class StopWatch {

    private final ThreadMXBean bean;
    private long startCpuTime;
    private long startUserTime;
    private long startNano;
    private long stopCpuTime;
    private long stopUserTime;
    private long stopNano;

    public StopWatch() {
        bean = ManagementFactory.getThreadMXBean();
    }

    public void start() {
        startCpuTime = bean.getCurrentThreadCpuTime();
        startUserTime = bean.getCurrentThreadUserTime();
        startNano = System.nanoTime();
    }

    public void stop() {
        stopCpuTime = bean.getCurrentThreadCpuTime();
        stopUserTime = bean.getCurrentThreadUserTime();
        stopNano = System.nanoTime();
    }

    @Override
    public String toString() {
        long elapsedNano = stopNano - startNano;
        long cpuTime = stopCpuTime - startCpuTime;
        long userTime = stopUserTime - startUserTime;
        long systemTime = cpuTime - userTime;
        return 
            String.format(&quot;User (app code only) time:                   %d ms (%,.2f%%)\n&quot;, 
             TimeUnit.NANOSECONDS.toMillis(userTime), (double)userTime/elapsedNano * 100) +
            String.format(&quot;System (os code on behalf app e.g.I/O) time: %d ms (%,.2f%%)\n&quot;, 
             TimeUnit.NANOSECONDS.toMillis(systemTime), (double)systemTime/elapsedNano * 100) +
            String.format(&quot;CPU (total CPU spent for app) time:          %d ms (%,.2f%%)\n&quot;, 
             TimeUnit.NANOSECONDS.toMillis(cpuTime),  (double)cpuTime/elapsedNano * 100) +
            String.format(&quot;Elapsed time:                                %d ms (%,.2f%%)\n&quot;, 
             TimeUnit.NANOSECONDS.toMillis(elapsedNano), 100d);
    }
}
[/code]
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1736</wp:post_id>
  <wp:post_date>2015-11-01 18:34:36</wp:post_date>
  <wp:post_date_gmt>2015-11-01 17:34:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>java-monitoring-elapsed-cpu-user-system-time</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="cpu"><![CDATA[CPU]]></category>
  <category domain="category" nicename="cpu-time"><![CDATA[cpu time]]></category>
  <category domain="category" nicename="elapsed-time"><![CDATA[elapsed time]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="jvisualvm"><![CDATA[jvisualvm]]></category>
  <category domain="category" nicename="jvm"><![CDATA[jvm]]></category>
  <category domain="category" nicename="monitoring"><![CDATA[monitoring]]></category>
  <category domain="category" nicename="system"><![CDATA[system]]></category>
  <category domain="category" nicename="thread-dump"><![CDATA[thread dump]]></category>
  <category domain="category" nicename="threads"><![CDATA[threads]]></category>
  <category domain="category" nicename="user-time"><![CDATA[user time]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[16431926296]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[monitoring-java-jvm-system-cpu-usage]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Java - monitoring cpu and system load of multi-threaded application via OperatingSystemMXBean</title>
  <link>https://bmwieczorek.wordpress.com/2015/11/02/java-monitoring-cpu-and-system-load-of-multi-threaded-application-via-operatingsystemmxbean/</link>
  <pubDate>Mon, 02 Nov 2015 08:44:50 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1766</guid>
  <description/>
  <content:encoded><![CDATA[<strong>1. All CPU cores busy executing busy loop (cpu intensive)</strong>

Per documentation: Java exposes <code>java.lang.management.OperatingSystemMXBean</code> interface with 
	<li><code>double getSystemCpuLoad()</code> returning the "recent cpu usage" for the whole system with range [0.0,1.0] where 0.0 means that all CPUs were idle, 1.0 means that all CPUs were actively running 100% of the observed time, and -1.0 when recent cpu usage is not available. The value for system load could be high not only when JVM process heavily uses that but also if other no-JVM processes generate high CPU load</li>
	<li><code>double getProcessCpuLoad()</code> returning  "recent cpu usage" for the Java Virtual Machine process with range [0.0,1.0] value 0.0 means that none of the CPUs were running threads (application and JVM internal threads) from the JVM process, 1.0 means that all CPUs were actively running threads from the JVM 100% of the observed time, and -1.0 when recent cpu usage is not available</li>

[code language="java"]
public class MonitorAllCoresCpuLoad {

  private static volatile boolean hasAnyWorkerFinished = false;

  public static void main(String[] args) throws Exception {
    OperatingSystemMXBean operatingSystemMXBean = ManagementFactory.getOperatingSystemMXBean();
    int workersCount = Runtime.getRuntime().availableProcessors();
    CyclicBarrier barrier 
             = new CyclicBarrier(workersCount + 1); // + 1 to include main thread measuring CPU load
    for (int i = 0; i &lt; workersCount; i++) {
      createAndStartWorker(barrier); //use barrier to start all workers at the same time as main thread
    }
    barrier.await();
    System.out.println(&quot;All workers and main thread started&quot;);
    while (!hasAnyWorkerFinished) { // stop measuring if at least one of workers finished
      getAndPrintCpuLoad(operatingSystemMXBean);
      TimeUnit.MILLISECONDS.sleep(100);
    }
    System.out.println(&quot;One of workers finished&quot;);
  }

    private static void createAndStartWorker(CyclicBarrier cyclicBarrier) {
        new Thread(() -&gt; {
            try {
                cyclicBarrier.await();
                for (long i = 0L; i &lt; 19999999999L; i++) { // 6s
                    // Thread 100% time as RUNNABLE, taking 1/(n cores) of JVM/System overall CPU
                }
                hasAnyWorkerFinished = true;
                System.out.println(Thread.currentThread().getName() + &quot; finished&quot;);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }).start();

    }

    private static void getAndPrintCpuLoad(OperatingSystemMXBean mxBean) {
       // need to use reflection as the impl class is not visible
       for (Method method : mxBean.getClass().getDeclaredMethods()) {
         method.setAccessible(true);
         String methodName = method.getName();
         if (methodName.startsWith(&quot;get&quot;) &amp;&amp; methodName.contains(&quot;Cpu&quot;) &amp;&amp; methodName.contains(&quot;Load&quot;)
                 &amp;&amp; Modifier.isPublic(method.getModifiers())) {

             Object value;
             try {
                 value = method.invoke(mxBean);
             } catch (Exception e) {
                 value = e;
             }
             System.out.println(methodName + &quot; = &quot; + value);
         }
      }
      System.out.println(&quot;&quot;);
    }
}
[/code]

<blockquote>
Busy loop: all cores busy
getProcessCpuLoad = 0.9968879402893512
getSystemCpuLoad = 1.0
</blockquote>
Note: The main thread responsible for printing CPU load was not able to get CPU time (no CPU load printed) when I was running more worker threads than CPU cores on my laptop (Windows 7 os).

<strong>2. One of cores executing busy loop (cpu intensive)</strong>
<blockquote>
Busy loop: one of four cores busy
getProcessCpuLoad = 0.24999679493343077
getSystemCpuLoad = 0.2571523807692343
</blockquote>
Note that is my laptop was only running JVM the system and JVM process CPU usage was 1/4 = 0.25%.

<strong>3. Sleeping loop</strong>
<blockquote>
getProcessCpuLoad = 0.0 
getSystemCpuLoad = 0.014311079773084212
</blockquote>


<strong>4. Slow network I/O</strong>
4 core Windows 7 laptop, java program running 10 threads executing http rq over slow network:
[code language="java"]
public class FluentFormLoginAuthorizationMultiThreadedTest {
    
    private static final Logger LOGGER = 
        LoggerFactory.getLogger(FluentFormLoginAuthorizationMultiThreadedTest.class);
    private static final int COUNT = 10;
    private static volatile boolean hasAnyThreadFinished = false;

    public static void main(String[] args) throws Exception {
      OperatingSystemMXBean operatingSystemMXBean = ManagementFactory.getOperatingSystemMXBean();

      Executor executor = Executor.newInstance()
              .auth(new HttpHost(&quot;myhost&quot;, 8090), Settings.USERNAME, Settings.PASSWORD);
        
      TimeUnit.SECONDS.sleep(10); // give time to collect via JVisualVM
      CyclicBarrier barrier = new CyclicBarrier(COUNT + 1); // + 1 for main thread to monitor CPU load
      for (int i = 0; i &lt; COUNT; i++) {
          new Thread(() -&gt;  run(executor, barrier)).start();;
      }

      barrier.await();
      System.out.println(&quot;All threads started&quot;);
      while (!hasAnyThreadFinished) {
          printCpuLoad(operatingSystemMXBean);
          TimeUnit.MILLISECONDS.sleep(100);
      }
      System.out.println(&quot;One of thread finished&quot;);
    }

    private static void run(Executor executor, CyclicBarrier cyclicBarrier) {
        String content;
        try {
            cyclicBarrier.await();
            LOGGER.debug(&quot;Started&quot;);

            content = executor
                    .execute(Request.Get(&quot;http://myhost:8090/view?pattern=INFO&amp;path=/apps/logs/*&quot;))
                    .returnContent()
                    .asString();

            hasAnyThreadFinished = true;
            //System.err.println(content);
            LOGGER.debug(&quot;Stopped&quot;);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private static void printCpuLoad(OperatingSystemMXBean mxBean) {
      for (Method method : mxBean.getClass().getDeclaredMethods()) {
        method.setAccessible(true);
        String methodName = method.getName();
        if (methodName.startsWith(&quot;get&quot;) &amp;&amp; methodName.contains(&quot;Cpu&quot;) &amp;&amp; methodName.contains(&quot;Load&quot;)
                &amp;&amp; Modifier.isPublic(method.getModifiers())) {

            Object value;
            try {
               value = method.invoke(mxBean);
            } catch (Exception e) {
                value = e;
            }
            System.out.print(methodName + &quot;,&quot; + value + &quot;,&quot;);
        }
      }
      System.out.println(&quot;&quot;);
    }
}
[/code]

Results:
<blockquote>
    getProcessCpuLoad	getSystemCpuLoad
min	0.007357802		    0.017761006
max	0.022199061		    0.11305298
avg	0.017429555		    0.051268221
</blockquote>

<a href="https://bmwieczorek.files.wordpress.com/2015/11/10-threads-calling-slow-network-io-http-rq.png"><img src="https://bmwieczorek.files.wordpress.com/2015/11/10-threads-calling-slow-network-io-http-rq.png?w=297" alt="10-threads-calling-slow-network-IO-http-rq" width="297" height="300" class="alignnone size-medium wp-image-1785" /></a>

Notice that all 10 threads that executed http request are shown on JVisualVM as 100% running. That means that 100% of their time they are in RUNNABLE state. But it does not necessary mean that all of them are using all the CPU cores in 100%. In our case average process cpu load is 1.7%, system cpu load 5% (aggregate for all cores, where load of 1.0 we had when all CPU were fully used). 

<blockquote>
"Thread-10" #24 prio=5 os_prio=0 tid=0x0000000058b0f800 nid=0x2258 runnable [0x000000005bd0e000]
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
...
org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:284)
...
	at http.client.FluentFormLoginAuthorizationMultiThreadedTest.run(FluentFormLoginAuthorizationMultiThreadedTest.java:50)
	at http.client.FluentFormLoginAuthorizationMultiThreadedTest.lambda$0(FluentFormLoginAuthorizationMultiThreadedTest.java:31)
	at http.client.FluentFormLoginAuthorizationMultiThreadedTest$$Lambda$4/152005629.run(Unknown Source)
	at java.lang.Thread.run(Thread.java:745)
</blockquote>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1766</wp:post_id>
  <wp:post_date>2015-11-02 09:44:50</wp:post_date>
  <wp:post_date_gmt>2015-11-02 08:44:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>java-monitoring-cpu-and-system-load-of-multi-threaded-application-via-operatingsystemmxbean</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="cpu"><![CDATA[CPU]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="jvisualvm"><![CDATA[jvisualvm]]></category>
  <category domain="category" nicename="jvm"><![CDATA[jvm]]></category>
  <category domain="category" nicename="monitoring"><![CDATA[monitoring]]></category>
  <category domain="post_tag" nicename="multi-threaded"><![CDATA[multi-threaded]]></category>
  <category domain="category" nicename="operatingsystemmxbean"><![CDATA[OperatingSystemMXBean]]></category>
  <category domain="category" nicename="process-cpu-load"><![CDATA[process cpu load]]></category>
  <category domain="category" nicename="system-cpu-load"><![CDATA[system cpu load]]></category>
  <category domain="post_tag" nicename="threads"><![CDATA[threads]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[16451870564]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[java-monitoring-cpu-and-system-load-via-operatingsystemmxbean]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Spring property default value using expression language SpEL</title>
  <link>https://bmwieczorek.wordpress.com/2015/11/02/spring-property-default-value-using-expression-language-spel/</link>
  <pubDate>Mon, 02 Nov 2015 15:53:38 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1806</guid>
  <description/>
  <content:encoded><![CDATA[[code language="java"]
@Value(&quot;${app.TransactionFinder.transactionsFoundLimit:0x7fffffffffffffffL}&quot;) // default Long.MAX_VALUE
private long transactionsFoundLimit;
[/code]
or 
[code language="java"]
@Value(&quot;#{${app.TransactionFinder.transactionsFoundLimit:T(java.lang.Long).MAX_VALUE}}&quot;)
private long transactionsFoundLimit;
[/code]

where:
config.properties:
<blockquote>app.TransactionFinder.transactionsFoundLimit=1000</blockquote>
or missing]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1806</wp:post_id>
  <wp:post_date>2015-11-02 16:53:38</wp:post_date>
  <wp:post_date_gmt>2015-11-02 15:53:38</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>spring-property-default-value-using-expression-language-spel</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="annotation"><![CDATA[annotation]]></category>
  <category domain="category" nicename="configuration"><![CDATA[configuration]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="post_tag" nicename="max-value"><![CDATA[max value]]></category>
  <category domain="post_tag" nicename="min-value"><![CDATA[min value]]></category>
  <category domain="post_tag" nicename="property-default-value"><![CDATA[property default value]]></category>
  <category domain="post_tag" nicename="spel"><![CDATA[SpEL]]></category>
  <category domain="post_tag" nicename="spring"><![CDATA[spring]]></category>
  <category domain="post_tag" nicename="spring-expression-lanuguage"><![CDATA[spring expression lanuguage]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[16462688012]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Difference between CachedThreadPool vs FixedThreadPool visualized in JVisualmVM</title>
  <link>https://bmwieczorek.wordpress.com/2015/11/05/difference-between-cachedthreadpool-vs-fixedthreadpool-visualized-in-jvisualmvm/</link>
  <pubDate>Thu, 05 Nov 2015 17:09:58 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1816</guid>
  <description/>
  <content:encoded><![CDATA[General information:
[code language="java"]
public ThreadPoolExecutor(int corePoolSize, // number of threads to keep in pool even if idle
                 int maximumPoolSize, // max number of threads to allow in the pool
                 long keepAliveTime, // max time for idle thread to wait for new task before terminating
                 TimeUnit unit, // related to keepAliveTime
                 BlockingQueue&lt;Runnable&gt; workQueue) {
[/code]
Note that a thread pool will shrink to corePoolSize by removing threads that are idle waiting for tasks longer than keepAliveTime (if keepAliveTime &gt; 0). If maxPoolSize is very big then a new thread will be created for each new task unless there is already an idle thread in the pool to be reused for processing. 

<strong>1. FixedThreadPool</strong>
[code language="java"]
public static ExecutorService newFixedThreadPool(int nThreads) {
    return new ThreadPoolExecutor(
               nThreads, // once created a thread do not shrink the pool 
               nThreads,
               0L, TimeUnit.MILLISECONDS, // idle threads waits forever for new tasks
               new LinkedBlockingQueue&lt;Runnable&gt;());
}
[/code]

example:
[code language="java"]
package com.bawi.executors;

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class MyFixedThreadPool {

    private static final Logger LOGGER = LoggerFactory.getLogger(MyFixedThreadPool.class);
    public static void main(String[] args) {
        sleepSeconds(10); // give 10 seconds to connect to JVisualMV

        ExecutorService newFixedThreadPool = Executors.newFixedThreadPool(2);
        newFixedThreadPool.submit(() -&gt; sleepSeconds(5)); // starts only first thread
        sleepSeconds(6); // wait 6s so first thread finishes running the task
        newFixedThreadPool.submit(() -&gt; sleepSeconds(5)); // starts 2nd thread to process 2nd task even
                                                      // though 1st thread already finished processing 
                                                      // 1st task and was available/waiting
        sleepSeconds(1); // wait 1s to add 3rd task
        newFixedThreadPool.submit(() -&gt; sleepSeconds(5)); // 3rd task is picked by the 1st thread 
                                                          // (1st thread was awailable/waiting)
        sleepSeconds(1); // wait 1s to add 4rd task
        newFixedThreadPool.submit(() -&gt; sleepSeconds(5)); // need to wait 3s for available 
                                                          // thread before processing 4rd task 

        sleepSeconds(80); // wait until all threads finish processing tasks + additional 60 seconds
    }

    private static void sleepSeconds(int seconds) {
        try {
            LOGGER.debug(currentThreadId() + &quot;About to sleep {} seconds&quot;, seconds);
            TimeUnit.SECONDS.sleep(seconds);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private static String currentThreadId() {
        long id = Thread.currentThread().getId();
        return String.format(&quot;Thread id=%-2s|&quot;, id);
    }
}
[/code]

<blockquote>
Output:
2015-11-05 18:05:04,289|main                            |Thread id=1 |About to sleep 10 seconds
2015-11-05 18:05:14,296|main                            |Thread id=1 |About to sleep 6 seconds
2015-11-05 18:05:14,296|pool-1-thread-1                 |Thread id=16|About to sleep 5 seconds
2015-11-05 18:05:20,296|main                            |Thread id=1 |About to sleep 1 seconds
2015-11-05 18:05:20,296|pool-1-thread-2                 |Thread id=17|About to sleep 5 seconds
2015-11-05 18:05:21,311|main                            |Thread id=1 |About to sleep 1 seconds
2015-11-05 18:05:21,311|pool-1-thread-1                 |Thread id=16|About to sleep 5 seconds
2015-11-05 18:05:22,315|main                            |Thread id=1 |About to sleep 80 seconds
2015-11-05 18:05:25,296|pool-1-thread-2                 |Thread id=17|About to sleep 5 seconds
</blockquote>
Note that only two threads (pool-1-thread-1,id=16 and pool-1-thread-2, id=17) were involved in running 4 tasks. Notice on the JVisualVM that the pool did not shrink to 1 or 0 and both of the pool threads remained available/waiting (parked) for more that 60 seconds and even after main thread finished. Main thread finished in 80 seconds after submitting last task.

<a href="https://bmwieczorek.files.wordpress.com/2015/11/fixed-thread-pool.png"><img src="https://bmwieczorek.files.wordpress.com/2015/11/fixed-thread-pool.png?w=300" alt="fixed-thread-pool" width="300" height="102" class="alignnone size-medium wp-image-1834" /></a>

<strong>2. CachedThreadPool</strong>
[code language="java"]
public static ExecutorService newCachedThreadPool() {
    return new ThreadPoolExecutor(0, // try to reduce the pool size to 0 if threads are idle long enough
                            Integer.MAX_VALUE, // almost no limit for the number of new threads started
                            60L, TimeUnit.SECONDS, // terminate thread after 60s idle
                            new SynchronousQueue&lt;Runnable&gt;());
}
[/code]

example:
[code language="java"]
public class MyCashedThreadPool {

    private static final Logger LOGGER = LoggerFactory.getLogger(MyCashedThreadPool.class);

    public static void main(String[] args) {
        sleepSeconds(10); // give 10 seconds to connect to JVisualMV

        ExecutorService newCachedThreadPool = Executors.newCachedThreadPool();
        newCachedThreadPool.submit(() -&gt; sleepSeconds(5)); // starts only first thread
        sleepSeconds(6); // wait 6s so first thread finishes running the task
        newCachedThreadPool.submit(() -&gt; sleepSeconds(5)); // reuses 1nd thread as
                                                           // available/waiting for 2nd task
        sleepSeconds(1); // wait 1s to add 3rd task
        newCachedThreadPool.submit(() -&gt; sleepSeconds(5)); // starts 2nd thread for 3rd task 
                                                           // as 1st thread still busy
        sleepSeconds(1); // wait 1s to add 4rd task
        newCachedThreadPool.submit(() -&gt; sleepSeconds(5)); // starts 3rd thread for 4rd task 
                                                           // as 1st and 2nd thread still busy 
        sleepSeconds(70); // wait 70s to so 1st, 2nd and 3rd thread terminate after 60s of being idle 
        newCachedThreadPool.submit(() -&gt; sleepSeconds(5)); // starts 4th thread for 5th task 
                                                           // as no previous threads were available
        sleepSeconds(10);
    }

    private static void sleepSeconds(int seconds) {
        try {
            LOGGER.debug(currentThreadId() + &quot;About to sleep {} seconds&quot;, seconds);
            TimeUnit.SECONDS.sleep(seconds);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private static String currentThreadId() {
        long id = Thread.currentThread().getId();
        return String.format(&quot;Thread id=%-2s|&quot;, id);
    }
}
[/code]

<blockquote>
Output:
2015-11-05 21:40:19,675|main                            |Thread id=1 |About to sleep 10 seconds
2015-11-05 21:40:29,688|main                            |Thread id=1 |About to sleep 6 seconds
2015-11-05 21:40:29,688|pool-1-thread-1                 |Thread id=16|About to sleep 5 seconds
2015-11-05 21:40:35,701|main                            |Thread id=1 |About to sleep 1 seconds
2015-11-05 21:40:35,701|pool-1-thread-1                 |Thread id=16|About to sleep 5 seconds
2015-11-05 21:40:36,702|main                            |Thread id=1 |About to sleep 1 seconds
2015-11-05 21:40:36,702|pool-1-thread-2                 |Thread id=17|About to sleep 5 seconds
2015-11-05 21:40:37,705|main                            |Thread id=1 |About to sleep 70 seconds
2015-11-05 21:40:37,705|pool-1-thread-3                 |Thread id=18|About to sleep 5 seconds
2015-11-05 21:41:47,710|main                            |Thread id=1 |About to sleep 10 seconds
2015-11-05 21:41:47,710|pool-1-thread-4                 |Thread id=19|About to sleep 5 seconds
</blockquote>

Note that min or max threads in the pool is not defined assuming 0 and Integer.MAX_VALUE. When a thread is available then it will be reused for a task. If thread is not available a new thread will be created in order to process a task. If a thread remains waiting (idle) for 60 seconds then it will be terminated. That could be seen on the JVisualVM where the thread pool shrinks to 0 at a certain moment and later expands again on new task.

<a href="https://bmwieczorek.files.wordpress.com/2015/11/cached-thread-pool.png"><img src="https://bmwieczorek.files.wordpress.com/2015/11/cached-thread-pool.png?w=300" alt="cached-thread-pool" width="300" height="96" class="alignnone size-medium wp-image-1839" /></a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1816</wp:post_id>
  <wp:post_date>2015-11-05 18:09:58</wp:post_date>
  <wp:post_date_gmt>2015-11-05 17:09:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>difference-between-cachedthreadpool-vs-fixedthreadpool-visualized-in-jvisualmvm</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[16568807092]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Interrupting Java thread when busy loop, blocked to access synchronized block and calling wait method</title>
  <link>https://bmwieczorek.wordpress.com/2015/11/07/interrupting-java-thread/</link>
  <pubDate>Sat, 07 Nov 2015 09:34:56 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1857</guid>
  <description/>
  <content:encoded><![CDATA[<strong>1. Interrupting busy thread</strong>
[code language="java"]
public class InterruptBusyThread {

    private static final Logger LOGGER = LoggerFactory.getLogger(InterruptBusyThread.class);

    public static void main(String[] args) throws InterruptedException {
        LOGGER.debug(&quot;Started&quot;);

        Thread thread = new Thread(() -&gt; {
            LOGGER.debug(&quot;Started&quot;);
            for (long counter = 0; counter &lt; 99999999999L; counter++) { // busy loop
            }
            LOGGER.debug(&quot;Finished, thread isInterrupted:&quot; + Thread.currentThread().isInterrupted());
        });
        thread.start();

        TimeUnit.SECONDS.sleep(1);
        LOGGER.debug(&quot;Finished sleeping, interrupting busy thread ...&quot;);
        thread.interrupt();
        LOGGER.debug(&quot;Finished&quot;);
    }
}
[/code]

<blockquote>
Output:
2015-11-07 10:30:13,380|main                            |Started
2015-11-07 10:30:13,446|Thread-0                        |Started

2015-11-07 10:30:14,447|main                            |Finished sleeping, interrupting busy thread ...
2015-11-07 10:30:14,447|main                            |Finished

2015-11-07 10:30:52,958|Thread-0                        |Finished, thread isInterrupted:true
</blockquote>
Note the call thread.interrupt() did not make any effect apart from setting interrupted flag. Thread kept on running. 

<strong>2. Interrupting thread blocked waiting to access synchronized block</strong>
[code language="java"]
public class InterruptThreadBlockedWaitingToAccessSynchronizedBlock {

    private static final Logger LOGGER = 
             LoggerFactory.getLogger(InterruptThreadBlockedWaitingToAccessSynchronizedBlock.class);

    public static void main(String[] args) throws InterruptedException {
        LOGGER.debug(&quot;Started&quot;);
        Object monitor = new Object();

        Thread thread = new Thread(() -&gt; {
            LOGGER.debug(&quot;Started, about to sleep&quot;);
            sleepSeconds(1); //wait so that main thread get access to monitor first
            LOGGER.debug(&quot;Finished sleeping, about to enter synchronized block&quot;);

            synchronized (monitor) {
                LOGGER.debug(&quot;Entered synchronized block, thread isInterrupted:{}&quot;, 
                                 Thread.currentThread().isInterrupted());
            }

            LOGGER.debug(&quot;Finished&quot;);
        });
        thread.start();

        synchronized (monitor) {
            LOGGER.debug(&quot;Entered synchronized block, started sleeping&quot;);
            sleepSeconds(3); // wait 3s to make sure thread0 gets BLOCKED waiting for 
                             //monitor to access synchronized block
            LOGGER.debug(&quot;Interrupting thread waiting on monitor&quot;);
            thread.interrupt();
            sleepSeconds(3);
            LOGGER.debug(&quot;Leaving synchronized block&quot;);
        }

        LOGGER.debug(&quot;Finished&quot;);
    }

    private static void sleepSeconds(int seconds) {
        try {
            TimeUnit.SECONDS.sleep(seconds);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
[/code]
<blockquote>
Output:
2015-11-07 10:47:29,337|main                            |Started
2015-11-07 10:47:29,403|main                            |Entered synchronized block, started sleeping
2015-11-07 10:47:29,403|Thread-0                        |Started, about to sleep

2015-11-07 10:47:30,404|Thread-0                        |Finished sleeping, about to enter synchronized block

2015-11-07 10:47:32,404|main                            |Interrupting thread waiting on monitor

2015-11-07 10:47:35,404|main                            |Leaving synchronized block
2015-11-07 10:47:35,404|main                            |Finished
2015-11-07 10:47:35,404|Thread-0                        |Entered synchronized block, thread isInterrupted:true
2015-11-07 10:47:35,404|Thread-0                        |Finished
</blockquote>
Note that interrupting Thread-0 BLOCKED waiting on monitor to get access to synchronized block 
<blockquote>
"Thread-0" #16 prio=5 os_prio=0 tid=0x0000000058b5d000 nid=0x1294 waiting for monitor entry [0x000000005acbf000]
   java.lang.Thread.State: BLOCKED (on object monitor)
	at com.bawi.interrupt.InterruptThreadBlockedWaitingToAccessSynchronizedBlock.lambda$0(InterruptThreadBlockedWaitingToAccessSynchronizedBlock.java:23)
	- waiting to lock  (a java.lang.Object)
	at com.bawi.interrupt.InterruptThreadBlockedWaitingToAccessSynchronizedBlock$$Lambda$3/2046562095.run(Unknown Source)
	at java.lang.Thread.run(Thread.java:745)
</blockquote>
does not give any effect apart from only changing thread isInterrupted flag. The Thread-0 keeps on being BLOCKED waiting to access monitor.

<strong>3. Interrupting thread calling wait method</strong>
[code language="java"]
public class InterruptThreadWaitingCallingWaitMethod {

    private static final Logger LOGGER = 
                LoggerFactory.getLogger(InterruptThreadWaitingCallingWaitMethod.class);

    public static void main(String[] args) throws InterruptedException {
        Object monitor = new Object();

        LOGGER.debug(&quot;Started&quot;);
        Thread thread = new Thread(() -&gt; {
            LOGGER.debug(&quot;Started, about to enter synchronized block&quot;);

            synchronized (monitor) {
                LOGGER.debug(&quot;Entered synchronized block and sleeping 3 seconds&quot;);
                try {
                    sleepSeconds(3); // sleep 3s to show that wait() released the lock for main thread
                    LOGGER.debug(&quot;Finished sleeping, about to call wait() that releases monitor lock&quot;);
                    monitor.wait(); // calling wait() must be in synchronized block otherwise 
                    // java.lang.IllegalMonitorStateException will be thrown

                    // wait() immediately releases the lock so other thread could enter synchronized 
                    // block ON THE SAME MONITOR lock and could send notify on that monitor

                    // current thread need wait to re-acquire the lock to execute next 
                    // instruction in the synchronized block
                } catch (Exception e) {
                    LOGGER.warn(&quot;Re-acquired monitor lock and logging exception in catch:&quot;, e);
                }
                LOGGER.debug(&quot;Leaving synchronized block&quot;);
            }

            LOGGER.debug(&quot;Finished&quot;);
        });
        thread.start();

        sleepSeconds(1); //wait so that thread0 access to monitor first
        LOGGER.debug(&quot;Finished sleeping, about to enter synchronized block&quot;);
        synchronized (monitor) {
            LOGGER.debug(&quot;Entered synchronized block, interrupting thread waiting on monitor&quot;);
            thread.interrupt();
            LOGGER.debug(&quot;Sleeping while holding the monitor lock so Thread0 remains calling wait()&quot;);
            sleepSeconds(3); 
            LOGGER.debug(&quot;Finished sleeping and leaving synchronized block&quot;);
        }

        LOGGER.debug(&quot;Finished&quot;);
    }

    private static void sleepSeconds(int seconds) {
        try {
            TimeUnit.SECONDS.sleep(seconds);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
[/code]
<blockquote>
Output:
2015-11-07 16:21:49,697|main                            |Started
2015-11-07 16:21:49,748|Thread-0                        |Started, about to enter synchronized block
2015-11-07 16:21:49,748|Thread-0                        |Entered synchronized block and sleeping 3 seconds

2015-11-07 16:21:50,749|main                            |Finished sleeping, about to enter synchronized block

2015-11-07 16:21:52,749|Thread-0                        |Finished sleeping, about to call wait() that releases monitor lock
2015-11-07 16:21:52,749|main                            |Entered synchronized block, interrupting thread waiting on monitor
2015-11-07 16:21:52,749|main                            |Sleeping while holding the monitor lock so Thread0 remain calling wait()

2015-11-07 16:21:55,749|main                            |Finished sleeping and leaving synchronized block
2015-11-07 16:21:55,749|main                            |Finished
2015-11-07 16:21:55,750|Thread-0                        |Re-acquired monitor lock and logging exception in catch:
java.lang.InterruptedException
	at java.lang.Object.wait(Native Method)
	at java.lang.Object.wait(Object.java:502)
	at com.bawi.interrupt.InterruptThreadWaitingCallingWaitMethod.lambda$0(InterruptThreadWaitingCallingWaitMethod.java:24)
	at java.lang.Thread.run(Thread.java:745)
2015-11-07 16:21:55,752|Thread-0                        |Leaving synchronized block
2015-11-07 16:21:55,752|Thread-0                        |Finished
</blockquote>
Note that thread0 fist accessed the monitor for synchronized block and sleeps 3 seconds to show that main thread needs to wait for the monitor. When thread0 finished sleeping then it calls <code>monitor.wait()</code> method that internally releases the monitor lock and puts the thread0 into WAITING state (waiting for <code>monitor.notify()</code> or <code>monitor.notifyAll()</code>). Thread0 is now disabled from CPU scheduling. As the monitor lock is released then main thread enters synchronized block and interrupts the thread0 so that threads0 is no longer waiting and proceeds to catch clause and next instructions. ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1857</wp:post_id>
  <wp:post_date>2015-11-07 10:34:56</wp:post_date>
  <wp:post_date_gmt>2015-11-07 09:34:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>interrupting-java-thread</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="interrupt"><![CDATA[interrupt]]></category>
  <category domain="post_tag" nicename="isinterrupted"><![CDATA[isInterrupted]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="post_tag" nicename="monitor"><![CDATA[monitor]]></category>
  <category domain="post_tag" nicename="notify"><![CDATA[notify]]></category>
  <category domain="category" nicename="synchronization"><![CDATA[synchronization]]></category>
  <category domain="post_tag" nicename="synchronized"><![CDATA[synchronized]]></category>
  <category domain="category" nicename="threads"><![CDATA[threads]]></category>
  <category domain="post_tag" nicename="wait"><![CDATA[wait]]></category>
  <wp:postmeta>
    <wp:meta_key>sharing_disabled</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[16621140858]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Eclipse Mars vs Intelij 15.0.1</title>
  <link>https://bmwieczorek.wordpress.com/2015/11/24/eclipse-mars-vs-intelij-15-0-1/</link>
  <pubDate>Tue, 24 Nov 2015 15:12:30 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1889</guid>
  <description/>
  <content:encoded><![CDATA[<strong>NAVIGATING/SEARCHING/JUMPING/OPENING</strong>

<strong>0. Find action</strong>  e.g. 'key' (to learn all shortcuts) or 'last edit location' (to learn this shortcut)
Intelij: <code>Ctrl+Shift+A</code>
Eclipse: <code>Ctrl+3</code>

<strong>1. Opening file e.g. Spring context</strong>
[code language="java"]
return new ClassPathXmlApplicationContext(new String[] {
    &quot;beans-context.xml&quot;, &quot;reports-context.xml&quot;}, parentContext);
[/code]
Intelij: <code>Ctrl+Click</code> on the file name in the code to open 'beans-context.xml' file automatically. <code>Ctrl+Shift+N</code> to <code>n</code>avigate to file popup searching not only in the project code but also in jar dependency.
Eclipse: <code>Ctrl+Shift+R</code> at optionally highlighted or copied name to open <code>r</code>esource popup (search only in the project)

<strong>2. Search everywhere - quick search text in classes/resources</strong>
Intelij: <code>Shift+Shift</code> (<code>double shift</code>)
Eclipse: install "Quick search" plugin and <code>Ctrl+Shift+L</code>  

<strong>3. Open symbol (class, variable, method)</strong>
Intelij: <code>Ctrl+Shift+Alt+N</code> e.g TL.initialV to jump to ThreadLocal initialValue method
Eclipse: No direct equivalent, need to search by 'search text everywhere' or 'find usage'

<strong>4. Open class - both project and jar files</strong> - supports camel case and wild card (*) name pattern (e.g. Thr*Map or TLMap for ThreadLocalMap)
Intelij: <code>Ctrl+N</code>to <code>navigate to class
Eclipse: <code>Ctrl+Shift+T</code> (open <code>t</code>ype)

<strong>5. Open method/variable/class declaration</strong> (on a highlighted interface type or interface method)
Intelij: <code>Ctrl+Click</code> or <code>Ctrl+B</code>
Eclipse: <code>F3</code>

<strong>6. Open interface/method implementation</strong> (on a highlighted interface type or interface method)
Intelij: <code>Ctrl+Alt+Click</code> or <code>Ctrl+Alt+B</code>
Eclipse: <code>Ctrl+T</code>

<strong>7. Find class/method/variable usage</strong>
Intelij: <code>Alt+F7</code>, additionally can group by production/test
Eclipse: <code>Ctrl+Shift+G</code> 

<strong>8. Call hierarchy</strong> (SAME)
Intelij: <code>Ctrl+Alt+H</code>
Eclipse: <code>Ctrl+Alt+H</code>

<strong>9. Navigate back/forward</strong>
Intelij: <code>Ctrl+Alt+left/right</code>
Eclipse: <code>Alt+left/right</code>

<strong>10. Show recent files</strong> (SAME)
Intelij: <code>Ctrl+E</code> or <code>Ctrl+Tab</code> (and recently edited files: <code>Ctrl+Shift+E</code>)
Eclipse: <code>Ctrl+E</code>

<strong>11. Jump to Junit test or class under test</strong>
Intelij: <code>Ctrl+Shift+T</code> jump to <code>t</code>est
Eclipse: not available

<strong>12. Show file structure</strong>
Intelij: <code>Ctrl+F12</code>
Eclipse: <code>Ctrl+O</code> <code>o</code>utline

<strong>13. Go to previous/next error</strong>
Intelij: <code>Shift+F2</code>/<code>F2</code> then <code>Ctrl+F1</code> for error details
Eclipse: <code>Ctrl+,</code>/<code>Ctrl+.</code> For details go to or error icon on the left or open Problems view or error icon on the left

<strong>14. Highlight usages</strong>
Intelij: <code>Click</code>/<code>Ctrl+Shift+F7</code>
Eclipse: <code>Click</code>

<strong>14. Find occurrences in current file</strong>
Intelij: <code>Ctrl+Alt+F7</code>
Eclipse: <code>Ctrl+Shift+U</code> occ<code>u</code>rrences

<strong>15. Bookmarks</strong>
Intelij: <code>F11</code> - toggle add/remove; <code>Shift+F11</code> - view bookmarks
Eclipse: recommended Window/Preferences/General/Keys: Bookmark, bind new shortcuts: <code>Alt+B, A</code> for <code>b</code>ookmark <code>a</code>dd current line; <code>Alt+B, S</code> for <code>b</code>ookmark <code>s</code>how

<strong>16. Find text in current file</strong>
Intelij: <code>Ctrl+F</code> <code>f</code>ind
Eclipse: <code>Ctrl+F</code> <code>f</code>ind

<strong>17. Find text in project (in files)</strong>
Intelij: <code>Ctrl+Shift+F</code> <code>f</code>ind in paths
Eclipse: <code>Ctrl+H</code> for Java Search

<strong>. Go to last edit location</strong>
Intelij: <code>Ctrl + Shift + Backspace</code>
Eclipse: <code>Ctrl+Q</code>

<strong>. Expand/collapse code block</strong>
Intelij: <code>Ctrl + (Shift) + -/+</code> expand/collapse code block
Eclipse: 


<strong>EDITING/REFACTORING</strong>
<strong>Refactor menu</strong>
Intelij: <code>Ctrl + Alt+ Shift + T</code>
Eclipse: <code>Alt + Shift + T</code>

<strong>0. Auto completion</strong> - start typing e.g. <code>new Ar</code> 
Intelij: automatically opens popup to choose e.g. ArrayList (alternatively use <code>Ctrl+Space</code> for basis auto completion or popup), intelij also proposes ArrayList for <code>new AL</code>
Eclipse: press explicitly <code>Ctrl+Space</code> for auto completion or popup

<strong>0. Smart Auto completion</strong>
InteliJ:
A) start typing  <code>Set set = new </code> and press;
Intelij:  <code>Ctrl+Space</code> to get all suggestions (including primitives), BUT better press <code>Ctrl+Shift+Space</code> to get filtered options applicable for ONLY to the current context (here: classes implementing Set interface). 
B) start typing  <code>Set set = </code> and press <code>Ctrl+Shift+Space</code> TWICE to get results filtered to return Set of String like e.g. Collections.emptyList() or current class context related e.g.: applicationContext.getComponentNames();
C)  start typing  <code>Set set = empty</code>
to get a popup for Collections.emptyList()
D) just start typing: <code>emptyS</code> and press <code>Ctrl+Alt+Space</code> for popup with static fields/methods options e.g. Collections.<b>emptyS</b>et() and Collections.<b>empty</b>Navigable<b>S</b>et();
Eclipse: <code>Ctrl+Space</code> for basis auto completion popup. No InteliJ smart auto completion.

<strong>1. Selecting code syntactically (more/less)</strong>
Intelij: <code>Ctrl+W/Ctrl+Shift+W</code>
Eclipse: <code>Alt+Shift+Up/Down</code>

<strong>2. Rename</strong>
Intelij: <code>Shift+F6</code>
Eclipse: <code>Ctrl+2,R</code> or <code>Alt+Shift+R</code> <code>r</code>rename

<strong>3. Extract variable</strong>
Intelij: <code>Ctrl+Alt+V</code> local <code>v</code>ariable 
A) allow to choose the type of the extracted variable to e.g. String, int etc)
B) lets you extract highlighted (<code>Ctrl+W</code>) part of the String
Eclipse: <code>Ctrl+2,L</code> <code>Alt+Shift+L</code> <code>l</code>ocal variable 
A) not possible to change the type
B) workaround - highlight part of the test, then quick fix (<code>Ctrl+1</code>) and choose 'Pick out selected part of String'

<strong>4. Extract method</strong>
Intelij: <code>Ctrl+Alt+M</code> <code>m</code>ethod
Eclipse: <code>Ctrl+2,M</code> or <code>Alt+Shift+M</code> <code>m</code>ethod 

<strong>4. Extract field</strong> and choose how it is initialized
Intelij: <code>Ctrl+Alt+F</code> <code>m</code>ethod
Eclipse: <code>Ctrl+2,F</code>, or go to refactoring menu <code>Alt+Shift+T</code> and choose 'Convert local variable to field' or assign a new shortcut <code>Alt+Shift+F</code> for <code>f</code>ield  when 'Editing Java Source'. Note you need to create first local variable before conversion. 

<strong>5. Extract variable to method parameter</strong>
Intelij: <code>Ctrl+Alt+P</code> <code>p</code>arameter
Eclipse: <code>Alt+Shift+T + P (introduce Parameter in popup)</code> - suggest remapping to <code>Alt+Shift+P</code> for <code>p</code>arameter

<strong>6. Inline</strong> (e.g. select local variable, method declaration or static final field to inline)
Intelij: <code>Ctrl+Alt+N</code> i<code>n</code>line
Eclipse: <code>Alt+Shift+I</code> - <code>i</code>nline 

<strong>. Optimize/organize imports</strong>
Intelij: <code>Ctrl+Alt+O</code> <code>o</code>ptimize, recommended: File/Settings/Editor/General/Auto Import: Optimize imports on the fly, Add unambiguous imports on the fly
Eclipse: <code>Ctrl+Shift+O</code> <code>o</code>rganize, recommended Window/Preferences/Java/Editor/Save actions: Perform selected actions on save: Organize imports

<strong>. Quick fix</strong>
Intelij: <code>Alt+Enter</code> 
Eclipse: <code>Ctrl+1</code> (not only errors/warnings but also refactoring e.g. combine strings into one, pick out selected part of String, invert if-statement etc...)

<strong>. Safe delete</strong>
Intelij: <code>Alt+Delete</code> - inspects/view usages to check if can be safely deleted
Eclipse: not available

<strong>. Type migration</strong>
Intelij: move the cursor to the type e.g. String (not the variable name) to change (e.g. String -&gt; int), then press <code>Ctrl+Shift+F6</code> (or choose Refactoring/Type migration) and type 'int' in the migration popup. Fix conflicts, if found. 
Eclipse: not available

<strong>. Find and replace code duplication </strong>
Intelij: go to the method body or constant to be used for duplicate check against rest of the code and replace the found duplicated code using that method or constant; no default shortcut available, go to Refactoring/Find and replace code duplication.
Eclipse: not available

<strong>. Join lines</strong>
Intelij: <code>Ctrl+Shift+J</code>
Eclipse: <code>Ctrl+Alt+J</code>

<strong>. Special handling of boolean type</strong> 
Intelij: under refactoring (<code>Ctrl+Alt+Shift+T</code>) choose 'Invert boolean' (no default direct short-cut)
Eclipse: only invert if condition with quick fix (<code>Ctrl+1</code>)

<strong>. Statement auto completion</strong>
Intelij: <code>Ctrl+Shift+Enter</code>
Eclipse: enable by Window/Preferences/Java/Editor/Typing: Automatically insert at correct position: Semicolon and Braces

<strong>. Generalize declared type</strong> e.g from ArrayList to List
Intelij: available <code>Shift+Tab</code> when creating variable
Eclipse: recommended add new key e.g. <code>Alt+Shit+E</code> g<code>e</code>neralize declared type (Alt+Shift+G already taken for find usage)

<strong>. Toggle maximize editor</strong>
Intelij: <code>Ctrl+Shift+F12</code>
Eclipse: <code>Ctrl+M</code> <code>m</code>aximize/minimize window

<strong>. Reformat code</strong>
Intelij: <code>Alt+Shift+L</code> (optionally <code>Alt+Shift+Ctrl+L</code> for reformatting options)
Eclipse: <code>Ctrl+Shift+F</code>

<strong>. Infer generic type arguments / generify (Generics)</strong>
Intelij: Refactor(Ctrl+Shift+Alt+T)/Generify
Eclipse: <code>At+Shift+T,G</code> or Refactor/Infer <code>g</code>eneric Type Arguments

<strong>. Pull up/push down</strong>
pull up = moves selected method/field to the super class
push down = moves selected method/field to the derived class(es)
Intelij: Refactor(Ctrl+Shift+Alt+T)/Pull Member Up or /Push Member Down
Eclipse: <code>At+Shift+T,U</code> for pull <code>u</code>p, <code>At+Shift+T,D</code> for push <code>d</code>own or Refactor/Pull Up or /Push down

<strong>. Templates</strong>
Intelij: <code>Ctrl+J</code> Insert a live template and <code>Ctrl+Alt+J</code> surround with live template (e.g. callable, try-with-resources, lock etc...)
Eclipse: <code>Ctrl+Space, Ctrl+Space</code> or add custom shortcut <code>Alt+T</code> for Quick assist (<code>t</code>emplate proposal)

post file completion e.g. string.notEmpty
extract part of the text into variable by select Ctrl+W and refactor (Ctrl+Shift+Alt+T and choose variable or directly Ctrl+Alt+V)


Structural search - find patterns e.g for 'try and empty catch block'

Intelij: Settings: Ctrl+Alt+S

Spell check:
Intelij: gives warning: typo in word 'Multiple', move the cursor to highlighted work, then Alt+Enter Intention Action fix to see: Typo: rename to: (list with correct word proposals)
Eclipse: no warning detected for misspelled method name: shouldRetryMutlipleTimesAndHandleExceptionFromSubsystem


<strong>RUNNING</strong>
<strong>. Run Junit test for a current class</strong>
Intelij: <code>Ctrl+Shift+F10</code>
Eclipse: <code>Alt+Shift+X,T</code>

<strong>. Run history</strong>
Intelij: <code>Alt+Shift+F10</code>
Eclipse: no shortcut, <code>Alt+R</code> to go to <code>R</code>un menu and choose 3rd element 'Run History'
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1889</wp:post_id>
  <wp:post_date>2015-11-24 16:12:30</wp:post_date>
  <wp:post_date_gmt>2015-11-24 15:12:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>eclipse-mars-vs-intelij-15-0-1</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="eclipse"><![CDATA[eclipse]]></category>
  <category domain="post_tag" nicename="ide-comparizon"><![CDATA[ide comparizon]]></category>
  <category domain="post_tag" nicename="intelij"><![CDATA[intelij]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[17160129127]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Eclipse custom installation</title>
  <link>https://bmwieczorek.wordpress.com/2015/12/01/eclipse-custom-installation/</link>
  <pubDate>Tue, 01 Dec 2015 13:13:00 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=1999</guid>
  <description/>
  <content:encoded><![CDATA[1. Check Preferences/General/Appearance/Label Decorations: Java Type Indicator

2. Exclude from Open class, content assist, fix proposals and organizing imports: Preferences/Java/Appearance/Type filters:
java.awt.*
com.sun.xml.bind.v2.schemagen.xmlschema.List

3. Check Preferences/Java/Editor/Save Actions: Organize imports, Additional Actions

4. Check Preferences/Java/Editor/Typing: Automatically insert at correct position: semicolons and braces

5. Preferences/Java/Compiler/Errors Warnings/Annotations: Unhandled token in '@SuppressWarnings': set to Ignore

6. Preferences/Java/Code Style/Formatter: My custom formatter: 
Indentation tab: General Settings: Spaces only, Indentation size 4, Tab size 4;
On/Off tags: Check enable: @formatter:off and @formatter:on
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1999</wp:post_id>
  <wp:post_date>2015-12-01 14:13:00</wp:post_date>
  <wp:post_date_gmt>2015-12-01 13:13:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>eclipse-custom-installation</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="eclipse"><![CDATA[eclipse]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[17367940479]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>My Custom Intellij Shortcuts and Live Templates (some based on Eclipse)</title>
  <link>https://bmwieczorek.wordpress.com/2015/12/04/my-custom-intellij-shortcuts-and-live-templates-some-based-on-eclipse/</link>
  <pubDate>Fri, 04 Dec 2015 09:41:26 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2046</guid>
  <description/>
  <content:encoded><![CDATA[<a title="My Custom Intelijj Keymap Shortcuts" href="https://bmwieczorek.files.wordpress.com/2015/12/my-custom-intelijj-keymap-shortcuts.doc">My Custom Intellij Keymap Shortcuts.doc</a>
<table>
<tbody>
<tr>
<td><em>N</em>avigate to <strong><u>T</u></strong>ype</td>
<td>Ctrl+Shift+<strong><u>T</u></strong>/Ctrl+<em>N</em></td>
</tr>
<tr>
<td><em>N</em>avigate to <strong><u>F</u></strong>ile/<strong><u>R</u></strong>esource</td>
<td>Ctrl+Shift+<strong><u>F</u></strong>/Ctrl+Shift+<strong><u>R</u></strong>/Ctrl+Shift+<em>N</em></td>
</tr>
<tr>
<td><em>N</em>avigate to <strong><u>S</u></strong>ymbol</td>
<td>Ctrl+Shift+<strong><u>S</u></strong>/Ctrl+Shift+Alt+<em>N</em></td>
</tr>
<tr>
<td>Navigate to <strong><u>J</u></strong>Unit</td>
<td>Ctrl+Shift+<strong><u>J</u></strong></td>
</tr>
<tr>
<td>Navigate to <strong><u>L</u></strong>ast edit location</td>
<td>Ctrl+Shift+<strong><u>L</u></strong>/Ctrl+Shift+Backspace</td>
</tr>
<tr>
<td>Navigate back // forward</td>
<td>Alt+Left/Ctrl+Alt+Left  // Alt+Right/Ctrl+Alt+Right</td>
</tr>
<tr>
<td>Navigate next // previous error</td>
<td>Alt+. // Alt+,</td>
</tr>
<tr>
<td>Navigate to Type // Call <strong><u>H</u></strong>ierarchy</td>
<td>F4 // Ctrl+<strong><u>H</u></strong> // Ctrl+Alt+<strong><u>H</u></strong></td>
</tr>
<tr>
<td>Navigate/Go to <strong><u>L</u></strong>ine</td>
<td>Ctrl+<strong><u>L</u></strong><u>/</u>Ctrl+G</td>
</tr>
<tr>
<td>Navigate to declaration</td>
<td>F3/Ctrl+B</td>
</tr>
<tr>
<td>Navigate to implementation</td>
<td>Ctrl+T/Ctrl+Alt+B</td>
</tr>
<tr>
<td>Navigate to <strong>B</strong>ookmark – <strong><u>S</u></strong>how // <strong><u>T</u></strong>oggle/<strong><u>A</u></strong>dd</td>
<td>Alt+Shift+<strong><u>B</u></strong>,<strong><u>B</u></strong>/<strong><u>S</u></strong> /  Shift+F11 // Alt+Shift+<strong><u>B</u></strong>,<strong><u>T/A</u></strong> /  F11</td>
</tr>
<tr>
<td>Go to references/Find usages</td>
<td>Ctrl+Shift+G /Alt+F7</td>
</tr>
<tr>
<td><u>F</u>ind in file // <u>F</u>ind in paths</td>
<td>Ctrl+<strong><u>F</u></strong>/Alt+F3 // Ctrl+Alt+Shift+<strong><u>F</u></strong></td>
</tr>
<tr>
<td>Search everywhere</td>
<td>Shift x2 (double Shift)</td>
</tr>
<tr>
<td>Quick <u>D</u>ocumentation</td>
<td>Ctrl+<u>D</u>/Ctrl+Q/Ctrl+2ndButton Click</td>
</tr>
<tr>
<td>Quick <u>O</u>utline (File Structure)</td>
<td>Ctrl+O/Ctrl+F12</td>
</tr>
<tr>
<td>Quick switch <strong><u>E</u></strong>ditor r<strong><u>E</u></strong>cent open//modified files</td>
<td>Ctrl+<strong><u>E</u></strong>/Ctrl+Tab // Ctrl+Shift+<strong><u>E</u></strong></td>
</tr>
<tr>
<td>Quick error description</td>
<td>Ctrl+2/Ctrl+F1</td>
</tr>
<tr>
<td>Structured selection extend // shrink</td>
<td>Alt+Shift+Up/Ctrl+W // Alt+Shift+Down/Ctrl+Shift+W</td>
</tr>
<tr>
<td>Refactor <strong><u>T</u></strong>his</td>
<td>Alt+Shift+<strong><u>T</u></strong>/Ctrl+Shift+Alt+<strong><u>T</u></strong></td>
</tr>
<tr>
<td><strong><u>R</u></strong>ename</td>
<td>Alt+Shift+<strong><u>R</u></strong>/Shift+F6</td>
</tr>
<tr>
<td>Extract <strong><u>M</u></strong>ethod</td>
<td>Alt+Shift+<strong><u>M</u></strong>/Ctrl+Alt+<strong><u>M</u></strong></td>
</tr>
<tr>
<td>Change method <strong><u>S</u></strong>ignature</td>
<td>Alt+Shift+<strong><u>C</u></strong>/Ctrl+F6</td>
</tr>
<tr>
<td>Extract <strong><u>L</u></strong>ocal (<strong><u>V</u></strong>ariable)</td>
<td>Alt+Shift+<strong><u>L</u></strong>/Ctrl+Alt+<strong><u>V</u></strong></td>
</tr>
<tr>
<td><strong><u>S</u></strong>ource generate</td>
<td>Alt+Shift+<strong><u>S</u></strong>/Alt+Insert</td>
</tr>
<tr>
<td>Move line down/up</td>
<td>Alt+Down/Up</td>
</tr>
<tr>
<td><strong><u>I</u></strong>nline</td>
<td>Alt+Shift+<strong><u>I</u></strong>/Ctrl+Alt+N</td>
</tr>
<tr>
<td><strong><u>J</u></strong>oin lines</td>
<td>Alt+Shift+<strong><u>J</u></strong></td>
</tr>
<tr>
<td>Extract <strong><u>F</u></strong>ield</td>
<td>Ctrl+Alt+<strong><u>F</u></strong></td>
</tr>
<tr>
<td>Extract <strong><u>C</u></strong>onstant</td>
<td>Ctrl+Alt+<strong><u>C</u></strong></td>
</tr>
<tr>
<td>Auto-<strong><u>I</u></strong>ndent</td>
<td>Ctrl+Alt+<strong><u>I</u></strong></td>
</tr>
<tr>
<td><strong><u>O</u></strong>rganize/<strong><u>O</u></strong>ptimize imports</td>
<td>Ctrl+Shift+<strong><u>O</u></strong>/Ctrl+Alt+<strong><u>O</u></strong></td>
</tr>
<tr>
<td><strong><u>T</u></strong>emplate // Surround by template</td>
<td>Ctrl+Alt+<strong><u>T</u></strong> / Ctrl+J // Ctrl+Alt+J</td>
</tr>
<tr>
<td><strong><u>R</u></strong>eplace // <strong><u>R</u></strong>eplace in paths</td>
<td>Ctrl+<strong><u>R</u></strong> // Ctrl+Alt+Shift+<strong><u>R</u></strong></td>
</tr>
<tr>
<td>Re-<strong><u>F</u></strong>ormat // Re-format dialog</td>
<td>Ctrl+Shift+<strong><u>F</u></strong> / Ctrl+Alt+L // Ctrl+Alt+Shift+L</td>
</tr>
<tr>
<td>Statement completion</td>
<td>Ctrl+Shift+Enter</td>
</tr>
<tr>
<td>File rename</td>
<td>F2</td>
</tr>
<tr>
<td>Quick fix (Intention)</td>
<td>Ctrl+1/Alt+Enter</td>
</tr>
<tr>
<td><strong><u>N</u></strong>ew – <strong><u>J</u></strong>ava/<strong><u>C</u></strong>lass //<strong><u>P</u></strong>ackage/<strong><u>D</u></strong>irectory//<strong><u>F</u></strong>ile</td>
<td>Ctrl+Alt+<strong><u>N</u></strong>,<strong><u>J</u></strong>/<strong><u>C</u></strong> // <strong><u>P</u></strong>/<strong><u>D</u></strong> // <strong><u>F</u></strong></td>
</tr>
<tr>
<td><strong><u>R</u></strong>un already selected // Choose and <strong><u>R</u></strong>un</td>
<td>Alt+Shift+X,<strong><u>R</u></strong>/Shift+F10//Alt+Shift+X,Shift+<strong><u>R</u></strong>/Alt+Shift+F10</td>
</tr>
<tr>
<td>Run <strong><u>T</u></strong>est // Rerun <strong><u>F</u></strong>ailed <strong><u>T</u></strong>ests</td>
<td>Alt+Shift+X,<strong><u>T</u></strong>/Shift+F10//Alt+Shift+X,Shift+<strong><u>T</u></strong>/Alt+Shift+X,<strong><u>F</u></strong></td>
</tr>
<tr>
<td>Run <strong><u>I</u></strong>nspection</td>
<td>Alt+Shift+X,<strong><u>I</u></strong>/Ctrl+Alt+Shift+<strong><u>I</u></strong></td>
</tr>
<tr>
<td><strong><u>D</u></strong>ebug already selected // Choose and <strong><u>D</u></strong>ebug</td>
<td>Alt+Shift+<strong><u>X</u></strong>,<strong><u>D</u></strong>/Shift+F9//Alt+Shift+<strong><u>X</u></strong>,Shift+<strong><u>D</u></strong>/Alt+Shift+F9</td>
</tr>
<tr>
<td><strong><u>V</u></strong>SC-<strong><u>V</u></strong>SC dialog/<strong><u>C</u></strong>ommit/<strong><u>U</u></strong>pdate/<strong><u>H</u></strong>istory/<strong><u>R</u></strong>evert/<strong><u>P</u></strong>ush</td>
<td>Alt+Shift+<strong><u>V</u></strong>,<strong><u>V</u></strong>/<strong><u>C</u></strong>/<strong><u>U</u></strong>/<strong><u>H</u></strong>/<strong><u>R</u></strong>/<strong><u>P</u></strong></td>
</tr>
<tr>
<td><strong><u>D</u></strong>iff // Next change // Previous change</td>
<td>Ctrl+<strong><u>D</u></strong> // Ctrl+Alt+./Ctrl+Shift+.  // Ctrl+Alt+,/Ctrl+Shift+,</td>
</tr>
<tr>
<td><strong><u>M</u></strong>aximize/<strong><u>M</u></strong>inimize editor</td>
<td>Ctrl+<strong><u>M</u></strong>/Ctrl+Shift+F12</td>
</tr>
<tr>
<td>Close tool window</td>
<td>Shift+Escape</td>
</tr>
<tr>
<td>Code folding expand (<strong><u>+</u></strong>)/collapse all (<strong><u>-</u></strong>)</td>
<td>Ctrl+Shift+Plus/Minus</td>
</tr>
<tr>
<td><strong><u>S</u></strong>ettings</td>
<td>Ctrl+Alt+<strong><u>S</u></strong></td>
</tr>
<tr>
<td>Switch Keymap/color/code style scheme…</td>
<td>Ctrl+`</td>
</tr>
<tr>
<td>Go to Tool Window e.g. Project/VCS</td>
<td>Alt+ e.g. Alt+1 / 9</td>
</tr>
<tr>
<td>Find by <strong><u>A</u></strong>ction</td>
<td>Ctrl+Shift+<strong><u>A</u></strong></td>
</tr>
</tbody>
</table>
Live templates:
1. abbreviation: <strong>logger; </strong>description: SLF4J logger template text:

[code language="java"]private static final org.slf4j.Logger LOGGER = org.slf4j.LoggerFactory.getLogger($CLASS_NAME$.class);$END$[/code]

applicable: in Java declaration; edit template variables: name: CLASS_NAME, expression: className(), default value: , skip if defined: checked;

2. abbreviation: <strong>mock; </strong>description: Mockito.mock, template text:

[code language="java"]$TYPE$ $VAR$ = org.mockito.Mockito.mock($TYPE$.class);[/code]

applicable: in Java statement, declaration; edit template variables: name: TYPE, expression: expectedType(), default value: "java.lang.Object", skip if defined: checked; name: VAR, expression: suggestVariableName(), default value: "mock", skip if defined: not checked;

3. abbreviation: <strong>test; </strong>description: Given-When-Then Junit template, template text:

[code language="java"]@org.junit.Test
public void $TEST_METHOD_NAME$() {
 // given
 $END$

 // when

 // then

}[/code]

applicable: in Java declaration; edit template variables: name: TEST_METHOD_NAME, expression: , default value: "should", skip if defined: not checked

4. abbreviation: <strong>list; </strong>description:Arrays.asList, template text:

[code language="java"]java.util.List&lt;$TYPE$&gt; $VAR$ = java.util.Arrays.asList($END$);[/code]

applicable: in Java statement, declaration; edit template variables: name: TYPE, expression: expectedType(), default value: String, skip if defined: checked, name: VAR, expression: suggestVariableName(), default value: list, skip if defined: not checked

5. abbreviation: <strong>arraylist; </strong>description: create ArrayList, template text:

[code language="java"]java.util.List&lt;$TYPE$&gt; $VAR$ = new java.util.ArrayList&lt;&gt;($END$);[/code]

applicable: in Java statement, declaration; edit template variables: name: TYPE, expression: expectedType(), default value: String, skip if defined: checked, name: VAR, expression: suggestVariableName(), default value: list, skip if defined: not checked

6. abbreviation: hashmap<strong>; </strong>description: create HashMap, template text:

[code language="java"]java.util.Map&lt;$KEY_TYPE$, $VALUE_TYPE$&gt; $VAR$ = new java.util.HashMap&lt;&gt;($END$);[/code]

applicable: in Java statement, declaration; edit template variables: name: KEY_TYPE and VALUE_TYPE, expression: expectedType(), default value: String, skip if defined: checked, name: VAR, expression: suggestVariableName(), default value: map, skip if defined: not checked

7. abbreviation:<strong> private static final</strong>, template text:

[code language="java"]private static final $END$;[/code]
8. abbreviation:<strong> private final</strong>, template text:

[code language="java"]private final $END$;[/code]
9. abbreviation:<strong> foreach</strong> (copy of Intellij iter)
10. abbreviation:<strong> sysout </strong>(copy of Intellij sout)
11. abbreviation:<strong> main </strong>(copy of Intellij psvm)

Intellij fix suggestions (out of the box):
- redundant explicit array creation for calling varargs method (suggests to change <code>new String[] { "arg1", "arg2" }</code> to <code>"arg1", "arg2"</code> )
- duplicate code, offers navigation to  duplicate
- namespace declaration never used (suggestion to remove)
- find usages of a file (Ctrl+Shift+G /Alt+F7)
- inject Language/Reference (inside string double quotes press Ctrl+F1/Alt+Enter) and choose regex or html etc, then inside regex string press again Ctrl+F1/Alt+Enter to check sample text against the defined regex.

autocompletion: either camel case letters (e.g. 'np' for stringNamePatterns) or part of the name  (e.g. 'Collectors.lis' for 'Collectors.toList()')

parameter name hints for literals and null values in method call annotated by parameter name:[code language="java"] string.split(&lt;em&gt;regex:&lt;/em&gt; &quot; &quot;)[/code]

enabled by default

Additional Intellij setup:
Settings/Editor/General/Auto Import/
check: Optimize imports on the fly
check: Add unambiguous imports on the fly

Settings/Editor/Code Style/Java: Wrapping and Braces tab: Chained method calls: change from: 'Do not wrap' to 'Chop down if long' and check 'Align when multiline'

Settings/Editor/Inspections/Java/Language level migration aids: check 'foreach loop can be collapsed with Stream API', 'Raw use of parameterized class'

Customizing ubuntu to make cmd button work like ctlr button:
1. System settings -&gt; Text Entry -&gt; Add input source: English (Macintosh) and remove other languages
2.sudo apt-get install gnome-tweak-tool

open gnome-tweak-tool -&gt; typing -&gt; Alt/Win key behavior -&gt; choose: ctrl is mapped to Win keys


Alternatively make Intellij use cmd (win/super) key in virtual box:
1. System settings -&gt; Text Entry -&gt; Add input source: English (Macintosh) and remove other languages
2. sudo apt-get install compizconfig-settings-manager and remove laucher (empty text) for 
3. Intellij -&gt; Help -&gt; Edit custom properties -&gt; add line: keymap.windows.as.meta = true

]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2046</wp:post_id>
  <wp:post_date>2015-12-04 10:41:26</wp:post_date>
  <wp:post_date_gmt>2015-12-04 09:41:26</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>my-custom-intellij-shortcuts-and-live-templates-some-based-on-eclipse</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="eclipse"><![CDATA[eclipse]]></category>
  <category domain="post_tag" nicename="intelij"><![CDATA[intelij]]></category>
  <category domain="post_tag" nicename="keymap"><![CDATA[keymap]]></category>
  <category domain="post_tag" nicename="shortcuts"><![CDATA[shortcuts]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[17464083085]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[my-custom-intelij-shortcuts-some-based-on-eclipse]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Changing password via bash script</title>
  <link>https://bmwieczorek.wordpress.com/2015/12/19/changing-password-via-bash-script/</link>
  <pubDate>Sat, 19 Dec 2015 14:37:19 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2069</guid>
  <description/>
  <content:encoded><![CDATA[[code language="bash"]
#!/bin/bash
read -s -p &quot;Old password: &quot; oldPassword
echo &quot;&quot;
read -s -p &quot;New password: &quot; newPassword
echo &quot;&quot;
for h in box1 box2;
do
ssh myUser@$h &quot;echo -e '$oldPassword\n$newPassword\n$newPassword' | passwd&quot;
done
[/code]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2069</wp:post_id>
  <wp:post_date>2015-12-19 15:37:19</wp:post_date>
  <wp:post_date_gmt>2015-12-19 14:37:19</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>changing-password-via-bash-script</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="bash"><![CDATA[bash]]></category>
  <category domain="post_tag" nicename="changing-password"><![CDATA[changing password]]></category>
  <category domain="post_tag" nicename="passwd"><![CDATA[passwd]]></category>
  <category domain="post_tag" nicename="password"><![CDATA[password]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="unix"><![CDATA[unix]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[17945707269]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>My ubuntu installation</title>
  <link>https://bmwieczorek.wordpress.com/2015/12/30/my-ubuntu-installation/</link>
  <pubDate>Wed, 30 Dec 2015 18:44:36 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2074</guid>
  <description/>
  <content:encoded><![CDATA[<ol>
	<li>Turn off overlay scroll bar:
<code>gsettings set com.canonical.desktop.interface scrollbar-mode normal
gsettings reset com.canonical.desktop.interface scrollbar-mode
</code></li>
	<li>Add home directory to destop:
<code>gsettings set org.gnome.nautilus.desktop home-icon-visible true</code></li>
	<li>Install vim, git, subversion, cntlm:
<code>sudo apt-get update &amp;&amp; sudo apt-get upgrade -y</code>
<code>sudo apt-get install vim git subversion cntlm -y</code></li>
	<li>Install Silverlight (with closed firefox during installation) for Ipla:
<code>sudo add-apt-repository ppa:pipelight/stable
sudo apt-get update
sudo apt-get install --install-recommends pipelight-multi -y
sudo pipelight-plugin --enable silverlight
sudo pipelight-plugin --update
touch $HOME/.config/wine-wininet-installer.accept-license
Start and close browser
sudo pipelight-plugin --create-mozilla-plugins</code></li>
	<li>Update grub:
<code>sudo /etc/default/grub /etc/default/grub.bak</code>
<code>sudo vim /etc/default/grub</code>
change GRUB_DEFAULT from 0 to 4 to have:
GRUB_DEFAULT=4
<code>sudo update-grub</code></li>
	<li>Remove games:
<code>sudo apt-get remove gnome-mines gnome-mahjongg aisleriot gnome-sudoku -y
</code></li>
	<li>All bookmarks - Import from Chrome:
<code>Ctrl+Shift+O</code></li>
	<li>Disabling password for sudo:
<code>sudo visudo</code> and add as LAST LINE <code>bartek ALL=(ALL) NOPASSWD: ALL</code> and delete password for user <code>sudo passwd bartek -d</code></li>
	<li>Clean old packages:<code>
sudo apt-get clean &amp;&amp; sudo apt-get autoremove &amp;&amp; sudo apt-get autoclean &amp;&amp; sudo apt clean &amp;&amp; sudo apt autoremove &amp;&amp; sudo apt autoclean -y</code></li>
	<li>install java jdk - download from oracle http://www.oracle.com/technetwork/java/javase/downloads/index.html, maven, extract it: <code>tar xzf jdk-8u92-linux-x64.tar.gz</code>, add: <code>export JAVA_HOME=~/dev/env/jdk1.8.0_92</code> to ~/.profile</li>
	<li>make win key act as control key (useful when running ubuntu from virtual box on OSX with Mac keyboard):
<code>gsettings set org.gnome.desktop.input-sources xkb-options "['altwin:ctrl_win']"</code>
and change terminal settings
<code>gsettings set org.gnome.Terminal.Legacy.Keybindings:/org/gnome/terminal/legacy/keybindings/ paste 'v'</code></li>
	<li>Change menu to be always visible:<code>gsettings set com.canonical.Unity always-show-menus true</code></li>
</ol>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2074</wp:post_id>
  <wp:post_date>2015-12-30 19:44:36</wp:post_date>
  <wp:post_date_gmt>2015-12-30 18:44:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>my-ubuntu-installation</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ubuntu"><![CDATA[ubuntu]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[18256178365]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_170f71c8319eb978381993af0f8c888e</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>My git setup including GitHub and proxy</title>
  <link>https://bmwieczorek.wordpress.com/2016/01/20/my-git-setup-including-github-and-proxy/</link>
  <pubDate>Wed, 20 Jan 2016 17:46:29 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2102</guid>
  <description/>
  <content:encoded><![CDATA[Goal 1:

Remember password (for 8 hours)  so I do not need to reenter it every time for https connection to Github from cygwin. Remember my username for GitHub.

Solution - append cygwin ~/.gitconfig with:
<pre>[url "https://bmwieczorek@github.com"]
 insteadOf = https://github.com
[credential]
 helper = cache --timeout=28800</pre>
Goal 2:

While being AT WORK or VIA WOKR  VPN:
1) use proxy for (outside) non company git repo (e.g. github) and
2) do not use proxy for company internal git repo

WINDOWS SETUP:
set in windows: computer (right click) / advanced system settings / envoronment variables / set variable for user:
<pre>http_proxy ---&gt; http://user:pass@proxy.mycompany.com:port
https_proxy ---&gt; http://user:pass@proxy.mycompany.com:port
no_proxy ---&gt; .mycompany.com,localhost</pre>
or use a setenv.bat script:
<pre>setx http_proxy "http://user:pass@proxy.mycompany.com:port"
setx https_proxy "http://user:pass@proxy.mycompany.com:port"
setx no_proxy ".sabre.com,localhost"</pre>
cygwin settings in ~/.bashrc or ~/.bash_profile:
<pre>export http_proxy=http://user:pass@proxy.mycompany.com:port
export https_proxy=http://user:pass@proxy.mycompany.com:port
export no_proxy=.mycompany.com</pre>
INTELIJ:
File/settings/Apperance and Behaviour/System settings/HTTP proxy: check autodetect proxy settings

ECLIPSE:
set proxy settings to eclipse: window/preferences/general/network connections/active provider: native

Tortoise GIT:
Network: proxy NOT enabled

~/.gitconfig
http and https proxy commented as not used]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2102</wp:post_id>
  <wp:post_date>2016-01-20 18:46:29</wp:post_date>
  <wp:post_date_gmt>2016-01-20 17:46:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>my-git-setup-including-github-and-proxy</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="cygwin"><![CDATA[cygwin]]></category>
  <category domain="post_tag" nicename="eclipse"><![CDATA[eclipse]]></category>
  <category domain="category" nicename="git"><![CDATA[git]]></category>
  <category domain="category" nicename="github"><![CDATA[github]]></category>
  <category domain="post_tag" nicename="github-password"><![CDATA[GitHub password]]></category>
  <category domain="post_tag" nicename="intelij"><![CDATA[intelij]]></category>
  <category domain="category" nicename="proxy"><![CDATA[proxy]]></category>
  <category domain="post_tag" nicename="tortoisegit"><![CDATA[TortoiseGit]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[18946621318]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[my-git-proxy-for-http-https-and-no-proxy-exceptions-exclusions-for-eclipse-intelij-gittortoise-cygwin]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Java serial vs parallel stream</title>
  <link>https://bmwieczorek.wordpress.com/2016/01/21/java-serial-vs-parallel-stream/</link>
  <pubDate>Thu, 21 Jan 2016 09:27:38 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2110</guid>
  <description/>
  <content:encoded><![CDATA[use parallel stream when:
1) operation applied to data element is independent
and
2) either
a) cpu intensive (e.g. isPrime(number))
or
b) there are many of these data elements and they are efficiently splitable (like collections with random access and/or efficient search e.g. ArrayList; also HashMap and plain arrays, as opposed to not so efficiently splittable LinkedList, BlockinQueue and most IO based)

- does NOT make sense to paralellize relatively small number (e.g. less than 10000) of cpu non-intensive (not time-consuming) oprerations, instead use serial stream: numerbs.stream().filter(this::isEven).forEach(System.out::print)
*it may take some startup time for JVM to start all the cores for parallel processing,
* tasks subdivision takes also time for the framework to makes little sense to divide further already very small tasks
- it does make sense to paralellize cpu intensive operations: numbers.parallelStream().filter(this::isPrime).forEach(System.out::print)

Note that most IO sources (e.g. read lines) are not efficiently splitable and should be used sequentially.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2110</wp:post_id>
  <wp:post_date>2016-01-21 10:27:38</wp:post_date>
  <wp:post_date_gmt>2016-01-21 09:27:38</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>java-serial-vs-parallel-stream</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="java8"><![CDATA[java8]]></category>
  <category domain="post_tag" nicename="parallel-stream"><![CDATA[parallel stream]]></category>
  <category domain="post_tag" nicename="parallelism"><![CDATA[parallelism]]></category>
  <category domain="post_tag" nicename="stream"><![CDATA[stream]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[18969356777]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Thread dump analysis</title>
  <link>https://bmwieczorek.wordpress.com/2016/01/21/thread-dump-analysis/</link>
  <pubDate>Thu, 21 Jan 2016 10:10:22 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2112</guid>
  <description/>
  <content:encoded><![CDATA[It can happen that a thread <strong>name</strong> does not include a <strong>unique counter</strong> that is increase whenever new thread is created in the pool. In that case, use thread nid, e.g.
<pre>"<strong>Thread-1</strong>" #19 prio=5 os_prio=0 tid=0x00000000051db800 nid=<strong>0xdd5</strong> runnable [0x00002ae6063ac000]</pre>
that can be scripted by e.g.:

[code language="bash"]grep -e '&quot;.*&quot;' jstack.log | sed 's/&quot;\ .*nid=/&quot;,/' | egrep -oh '.*,[0-9A-Za-z]+' | sort[/code]

to get:
<pre>"<strong>Thread-1</strong>",<strong>0xdd5</strong></pre>
other examples after scripting:
<pre>"JMX Monitor ThreadGroup&lt;main&gt; Executor Pool [Thread-71]",0x52ed
"JMX Monitor ThreadGroup&lt;main&gt; Executor Pool [Thread-72]",0x7a8f
"RMI TCP Connection(idle)",0x580a
"RMI TCP Connection(idle)",0x5d7d

</pre>
example:

One JVM process id : <strong>3103 </strong>(PID - Process ID)
One JVM parent process id (PPID - Parent Process ID)
Many threads ids: 3103, 3104, ..., <strong>3602, 3605 , 3643 </strong> (LWP - light weight process id) that are listed in the thread dump as shown below:

&nbsp;
<pre>UID PID PPID <strong>LWP</strong> C NLWP STIME TTY TIME CMD
$ ps -eLf | grep tktdev | grep 3103 | grep java
tktdev 3103 2746 3103 0 37 03:25 pts/0 00:00:00 /opt/jdk1.8.0_45/bin/java -cp . com.bawi.cyclicbarrier.MyCyclicBarrier
tktdev 3103 2746 3104 0 37 03:25 pts/0 00:00:00 /opt/jdk1.8.0_45/bin/java -cp . com.bawi.cyclicbarrier.MyCyclicBarrier
...
tktdev 3103 2746 <strong>3602</strong> 99 37 03:25 pts/0 00:09:17 /opt/jdk1.8.0_45/bin/java -cp . com.bawi.cyclicbarrier.MyCyclicBarrier
tktdev 3103 2746 <strong>3605</strong> 99 37 03:25 pts/0 00:09:17 /opt/jdk1.8.0_45/bin/java -cp . com.bawi.cyclicbarrier.MyCyclicBarrier
tktdev 3103 2746 <strong>3643</strong> 99 37 03:25 pts/0 00:09:17 /opt/jdk1.8.0_45/bin/java -cp . com.bawi.cyclicbarrier.MyCyclicBarrier
tktdev 3103 2746 11475 0 37 03:29 pts/0 00:00:00 /opt/jdk1.8.0_45/bin/java -cp . com.bawi.cyclicbarrier.MyCyclicBarrier</pre>
<strong>Showing CPU usage per thread </strong>(with<strong> H</strong>yper-threading option)<strong> </strong>(result filtered)
<strong>top -H </strong>
<pre> PID USER PR NI VIRT RES SHR S <strong>%CPU</strong> %MEM TIME+ COMMAND
 <strong>3602</strong> tktdev 25 0 13.8g 28m 11m R <strong>99.9</strong> 0.1 10:38.74 java
 <strong>3605</strong> tktdev 25 0 13.8g 28m 11m R <strong>99.9</strong> 0.1 10:38.74 java
 <strong>3643</strong> tktdev 25 0 13.8g 28m 11m R <strong>99.9</strong> 0.1 10:38.74 java

</pre>
<strong>Getting java PID:
</strong>
<pre>$ /opt/jdk1.8.0_45/bin/jcmd
<strong>3103</strong> com.bawi.cyclicbarrier.MyCyclicBarrier

</pre>
<strong>Creating thread dump via jstack:</strong>
<pre>$ /opt/jdk1.8.0_45/bin/<strong>jstack</strong> -l <strong>3103</strong> &gt; jstack.log</pre>
Filtered content of thread dump:
<pre>"Thread-2" #20 prio=5 os_prio=0 tid=0x00002ac1f4013800 nid=0xe3b runnable [0x00002ac1eec0f000] <strong>(note: nid=0xe3b (in hex)== 3643 (in dec))</strong>
 java.lang.Thread.State: RUNNABLE
 at com.bawi.cyclicbarrier.MyCyclicBarrier.lambda$createAndStartNewThread$0(MyCyclicBarrier.java:23)
 at com.bawi.cyclicbarrier.MyCyclicBarrier$$Lambda$1/791452441.run(Unknown Source)
 at java.lang.Thread.run(Thread.java:745)</pre>
<pre>Locked ownable synchronizers:
 - None</pre>
<pre>"Thread-1" #19 prio=5 os_prio=0 tid=0x00002ac1f4011800 nid=0xe15 runnable [0x00002ac1eeb0e000] <strong>(note: nid=0xe15 (in hex)== 3605 (in dec))</strong>
 java.lang.Thread.State: RUNNABLE
 at com.bawi.cyclicbarrier.MyCyclicBarrier.lambda$createAndStartNewThread$0(MyCyclicBarrier.java:23)
 at com.bawi.cyclicbarrier.MyCyclicBarrier$$Lambda$1/791452441.run(Unknown Source)
 at java.lang.Thread.run(Thread.java:745)</pre>
<pre>Locked ownable synchronizers:
 - None</pre>
<pre>"Thread-0" #18 prio=5 os_prio=0 tid=0x00002ac1f4010000 nid=0xe12 runnable [0x00002ac1eea0d000] <strong>(note: nid=0xe12 (in hex)== 3602 (in dec))</strong>
 java.lang.Thread.State: RUNNABLE
 at com.bawi.cyclicbarrier.MyCyclicBarrier.lambda$createAndStartNewThread$0(MyCyclicBarrier.java:23)
 at com.bawi.cyclicbarrier.MyCyclicBarrier$$Lambda$1/791452441.run(Unknown Source)
 at java.lang.Thread.run(Thread.java:745)</pre>
<pre>Locked ownable synchronizers:
 - None</pre>
<pre></pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2112</wp:post_id>
  <wp:post_date>2016-01-21 11:10:22</wp:post_date>
  <wp:post_date_gmt>2016-01-21 10:10:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>thread-dump-analysis</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="number-of-threads-running"><![CDATA[number of threads running]]></category>
  <category domain="category" nicename="number-of-threads-started"><![CDATA[number of threads started]]></category>
  <category domain="category" nicename="thread-dump"><![CDATA[thread dump]]></category>
  <category domain="category" nicename="thread-pool"><![CDATA[thread pool]]></category>
  <category domain="category" nicename="threadpool"><![CDATA[threadpool]]></category>
  <category domain="category" nicename="threads"><![CDATA[threads]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[18970323947]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Understanding unix load for java processes</title>
  <link>https://bmwieczorek.wordpress.com/2016/01/23/understanding-unix-load-for-java-processes/</link>
  <pubDate>Sat, 23 Jan 2016 14:13:59 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2138</guid>
  <description/>
  <content:encoded><![CDATA[Given: Unix has 16 cores.

1.State before the load:
top - 15:52:37 up 128 days, 11:58, 2 users, <strong>load average: 0.20, 0.97, 0.83</strong>
Tasks: 343 total, 1 running, 340 sleeping, 0 stopped, 2 zombie
<strong>Cpu(s): 0.0%us</strong>, 0.0%sy, 0.0%ni,<strong> 99.8%id</strong>, 0.1%wa, 0.0%hi, 0.0%si, 0.0%st
Mem: 49453936k total, 36820724k used, 12633212k free, 1120572k buffers
Swap: 8388600k total, 0k used, 8388600k free, 33165052k cached

PID USER PR NI VIRT RES SHR S <strong>%CPU</strong> %MEM TIME+ COMMAND
18198 tktdev 15 0 11016 1264 784 R <strong>0.3</strong> 0.0 0:00.07 top

2. State during load:
$ top
top - 16:00:53 up 128 days, 12:06, 2 users, <strong>load average: 18.05, 12.28, 6.18</strong>
Tasks: 359 total, 7 running, 349 sleeping, 0 stopped, 3 zombie
<strong>Cpu(s): 99.6%us</strong>, 0.3%sy, 0.0%ni,<strong> 0.1%id, </strong>0.0%wa, 0.0%hi, 0.0%si, 0.0%st
Mem: 49453936k total, 36900812k used, 12553124k free, 1120572k buffers
Swap: 8388600k total, 0k used, 8388600k free, 33165072k cached

load of <strong>18.05 </strong>from last minute means that work load is getting bigger than it can consume (usually system admins tend to keep load as 0.75 * number of cores, so here 12)

PID USER PR NI VIRT RES SHR S <strong>%CPU</strong> %MEM TIME+ COMMAND
31111 tktdev 16 0 14.0g 33m 11m S <strong>1576.2</strong> 0.1 30:19.38 java

<strong>Cpu0 :100.0%us</strong>, 0.0%sy, 0.0%ni, <strong>0.0%id</strong>, 0.0%wa, 0.0%hi, 0.0%si, 0.0%st
<strong>Cpu1 :100.0%us</strong>, 0.0%sy, 0.0%ni, <strong>0.0%id</strong>, 0.0%wa, 0.0%hi, 0.0%si, 0.0%st
<strong>Cpu2 :100.0%us</strong>, 0.0%sy, 0.0%ni, <strong>0.0%id</strong>, 0.0%wa, 0.0%hi, 0.0%si, 0.0%st
<strong>Cpu3 :100.0%us</strong>, 0.0%sy, 0.0%ni, <strong>0.0%id</strong>, 0.0%wa, 0.0%hi, 0.0%si, 0.0%st
<strong>Cpu4 : 99.7%us</strong>, 0.3%sy, 0.0%ni, <strong>0.0%id</strong>, 0.0%wa, 0.0%hi, 0.0%si, 0.0%st
<strong>Cpu5 :100.0%us</strong>, 0.0%sy, 0.0%ni, <strong>0.0%id</strong>, 0.0%wa, 0.0%hi, 0.0%si, 0.0%st
<strong>Cpu6 : 99.7%us</strong>, 0.3%sy, 0.0%ni, <strong>0.0%id</strong>, 0.0%wa, 0.0%hi, 0.0%si, 0.0%st
<strong>Cpu7 :100.0%us</strong>, 0.0%sy, 0.0%ni, <strong>0.0%id</strong>, 0.0%wa, 0.0%hi, 0.0%si, 0.0%st
<strong>Cpu8 :100.0%us</strong>, 0.0%sy, 0.0%ni, <strong>0.0%id</strong>, 0.0%wa, 0.0%hi, 0.0%si, 0.0%st
<strong>Cpu9 :100.0%us</strong>, 0.0%sy, 0.0%ni, <strong>0.0%id</strong>, 0.0%wa, 0.0%hi, 0.0%si, 0.0%st
<strong>Cpu10 :100.0%us</strong>, 0.0%sy, 0.0%ni, <strong>0.0%id</strong>, 0.0%wa, 0.0%hi, 0.0%si, 0.0%st
<strong>Cpu11 :100.0%us</strong>, 0.0%sy, 0.0%ni, <strong>0.0%id</strong>, 0.0%wa, 0.0%hi, 0.0%si, 0.0%st
<strong>Cpu12 :100.0%us</strong>, 0.0%sy, 0.0%ni, <strong>0.0%id</strong>, 0.0%wa, 0.0%hi, 0.0%si, 0.0%st
<strong>Cpu13 :100.0%us</strong>, 0.0%sy, 0.0%ni, <strong>0.0%id</strong>, 0.0%wa, 0.0%hi, 0.0%si, 0.0%st
<strong>Cpu14 : 99.0%us</strong>, 0.3%sy, 0.0%ni, <strong>0.7%id</strong>, 0.0%wa, 0.0%hi, 0.0%si, 0.0%st
<strong>Cpu15 :100.0%us</strong>, 0.0%sy, 0.0%ni, <strong>0.0%id</strong>, 0.0%wa, 0.0%hi, 0.0%si, 0.0%st]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2138</wp:post_id>
  <wp:post_date>2016-01-23 15:13:59</wp:post_date>
  <wp:post_date_gmt>2016-01-23 14:13:59</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>understanding-unix-load-for-java-processes</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="cpu"><![CDATA[CPU]]></category>
  <category domain="post_tag" nicename="cpu-load"><![CDATA[cpu load]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <category domain="post_tag" nicename="top"><![CDATA[top]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="unix"><![CDATA[unix]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[19042660062]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Git rebase</title>
  <link>https://bmwieczorek.wordpress.com/2016/01/27/git-rebase/</link>
  <pubDate>Wed, 27 Jan 2016 13:17:57 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2160</guid>
  <description/>
  <content:encoded><![CDATA[<ol>
	<li>[online][master] clone git project repo:
<pre>git clone https://github.com/bmwieczorek/my-git-playground.git</pre>
</li>
	<li>[offline][master] create, add and commit file1:
<pre><span style="line-height:1.7;">echo "master: initial file create" &gt; file1
git add file1
git commit -m "master: file1: initial file create" file1</span></pre>
</li>
	<li>[offline][master] create my-branch:
<pre>git branch my-branch</pre>
</li>
	<li>[offline][master]: modify file1; create new file2; add and commit all:
<pre>echo "master: updated after my-branch was created: append new line" &gt;&gt; file1
echo "master: updated after my-branch was created: initial file create" &gt; file2
git add file1 file2
git commit -m "master: after my-branch was created: updated to add new line in file1, file2 initial create" file1 file2</pre>
</li>
	<li>[offline][master]: switch to my-branch:
<pre>git checkout my-branch

</pre>
NOTE: as file1 modification will be reverted, file2 will be deleted (as it happened after my-branch was created, so my-branch does not have these changes). git log will contain:
from 2): <span style="line-height:1.7;">master: file1: initial file create</span></li>
	<li>[offline][my-branch]: create file my-branch1.txt; modify to add new line in file1.txt; add and commit all:
<pre>echo "my-branch: initial file create" &gt; my-branch1.txt
echo "my-branch: modify in my-branch" &gt;&gt; file1.txt
git add file1.txt my-branch1.txt
git commit -m "my-branch: my-branch1.txt initial create and modified file1.txt to append new line" file1.txt my-branch1.txt</pre>
git log will contain:
from 6): my-branch: my-branch1.txt initial create and modified file1.txt to append new line" file1.txt my-branch1.txt
from 2): <span style="line-height:1.7;">master: file1: initial file create
</span></li>
	<li>[offline][my-branch]: rebase to master:
<pre><span style="line-height:1.7;">$ git rebase master
First, rewinding head to replay your work on top of it...
Applying: my-branch: modify file1.txt and initial create file-my-branch.txt in my-branch
Using index info to reconstruct a base tree...
M file1.txt
Falling back to patching base and 3-way merge...
Auto-merging file1.txt
CONFLICT (content): Merge conflict in file1.txt
Failed to merge in the changes.
Patch failed at 0001 my-branch: modify file1.txt and initial create file-my-branch.txt in my-branch
The copy of the patch that failed is found in:
 /cygdrive/c/dev/git/u1/master/my-git-playground/.git/rebase-apply/patch

When you have resolved this problem, run "git rebase --continue".
If you prefer to skip this patch, run "git rebase --skip" instead.
To check out the original branch and stop rebasing, run "git rebase --abort".</span></pre>
</li>
	<li><span style="line-height:1.7;"><span style="line-height:1.7;"><span style="line-height:1.7;">[offline][my-branch]: edit file1 to resolve conflict; add file1 (do not commit), and continue rebase:</span></span></span>
<pre><span style="line-height:1.7;">vim file1 ...

</span><span style="line-height:1.7;">cat file1.txt
</span><span style="line-height:1.7;">master: initial file create 
</span>master: updated after my-branch was created: append new line 
my-branch: modify in my-branch

<span style="line-height:1.7;">git add file1

</span>git rebase --continue
Applying: my-branch: my-branch: my-branch1.txt initial create and modified file1.txt to append new line</pre>
<span style="line-height:1.7;">
NOTE: file system will contain file1 (with 3 lines), fil2 and branch1.txt</span>

NOTE: git log will contain <strong>(not in chronological order, but master changes first and my-branch changes then on the top of that)</strong>:
from 8) my-branch: my-branch1.txt initial create and modified file1.txt to append new line
from 4) master: after my-branch was created: updated to add new line in file1, file2 initial create
<span style="line-height:1.7;">from 2) master: file1: initial file create</span>

<span style="line-height:1.7;">
NOTE: during rebase first my-branch changes were reverted, then master changes were applied and eventually my-branch changes were applied as the last</span></li>
</ol>
<strong>SECOND EXAMPLE</strong>
<pre><strong>1. COMMIT ON MASTER</strong>
$ git clone https://github.com/bmwieczorek/my-git-rebase2.git
Cloning into 'my-git-rebase2'...
warning: You appear to have cloned an empty repository.
Checking connectivity... done.
$ cd my-git-rebase2/
$ echo "master: init create file1" &gt; file1
$ git add file1
$ git commit -m "master: init create file1" file1
[master (root-commit) a12c8dc] master: init create file1
 1 file changed, 1 insertion(+)
 create mode 100644 file1</pre>
<pre><strong>2. CREATE BRANCH AND COMMIT ON BRANCH</strong>
$ git branch my-branch
$ git checkout my-branch
Switched to branch 'my-branch'
$ echo "my-branch: init create branch1" &gt; branch1
$ vim file1
$ cat file1
master: init create file1
my-branch: append new line
$ git add file1 branch1
$ git commit -m "my-branch: append new line to file1 and init create branch" file1 branch1
[my-branch 3f7e4db] my-branch: append new line to file1 and init create branch
 2 files changed, 2 insertions(+)
 create mode 100644 branch1
$ ls
branch1 file1</pre>
<pre><strong>3. COMMIT ON MASTER</strong>
$ git checkout master
Switched to branch 'master'
$ echo "master: init create file2" &gt; file2
$ ls
file1 file2
$ vim file1
$ cat file1
master: init create file1
master: append new line
$ git add file1 file2
$ git commit -m "master: append new line in file1 and init create file2"
[master aa27358] master: append new line in file1 and init create file2
 2 files changed, 2 insertions(+)
 create mode 100644 file2
$ git log
Date: Thu Jan 28 14:21:10 2016 +0100
 master: append new line in file1 and init create file2
Date: Thu Jan 28 14:18:42 2016 +0100
 master: init create file1
$ git checkout my-branch
Switched to branch 'my-branch'
$ git log
Date: Thu Jan 28 14:19:55 2016 +0100
 my-branch: append new line to file1 and init create branch
Date: Thu Jan 28 14:18:42 2016 +0100
 master: init create file1</pre>
<pre><strong>4. ON BRANCH: REBASE WITH MASTER</strong>
$ git rebase master
First, rewinding head to replay your work on top of it...
Applying: my-branch: append new line to file1 and init create branch
Using index info to reconstruct a base tree...
M file1
Falling back to patching base and 3-way merge...
Auto-merging file1
CONFLICT (content): Merge conflict in file1
Failed to merge in the changes.
Patch failed at 0001 my-branch: append new line to file1 and init create branch
The copy of the patch that failed is found in:
 /cygdrive/c/dev/git3/my-git-rebase2/.git/rebase-apply/patch
When you have resolved this problem, run "git rebase --continue".
If you prefer to skip this patch, run "git rebase --skip" instead.
To check out the original branch and stop rebasing, run "git rebase --abort".
$ cat file1
master: init create file1
&lt;&lt;&lt;&lt;&lt;&lt;&lt; aa273580658e4308ad01d4f72f7e3fef4b791757
master: append new line
=======
my-branch: append new line
&gt;&gt;&gt;&gt;&gt;&gt;&gt; my-branch: append new line to file1 and init create branch
$ ls
branch1 file1 file2</pre>
<pre><strong>5. RESOLVE CONFLICT ON BRANCH</strong>
$ vim file1
$ git status
rebase in progress; onto aa27358
You are currently rebasing branch 'my-branch' on 'aa27358'.
 (fix conflicts and then run "git rebase --continue")
 (use "git rebase --skip" to skip this patch)
 (use "git rebase --abort" to check out the original branch)
Changes to be committed:
 (use "git reset HEAD &lt;file&gt;..." to unstage)
 new file: branch1
Unmerged paths:
 (use "git reset HEAD &lt;file&gt;..." to unstage)
 (use "git add &lt;file&gt;..." to mark resolution)
 both modified: file1
$ git add file1
$ git status
rebase in progress; onto aa27358
You are currently rebasing branch 'my-branch' on 'aa27358'.
 (all conflicts fixed: run "git rebase --continue")
Changes to be committed:
 (use "git reset HEAD &lt;file&gt;..." to unstage)
 new file: branch1
 modified: file1
$ cat file1
master: init create file1
master: append new line
my-branch: append new line</pre>
<pre><strong>6. ON BRANCH CONRINUE REBASE</strong>
$ git rebase --continue
Applying: my-branch: append new line to file1 and init create branch</pre>
<pre><strong>7. ON BRANCH GIT LOG (not necessary chronological - rewind branch changes, apply first master changes, then reapply branch changes on top of master changes)</strong>
$ git log
Date: Thu Jan 28 14:19:55 2016 +0100
 my-branch: append new line to file1 and init create branch
Date: Thu Jan 28 14:21:10 2016 +0100
 master: append new line in file1 and init create file2
Date: Thu Jan 28 14:18:42 2016 +0100
 master: init create file1</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2160</wp:post_id>
  <wp:post_date>2016-01-27 14:17:57</wp:post_date>
  <wp:post_date_gmt>2016-01-27 13:17:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>git-rebase</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="git"><![CDATA[git]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[19176624315]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[git-2]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Git merge</title>
  <link>https://bmwieczorek.wordpress.com/2016/01/28/git-merge/</link>
  <pubDate>Thu, 28 Jan 2016 12:38:45 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2233</guid>
  <description/>
  <content:encoded><![CDATA[<pre>$ git clone https://github.com/bmwieczorek/my-git-sandbox.git
$ cd my-git-sandbox

<strong>1. COMMIT ON MASTER</strong>
$ echo "master: initial create of file1" &gt; file1
$ git add file1
$ git commit -m "master: initial create of file1" file1

<strong>2. CREATE BRANCH AND COMMIT ON BRANCH
</strong>$ git branch "my-branch"
$ git checkout my-branch
Switched to branch 'my-branch'
$ echo "my-branch: initial create of branch1" &gt; branch1
$ git add branch1
$ vim file1
$ git add file1
$ git commit -m "my-branch: append new line to file1 and initial create of file2" branch1 file1
$ ls 
branch1 file1

<strong>3. COMMIT ON MASTER
</strong>$ git checkout master
Switched to branch 'master'
$ ls
file1
$ echo "master: after my-branch commit: initial create of file2" &gt; file2
$ git add file2
$ vim file1
$ git add file1
$ cat file1 file2
master: initial create of file1
master: after my-branch commit: append new line to file1
master: after my-branch commit: initial create of file2
$ git commit -m "master: after my-branch commit: append new line to file1 and initial create of file2" file1 file2
$ git status
On branch master
$ git log
 master: after my-branch commit: append new line to file1 and initial create of file2
 master: initial create of file1
$ git checkout my-branch
Switched to branch 'my-branch'
$ git status
On branch my-branch
$ git log
 my-branch: append new line to file1 and initial create of file2
 master: initial create of file1
$ git checkout master
Switched to branch 'master'
$ ls
file1 file2

<strong>4. MERGE BRANCH CHANGES TO MASTER
</strong>$ git merge my-branch
Auto-merging file1
CONFLICT (content): Merge conflict in file1
Automatic merge failed; fix conflicts and then commit the result.
$ ls
branch1 file1 file2
$ cat file1
master: initial create of file1
&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
master: after my-branch commit: append new line to file1
=======
my-branch: append new line
&gt;&gt;&gt;&gt;&gt;&gt;&gt; my-branch
$ vim file1

<strong>5. RESOLVE CONFLICT AND COMMIT</strong>
$ git status
On branch master
Your branch is up-to-date with 'origin/master'.
You have unmerged paths.
 (fix conflicts and run "git commit")
Changes to be committed:
new file: branch1
Unmerged paths:
 (use "git add &lt;file&gt;..." to mark resolution)
both modified: file1
$ git add file1
$ git status
On branch master
Your branch is up-to-date with 'origin/master'.
All conflicts fixed but you are still merging.
 (use "git commit" to conclude merge)
Changes to be committed:
new file: branch1
 modified: file1
$ git log
 master: after my-branch commit: append new line to file1 and initial create of file2
 master: initial create of file1
$ git commit -m "master: after merge with my-branch and conflict resolution" branch1 file1
fatal: cannot do a partial commit during a merge.
$ git commit -m "master: after merge with my-branch and conflict resolution"
[master e01526d] master: after merge with my-branch and conflict resolution

<strong>6. MASTER LOG HISTORY (in chronological order)</strong>
$ git log
Merge: b255d9b 31a909e
master: after merge with my-branch and conflict resolution
Date: Thu Jan 28 12:50:33 2016 +0100
master: after my-branch commit: append new line to file1 and initial create of file2
Date: Thu Jan 28 12:44:18 2016 +0100
my-branch: append new line to file1 and initial create of file2
Date: Thu Jan 28 12:41:16 2016 +0100
master: initial create of file1

<strong>SECOND EXAMPLE (demonstrate chronological history)</strong>
$ echo "Hi: " &gt; file
$ git add file 
$ git commit -am "Hi: " 
[master (root-commit) ada0512] Hi:
 1 file changed, 1 insertion(+)
 create mode 100644 file
$ git checkout -b my-branch
Switched to a new branch 'my-branch'
$ vim file 
$ cat file 
Hi: m-b
$ git commit -am "m-b" 
[my-branch 5c3bef9] m-b
 1 file changed, 1 insertion(+), 1 deletion(-)
$ git checkout master 
Switched to branch 'master'
$ vim file 
$ git commit -am "m"
[master 9b146dc] m
 1 file changed, 1 insertion(+), 1 deletion(-)
$ git checkout my-branch 
Switched to branch 'my-branch'
$ vim file 
$ git commit -am "m-bx2"
[my-branch 1af0332] m-bx2
 1 file changed, 1 insertion(+), 1 deletion(-)
$ git checkout master
Switched to branch 'master'
$ vim file 
$ git commit -am "m2x"
[master e078728] m2x
 1 file changed, 1 insertion(+), 1 deletion(-)
$ cat file 
Hi: m2x
$ git checkout my-branch 
Switched to branch 'my-branch'
$ cat file 
Hi: m-bx2
$ git merge master
Auto-merging file
CONFLICT (content): Merge conflict in file
Automatic merge failed; fix conflicts and then commit the result.
$ cat file 
&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
Hi: m-bx2
=======
Hi: m2x
&gt;&gt;&gt;&gt;&gt;&gt;&gt; master
$ vim file 
$ git add file
$ git commit -am "merged master to my-branch"
[my-branch 521600f] merged master to my-branch
$ git log 
Merge: 1af0332 e078728
Date: Fri Jan 29 10:19:31 2016 +0100
 merged master to my-branch
Date: Fri Jan 29 10:16:26 2016 +0100
 m2x
Date: Fri Jan 29 10:15:38 2016 +0100
 m-bx2
Date: Fri Jan 29 10:15:01 2016 +0100
 m
Date: Fri Jan 29 10:14:31 2016 +0100
 m-b
Date: Fri Jan 29 10:13:42 2016 +0100
 Hi:</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2233</wp:post_id>
  <wp:post_date>2016-01-28 13:38:45</wp:post_date>
  <wp:post_date_gmt>2016-01-28 12:38:45</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>git-merge</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="git"><![CDATA[git]]></category>
  <category domain="post_tag" nicename="git-merge"><![CDATA[git merge]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[19211300454]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Git merge master vs rebase master</title>
  <link>https://bmwieczorek.wordpress.com/2016/01/28/git-merge-master-vs-rebase-master/</link>
  <pubDate>Thu, 28 Jan 2016 21:44:28 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2247</guid>
  <description/>
  <content:encoded><![CDATA[Scenario:
1. create file on master with content "Hi :"
2. create my-branch, update file to "Hi: m-b" and commit in my-branch
3. switch to master, modify file to "Hi: m: and commit in master
4. switch to my-branch, update file to "Hi m-bx2" and commit in my-branch
5. in my-branch either:
a) git rebase master
or
b) git merge master

Common scenario for steps 1-4:
<pre><strong>$ echo "Hi:" &gt; file</strong>
<strong>$ git add file </strong>
<strong>$ git commit -am "m: created file"</strong>
[master (root-commit) 6028a7a] m: created file
 1 file changed, 1 insertion(+)
 create mode 100644 file
<strong>$ git checkout -b my-branch</strong>
Switched to a new branch 'my-branch'
<strong>$ vim file </strong>
<strong>$ cat file</strong> 
Hi: m-b
<strong>$ git commit -am "m-b: added</strong> m-b"
[my-branch 25c716a] m-b: added m-b
 1 file changed, 1 insertion(+), 1 deletion(-)
<strong>$ git checkout master</strong>
Switched to branch 'master'
Your branch is based on 'origin/master', but the upstream is gone.
 (use "git branch --unset-upstream" to fixup)
<strong>$ vim file </strong>
<strong>$ cat file</strong> 
Hi: m
<strong>$ git commit -am "m: added m"</strong>
[master 7e402ee] m: added m
 1 file changed, 1 insertion(+), 1 deletion(-)
<strong>$ git checkout my-branch</strong> 
Switched to branch 'my-branch'
<strong>$ vim file</strong> 
<strong>$ git commit -am "m-b: added x2"</strong>
[my-branch 7ad292e] m-b: added x2
 1 file changed, 1 insertion(+), 1 deletion(-)

</pre>
<strong>REBASE CASE (<strong>up to as many conflict resolution needed for git merge as numer number commits in my-branch)</strong></strong>
<pre><strong>$ git rebase master</strong>
First, rewinding head to replay your work on top of it...
Applying: m-b: added m-b
Using index info to reconstruct a base tree...
M file
Falling back to patching base and 3-way merge...
Auto-merging file
CONFLICT (content): Merge conflict in file
Failed to merge in the changes.
Patch failed at 0001 m-b: added m-b
The copy of the patch that failed is found in:
 /home/bartek/git/merging-conflicts/.git/rebase-apply/patch
When you have resolved this problem, run "git rebase --continue".
If you prefer to skip this patch, run "git rebase --skip" instead.
To check out the original branch and stop rebasing, run "git rebase --abort".
<strong>$ cat file</strong> 
&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
Hi: m
=======
Hi: m-b
&gt;&gt;&gt;&gt;&gt;&gt;&gt; m-b: added m-b
<strong>$ vim file </strong>
<strong>$ cat file</strong>
Hi: m m-b
<strong>$ git add file </strong>
<strong>$ git rebase --continue</strong> 
Applying: m-b: added m-b
Applying: m-b: added x2
Using index info to reconstruct a base tree...
M file
Falling back to patching base and 3-way merge...
Auto-merging file
CONFLICT (content): Merge conflict in file
Failed to merge in the changes.
Patch failed at 0002 m-b: added x2
The copy of the patch that failed is found in:
 /home/bartek/git/merging-conflicts/.git/rebase-apply/patch
When you have resolved this problem, run "git rebase --continue".
If you prefer to skip this patch, run "git rebase --skip" instead.
To check out the original branch and stop rebasing, run "git rebase --abort".
<strong>$ cat file</strong> 
&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
Hi: m m-b 
=======
Hi: m-bx2
&gt;&gt;&gt;&gt;&gt;&gt;&gt; m-b: added x2
<strong>$ vim file </strong>
<strong>$ cat file</strong> 
Hi: m m-b2x 
<strong>$ git add file </strong>
<strong>$ git rebase --continue</strong> 
Applying: m-b: added x2</pre>
<strong>MERGE CASE</strong> <strong>(only up to one conflict resolution needed for git merge regardless of number commits in my-branch): </strong>
<pre><strong>$ git merge master</strong>
Auto-merging file
CONFLICT (content): Merge conflict in file
Automatic merge failed; fix conflicts and then commit the result.
<strong>$ cat file </strong>
&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
Hi: m-bx2
=======
Hi: m
&gt;&gt;&gt;&gt;&gt;&gt;&gt; master
<strong>$ vim file </strong>
<strong>$ cat file</strong> 
Hi: m m-bx2
<strong>$ git add file </strong>
<strong>$ git status</strong>
On branch my-branch
All conflicts fixed but you are still merging.
 (use "git commit" to conclude merge)
Changes to be committed:
 modified: file
<strong>$ git commit -m "m-b: resolved merge conflict with master changes"</strong>
[my-branch 80868a8] m-b: resolved merge conflict with master changes</pre>
<pre>
<strong>ISSUE WITH PUSHING BRANCH THAT WAS REBASED</strong> (assuming it was pulled by someone else):</pre>
<pre>bartek@hp:~/git/rebase-first-then-merge$ git checkout my-branch 
bartek@hp:~/git/rebase-first-then-merge$ git rebase master
First, rewinding head to replay your work on top of it...
Applying: my-branch: create file branch1
Applying: my-branch: appended file1
Applying: my-branch: initial create file branch2
Applying: my-branch: initial create file branch3
bartek@hp:~/git/rebase-first-then-merge$ git log
Date: Thu Jan 28 19:57:39 2016 +0100
 my-branch: initial create file branch3
Date: Thu Jan 28 19:51:16 2016 +0100
 my-branch: initial create file branch2
Date: Thu Jan 28 19:40:02 2016 +0100
 my-branch: appended file1
Date: Thu Jan 28 19:36:48 2016 +0100
 my-branch: create file branch1
Date: Thu Jan 28 19:56:56 2016 +0100
 master: initial create file4
Date: Thu Jan 28 19:52:21 2016 +0100
 master: initial create file3
...
Date: Thu Jan 28 19:35:16 2016 +0100
 master: create file1
bartek@hp:~/git/rebase-first-then-merge$ git push
Counting objects: 6, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 309 bytes | 0 bytes/s, done.
Total 3 (delta 1), reused 0 (delta 0)
To https://github.com/bmwieczorek/rebase-first-then-merge.git
 c9f7261..ab2bbfe master -&gt; master
 ! [rejected] my-branch -&gt; my-branch (non-fast-forward)
error: failed to push some refs to 'https://github.com/bmwieczorek/rebase-first-then-merge.git'
<strong>hint: Updates were rejected because the tip of your current branch is behind</strong>
<strong>hint: its remote counterpart.</strong> Integrate the remote changes (e.g.
hint: 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
bartek@hp:~/git/rebase-first-then-merge$ 

</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2247</wp:post_id>
  <wp:post_date>2016-01-28 22:44:28</wp:post_date>
  <wp:post_date_gmt>2016-01-28 21:44:28</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>git-merge-master-vs-rebase-master</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="git"><![CDATA[git]]></category>
  <category domain="post_tag" nicename="git-merge"><![CDATA[git merge]]></category>
  <category domain="post_tag" nicename="git-rebase"><![CDATA[git-rebase]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[19226729883]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>My Git workflow</title>
  <link>https://bmwieczorek.wordpress.com/2016/02/03/my-git-workflow/</link>
  <pubDate>Wed, 03 Feb 2016 15:37:16 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2273</guid>
  <description/>
  <content:encoded><![CDATA[<ol>
	<li>Create github repo</li>
	<li>Clone repo</li>
	<li>Add file.txt to master, commit and push file to origin master</li>
	<li>Create feature branch: 'my-branch'</li>
	<li>my-branch: work, commit locally</li>
	<li>Master: In the mean time someone else works/commits and pushes onto origin master</li>
	<li>On my-branch rebase with master to prepare for pull request</li>
	<li>On my-branch: fix conflict during rebase</li>
	<li>Create pull request via Github (base: master, compare: my-branch)</li>
	<li>On my-branch: rework changes, commit and push to origin my-branch so that pull request is updated automatically</li>
	<li>In the mean time someone else can checkout my-branch and pull from it</li>
	<li>Master: In the mean time someone else works/commits and pushes onto origin master so that github ask to resolve the conflict</li>
	<li>On my-branch: DO NOT REBASE WITH MASTER since someone could pull from origin my-branch and that would break the history showing the same commits twice</li>
	<li>On my-branch: do git MERGE master, commit and push to origin my-branch to update pull request</li>
	<li>github can do automatic merge from my-branch to master and close the pull request</li>
</ol>
Commands:

USER1 workspace:
<pre>git clone https://github.com/bmwieczorek/my-git.git
cd my-git
echo "master: created new file.txt" &gt; file.txt
git add file.txt
git commit -m "master: created new file.txt"
git checkout -b my-branch
git branch
echo "my-branch: appended once file.txt" &gt;&gt; file.txt
git commit -am "my-branch: appended once file.txt"
echo "my-branch: appended twice file.txt" &gt;&gt; file.txt
git commit -am "my-branch: appended twice file.txt"
git checkout master
echo "master: appended file.txt" &gt;&gt; file.txt
git commit -m "master: appended file.txt" file.txt
git push origin master

git checkout my-branch
git rebase master
cat file.txt
cat file.txt | egrep -v '&lt;&lt;&lt;|&gt;&gt;&gt;|===' &gt; file.txt # resolve conflict
cat file.txt
git add file.txt
git rebase --continue
cat file.txt
git log
git status
git push origin my-branch

# create pull request via github (base: master, bmwieczorek wants to merge 2 commits into master from my-branch)
# rework after PR

echo "my-branch: appended file.txt after PR code review " &gt;&gt; file.txt
git commit -am "my-branch: appended file.txt after PR code review"
git push origin my-branch
git checkout master
echo "master: appended 2x file.txt" &gt;&gt; file.txt
git commit -m "master: appended 2x file.txt" file.txt
git push origin master</pre>
USER2 workspace:
<pre>git clone https://github.com/bmwieczorek/my-git.git
echo "master: appended 2x file.txt" &gt;&gt; file.txt
git commit -m "master: appended 2x file.txt" file.txt
git push origin master
git checkout my-branch
git pull</pre>
USER1 workspace:

#GitHub pull request page shows conflict on master
# DO NOT (immediately) REBASE ANYMORE ON my-branch since someone could pull but we do not know it, so lets try one of two options:

A) merge master changes (that happened during review of pull request)
<pre>git checkout my-branch
git merge master
cat file.txt
cat file.txt | egrep -v '&lt;&lt;&lt;|&gt;&gt;&gt;|===' &gt; file.txt # resolve conflict
cat file.txt
git add file.txt
git commit -am "my-branch: merged changes from master that were committed during the review of pull request of my-branch work"
git push origin my-branch
git checkout master
git merge my-branch</pre>
or
B) create a branch before rebasing (as a backup if someone pulled from my-branch to allow to recover as in option A), do the rebase master on my-branch and try to push to origin my-branch:
<pre>git checkout my-branch
git checkout -b my-branch-before-rebase
git checkout my-branch
git rebase master
cat file.txt
vim file.txt
cat file.txt
git add file.txt
git rebase --continue
git push origin my-branch
git checkout master
git merge my-branch
</pre>
<strong>What will happen if someone already has pulled my-branch (asa in 11) and later we would rebase with master (as in 13) and try to push</strong>
<pre>$ git push origin my-branch
Username for 'https://github.com':
Password for 'https://bmwieczorek@github.com':
To https://github.com/bmwieczorek/my-git.git
 ! [rejected] my-branch -&gt; my-branch (non-fast-forward)
error: failed to push some refs to 'https://github.com/bmwieczorek/my-git.git'
hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. Integrate the remote changes (e.g.
hint: 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
</pre>
<strong>Then there is no other option but to follow what causes problems</strong>:
<pre>$ git pull origin my-branch
From https://github.com/bmwieczorek/my-git
 * branch my-branch -&gt; FETCH_HEAD
Auto-merging file.txt
CONFLICT (content): Merge conflict in file.txt
Automatic merge failed; fix conflicts and then commit the result.

$ cat file.txt
$ cat file.txt | egrep -v '&lt;&lt;&lt;|&gt;&gt;&gt;|===' &gt; file.txt # resolve conflict
$ git add file.txt
$ git log
<span style="line-height:1.7;">commit </span><span style="line-height:1.7;">309652ab390e39a8f6ca8a1aae9624cefb4da809 
</span>Date: Wed Feb 3 15:16:16 2016 +0100
my-branch: appended file.txt after PR code review

commit 4995ef9527e60b6672092f3bc348ff316826cbfc
Date: Wed Feb 3 14:54:45 2016 +0100
my-branch: appended twice file.txt

commit 120b76fd4370716fca19670695d9be8765f124c6
Date: Wed Feb 3 14:54:45 2016 +0100
my-branch: appended once file.txt

commit e2835035d3c09113c5d23a54b6375925f314c0ca
Date: Wed Feb 3 15:37:42 2016 +0100
master: appended 2x file.txt

commit 36612b57f46d04b1343be1f0e8e70a8236313abe
Date: Wed Feb 3 14:54:45 2016 +0100
master: appended file.txt

commit 6bc6342dfd6f14a553ff1f6950876d95feab4901
Date: Wed Feb 3 14:54:45 2016 +0100
master: created new file.txt

$ git commit -am "my-branch: rebased, push failed, pulled, resolved, push" [my-branch d9a2360] my-branch: rebased, push failed, pulled, resolved, push
$ git push origin my-branch
To https://github.com/bmwieczorek/my-git.git
 7805d9c..d9a2360 my-branch -&gt; my-branch</pre>
<strong>Notice how the history gets <span style="text-decoration:underline;"><em>messed-up with 3 additional duplicated entries</em></span>:</strong>
<pre>$ git log
commit d9a236031582cde3742f6957f70d7c287f8162b9
 Merge: 309652a 7805d9c
Date: Wed Feb 3 15:56:38 2016 +0100
my-branch: rebased, push failed, pulled, resolved, push

commit 309652ab390e39a8f6ca8a1aae9624cefb4da809
 Date: Wed Feb 3 15:16:16 2016 +0100
my-branch: appended file.txt after PR code review

commit 4995ef9527e60b6672092f3bc348ff316826cbfc
 Date: Wed Feb 3 14:54:45 2016 +0100
my-branch: appended twice file.txt

commit 120b76fd4370716fca19670695d9be8765f124c6
Date: Wed Feb 3 14:54:45 2016 +0100
my-branch: appended once file.txt

commit e2835035d3c09113c5d23a54b6375925f314c0ca
Date: Wed Feb 3 15:37:42 2016 +0100
master: appended 2x file.txt

<span style="text-decoration:underline;"><em><strong>commit 7805d9c1e0d84a4746f274bce3f869d3868a38c4</strong></em></span>
<span style="text-decoration:underline;"><em><strong> Date: Wed Feb 3 15:16:16 2016 +0100</strong></em></span>
<span style="text-decoration:underline;"><em><strong>my-branch: appended file.txt after PR code review

</strong></em></span><span style="text-decoration:underline;"><em><strong>commit a280c861a6ea6a59c07c11a99c440ec3a07f2f41</strong></em></span>
<span style="text-decoration:underline;"><em><strong> Date: Wed Feb 3 14:54:45 2016 +0100</strong></em></span>
<span style="text-decoration:underline;"><em><strong>my-branch: appended twice file.txt

</strong></em></span><span style="text-decoration:underline;"><em><strong>commit 626bd4418a3f33aa2afe7ff63665938c836a65d5</strong></em></span>
<span style="text-decoration:underline;"><em><strong>Date: Wed Feb 3 14:54:45 2016 +0100</strong></em></span>
<span style="text-decoration:underline;"><em><strong>my-branch: appended once file.txt

</strong></em></span>commit 36612b57f46d04b1343be1f0e8e70a8236313abe
Date: Wed Feb 3 14:54:45 2016 +0100
master: appended file.txt

commit 6bc6342dfd6f14a553ff1f6950876d95feab4901
Date: Wed Feb 3 14:54:45 2016 +0100
master: created new file.txt</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2273</wp:post_id>
  <wp:post_date>2016-02-03 16:37:16</wp:post_date>
  <wp:post_date_gmt>2016-02-03 15:37:16</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>my-git-workflow</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="git"><![CDATA[git]]></category>
  <category domain="post_tag" nicename="git-merge"><![CDATA[git merge]]></category>
  <category domain="post_tag" nicename="git-pull-request"><![CDATA[git pull request]]></category>
  <category domain="post_tag" nicename="git-workflow"><![CDATA[git workflow]]></category>
  <category domain="post_tag" nicename="git-rebase"><![CDATA[git-rebase]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[19425958941]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Git pull with rebase</title>
  <link>https://bmwieczorek.wordpress.com/2016/02/06/git-pull-with-rebase/</link>
  <pubDate>Sat, 06 Feb 2016 13:40:47 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2331</guid>
  <description/>
  <content:encoded><![CDATA[U1:
<pre>git clone https://github.com/bmwieczorek/my-git.git
cd my-git
echo "U1: created new file.txt" &gt; file.txt
git add file.txt
git commit -m "U1: created new file.txt"
git push origin master</pre>
<pre>echo "U1: appended once file.txt" &gt;&gt; file.txt
git commit -am "U1: appended once file.txt"
git log
 commit e4c4df7201eea9b4deeff7451c2090d956640907
 Date: Sat Feb 6 14:21:05 2016 +0100
  U1: appended once file.txt
 commit 50ab9d12ec08854737a8d66c67647acc4af7e7b1
 Date: Sat Feb 6 14:21:02 2016 +0100
  U1: created new file.txt</pre>
U2
git clone https://github.com/bmwieczorek/my-git.git
cd my-git
echo "U2: appended once file.txt" &gt;&gt; file.txt
git commit -am "U2: appended once file.txt"
git push origin master
git log
commit d7c88b0c87aa9f0993924a5fd0ded8f52f2fe844
Date: Sat Feb 6 14:21:59 2016 +0100
U2: appended once file.txt
commit 50ab9d12ec08854737a8d66c67647acc4af7e7b1
Date: Sat Feb 6 14:21:02 2016 +0100
U1: created new file.txt

U1
git pull --rebase
...
First, rewinding head to replay your work on top of it...
Applying: U1: appended once file.txt
Using index info to reconstruct a base tree...
M file.txt
Falling back to patching base and 3-way merge...
Auto-merging file.txt
CONFLICT (content): Merge conflict in file.txt
error: Failed to merge in the changes.
Patch failed at 0001 U1: appended once file.txt
The copy of the patch that failed is found in: .git/rebase-apply/patch
When you have resolved this problem, run "git rebase --continue".
If you prefer to skip this patch, run "git rebase --skip" instead.
To check out the original branch and stop rebasing, run "git rebase --abort".

git status
rebase in progress; onto d7c88b0
You are currently rebasing branch 'master' on 'd7c88b0'.
(fix conflicts and then run "git rebase --continue")
(use "git rebase --skip" to skip this patch)
(use "git rebase --abort" to check out the original branch)
Unmerged paths:
(use "git reset HEAD &lt;file&gt;..." to unstage)
(use "git add &lt;file&gt;..." to mark resolution)
both modified: file.txt
no changes added to commit (use "git add" and/or "git commit -a")

git log
commit d7c88b0c87aa9f0993924a5fd0ded8f52f2fe844
Date: Sat Feb 6 14:21:59 2016 +0100
U2: appended once file.txt
commit 50ab9d12ec08854737a8d66c67647acc4af7e7b1
Date: Sat Feb 6 14:21:02 2016 +0100
U1: created new file.txt

cat file.txt
U1: created new file.txt
&lt;&lt;&lt;&lt;&lt;&lt;&lt; d7c88b0c87aa9f0993924a5fd0ded8f52f2fe844
U2: appended once file.txt
=======
U1: appended once file.txt
&gt;&gt;&gt;&gt;&gt;&gt;&gt; U1: appended once file.txt

cat file.txt | egrep -v '&lt;&lt;&lt;|&gt;&gt;&gt;|===' &gt; file.txt # resolve conflict
cat file.txt
U1: created new file.txt
U2: appended once file.txt
U1: appended once file.txt

git add file.txt

git rebase --continue
Applying: U1: appended once file.txt

git log
commit 36876c0914fc56eeb86aeb5fb274f02323099b32
Date: Sat Feb 6 14:21:05 2016 +0100
U1: appended once file.txt
commit d7c88b0c87aa9f0993924a5fd0ded8f52f2fe844
Date: Sat Feb 6 14:21:59 2016 +0100
U2: appended once file.txt

commit 50ab9d12ec08854737a8d66c67647acc4af7e7b1
Date: Sat Feb 6 14:21:02 2016 +0100
U1: created new file.txt

git status
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
(use "git push" to publish your local commits)
nothing to commit, working directory clean

git push origin master

git log
commit 36876c0914fc56eeb86aeb5fb274f02323099b32
Date: Sat Feb 6 14:21:05 2016 +0100
U1: appended once file.txt
commit d7c88b0c87aa9f0993924a5fd0ded8f52f2fe844
Date: Sat Feb 6 14:21:59 2016 +0100
U2: appended once file.txt
commit 50ab9d12ec08854737a8d66c67647acc4af7e7b1
Date: Sat Feb 6 14:21:02 2016 +0100
U1: created new file.txt]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2331</wp:post_id>
  <wp:post_date>2016-02-06 14:40:47</wp:post_date>
  <wp:post_date_gmt>2016-02-06 13:40:47</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>git-pull-with-rebase</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="git"><![CDATA[git]]></category>
  <category domain="post_tag" nicename="git-rebase"><![CDATA[git-rebase]]></category>
  <category domain="category" nicename="github"><![CDATA[github]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[19529269901]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Git working directory/stage area/committed</title>
  <link>https://bmwieczorek.wordpress.com/2016/02/10/git-working-directorystage-areacommitted/</link>
  <pubDate>Wed, 10 Feb 2016 18:17:04 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2353</guid>
  <description/>
  <content:encoded><![CDATA[<pre><strong>echo "committed" &gt; file.txt</strong>
git status
On branch master
Initial commit
Untracked files:
 (use "git add &lt;file&gt;..." to include in what will be committed)
 file.txt
nothing added to commit but untracked files present (use "git add" to track)
<strong>git add file.txt</strong>
git status
On branch master
Initial commit
Changes to be committed:
 (use "git rm --cached &lt;file&gt;..." to unstage)
 new file: file.txt
<strong>git commit -m "committed" file.txt</strong>
[master (root-commit) 5e9cc5f] committed
 1 file changed, 1 insertion(+)
 create mode 100644 file.txt
git status
On branch master
Your branch is based on 'origin/master', but the upstream is gone.
 (use "git branch --unset-upstream" to fixup)
nothing to commit, working directory clean

<strong>echo "staged" &gt;&gt; file.txt</strong>
git status
On branch master
Your branch is based on 'origin/master', but the upstream is gone.
 (use "git branch --unset-upstream" to fixup)
Changes not staged for commit:
 (use "git add &lt;file&gt;..." to update what will be committed)
 (use "git checkout -- &lt;file&gt;..." to discard changes in working directory)
 modified: file.txt
no changes added to commit (use "git add" and/or "git commit -a")
<strong>git add file.txt</strong>
git status
On branch master
Your branch is based on 'origin/master', but the upstream is gone.
 (use "git branch --unset-upstream" to fixup)
Changes to be committed:
 (use "git reset HEAD &lt;file&gt;..." to unstage)
 modified: file.txt

<strong>echo "working directory" &gt;&gt; file.txt</strong>
git status
On branch master
Your branch is based on 'origin/master', but the upstream is gone.
 (use "git branch --unset-upstream" to fixup)
Changes to be committed:
 (use "git reset HEAD &lt;file&gt;..." to unstage)
 modified: file.txt
Changes not staged for commit:
 (use "git add &lt;file&gt;..." to update what will be committed)
 (use "git checkout -- &lt;file&gt;..." to discard changes in working directory)
 modified: file.txt

<strong>git diff file.txt # working dir vs index</strong>
diff --git a/file.txt b/file.txt
index 54bef0c..d237daf 100644
--- a/file.txt
+++ b/file.txt
@@ -1,2 +1,3 @@
 committed
 staged
+working directory

<strong>git diff --cached file.txt # index vs most recent commit</strong>
diff --git a/file.txt b/file.txt
index d0fe822..54bef0c 100644
--- a/file.txt
+++ b/file.txt
@@ -1 +1,2 @@
 committed
+staged

<strong>git diff HEAD file.txt # working dir vs most recent commit</strong>
diff --git a/file.txt b/file.txt
index d0fe822..d237daf 100644
--- a/file.txt
+++ b/file.txt
@@ -1 +1,3 @@
 committed
+staged
+working directory


<img class="alignnone size-full wp-image-2363" src="https://bmwieczorek.files.wordpress.com/2016/02/tortoise-git-diff.png" alt="tortoise-git-diff" width="749" height="262" />


<img class="alignnone size-full wp-image-2365" src="https://bmwieczorek.files.wordpress.com/2016/02/intellij-git-diff.png" alt="intellij-git-diff" width="698" height="152" />

Let's check if there were any remote changes to origin/master

<strong>git fetch origin master</strong>
From https://github.com/bmwieczorek/my-git2
 * branch master -&gt; FETCH_HEAD
<strong>git diff FETCH_HEAD file.txt # working dir vs FETCHED HEAD from origin master</strong>
diff --git a/file.txt b/file.txt
index d0fe822..d237daf 100644
--- a/file.txt
+++ b/file.txt
@@ -1 +1,3 @@
 committed
+staged
+working directory

As there were not changes then diff FETCH_HEAD, diff HEAD, diff master, diff origin/master show the same result.

<strong>NOW ANOTHER USER PUSHES A CHANGE </strong><span style="text-decoration:underline;">5e9cc5f..c82cd74</span><strong> (append '</strong>line added by another user'<strong>) TO REMOTE/ORIGIN/MASTER</strong> and in order to see that change we need to fetch it:

<strong>git fetch origin master</strong>
remote: Counting objects: 3, done.
remote: Total 3 (delta 0), reused 3 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), done.
From https://github.com/bmwieczorek/my-git2
 * branch master -&gt; FETCH_HEAD
 <span style="text-decoration:underline;">5e9cc5f..c82cd74</span> master -&gt; origin/master

<strong>git diff FETCH_HEAD file.txt # working dir vs latest fetched from remote repo; the same result would give here 'git diff origin/master'</strong>
diff --git a/file.txt b/file.txt
index 45822f2..d237daf 100644
--- a/file.txt
+++ b/file.txt
@@ -1,3 +1,3 @@
 committed
-line added by another user
-
+staged
+working directory

<strong>git diff master file.txt # working dir vs local master (fetch does not merge with remote master changes); the same result would be for 'git diff HEAD' </strong>
diff --git a/file.txt b/file.txt
index d0fe822..d237daf 100644
--- a/file.txt
+++ b/file.txt
@@ -1 +1,3 @@
 committed
+staged
+working directory

</pre>
<strong>REVERTING / DISCARDING CHANGES:</strong>

<strong>1. Permanently override working directory with these files that were added to index with their index version. If a file is only in working directory and it was not added to the index then it will not be deleted from working directory. If a file was recently deleted from working directory but was previously added to the index then it will be restored in working directory with its index version.</strong>
<pre>BEFORE:
<strong>cat file.txt</strong>
committed
staged
working directory
<strong>git diff file.txt</strong>
diff --git a/file.txt b/file.txt
index 54bef0c..d237daf 100644
--- a/file.txt
+++ b/file.txt
@@ -1,2 +1,3 @@
 committed
 staged
+working directory

<strong>git checkout file.txt

</strong>AFTER:
<strong>cat file.txt</strong>
committed
staged
<strong>git diff file.txt</strong>
&lt;empty&gt;

</pre>
<strong>2.</strong> <strong>Revert ONLY index modifications (working dir changes stays) with HISTORY (committed) version:</strong>
<pre>BEFORE:
<strong>cat file.txt
</strong>committed
staged
working directory
<strong>git diff file.txt
</strong>diff --git a/file.txt b/file.txt
index 54bef0c..d237daf 100644
--- a/file.txt
+++ b/file.txt
@@ -1,2 +1,3 @@
 committed
 staged
+working directory<strong>
git diff --cached file.txt</strong>
diff --git a/file.txt b/file.txt
index d0fe822..54bef0c 100644
--- a/file.txt
+++ b/file.txt
@@ -1 +1,2 @@
 committed
+staged
<strong>
git reset file.txt</strong>
Unstaged changes after reset:
M file.txt

AFTER:
<strong>cat file.txt</strong>
committed
staged
working directory
<strong>git diff file.txt</strong>
diff --git a/file.txt b/file.txt
index d0fe822..d237daf 100644
--- a/file.txt
+++ b/file.txt
@@ -1 +1,3 @@
 committed
+staged
+working directory
<strong>git diff --cached file.txt</strong>
&lt;empty&gt;

</pre>
<strong>3. Revert working directory and index and override it with committed version (do not affect working directory file that was not added to index nor committed; delete file that was only added to the index but not committed)</strong>
<pre><strong>git reset --hard</strong>
HEAD is now at 5e9cc5f committed
<strong>cat file.txt</strong>
committed
<strong>git diff file.txt</strong>
<strong>git diff --cached file.txt</strong>
<strong>git diff HEAD file.txt</strong>
<strong>git diff FETCH_HEAD file.txt</strong>
diff --git a/file.txt b/file.txt
index 45822f2..d0fe822 100644
--- a/file.txt
+++ b/file.txt
@@ -1,3 +1 @@
 committed
-line added by another user
-</pre>
NOTE: use the following command:
<pre>cat git.txt | egrep '^echo|^git'</pre>
to reply my commands, result:
<pre>echo "committed" &gt; file.txt
git status
git add file.txt
git status
git commit -m "committed" file.txt
git status
echo "staged" &gt;&gt; file.txt
git status
git add file.txt
git status
echo "working directory" &gt;&gt; file.txt
git status
git diff file.txt # working dir vs index
git diff --cached file.txt # index vs most recent commit
git diff HEAD file.txt # working dir vs most recent commit</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2353</wp:post_id>
  <wp:post_date>2016-02-10 19:17:04</wp:post_date>
  <wp:post_date_gmt>2016-02-10 18:17:04</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>git-working-directorystage-areacommitted</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="git"><![CDATA[git]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[19671653700]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Git stash</title>
  <link>https://bmwieczorek.wordpress.com/2016/02/12/git-stash/</link>
  <pubDate>Fri, 12 Feb 2016 21:37:11 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2384</guid>
  <description/>
  <content:encoded><![CDATA[<pre>echo "1st" &gt;&gt; pushed.txt
git add pushed.txt
git commit -m "1x: pushed.txt" pushed.txt
git push origin master
echo "2nd" &gt;&gt; pushed.txt
git add pushed.txt
git commit -m "2nd: pushed.txt" pushed.txt
echo "3rd" &gt;&gt; pushed.txt
git add pushed.txt
echo "4th" &gt;&gt; pushed.txt

echo "1st" &gt;&gt; committed.txt
git add committed.txt
git commit -m "1x: committed.txt" committed.txt
echo "2nd" &gt;&gt; committed.txt
git add committed.txt
echo "3rd" &gt;&gt; committed.txt

echo "1st" &gt;&gt; staged.txt
git add staged.txt
echo "2nd" &gt;&gt; staged.txt

echo "1st" &gt;&gt; working-directory.txt</pre>
Result:
<pre><strong>$ cat pushed.txt</strong>
1st
2nd
3rd
4th
<strong>$ cat committed.txt</strong>
1st
2nd
3rd
<strong>$ cat staged.txt</strong>
1st
2nd
<strong>$ cat working-directory.txt</strong>
1st
<strong>$ git status</strong>
On branch master
Your branch is ahead of 'origin/master' by 2 commits.
 (use "git push" to publish your local commits)
Changes to be committed:
 (use "git reset HEAD &lt;file&gt;..." to unstage)
modified: committed.txt
 modified: pushed.txt
 new file: staged.txt
Changes not staged for commit:
 (use "git add &lt;file&gt;..." to update what will be committed)
 (use "git checkout -- &lt;file&gt;..." to discard changes in working directory)
modified: committed.txt
 modified: pushed.txt
 modified: staged.txt
Untracked files:
 (use "git add &lt;file&gt;..." to include in what will be committed)
working-directory.txt
<strong>$ git diff</strong>
diff --git a/committed.txt b/committed.txt
index c8cac97..87cfd71 100644
--- a/committed.txt
+++ b/committed.txt
@@ -1,2 +1,3 @@
 1st
 2nd
+3rd
diff --git a/pushed.txt b/pushed.txt
index 87cfd71..4d5110c 100644
--- a/pushed.txt
+++ b/pushed.txt
@@ -1,3 +1,4 @@
 1st
 2nd
 3rd
+4th
diff --git a/staged.txt b/staged.txt
index 2a5d015..c8cac97 100644
--- a/staged.txt
+++ b/staged.txt
@@ -1 +1,2 @@
 1st
+2nd
<strong>$ git diff --cached</strong>
diff --git a/committed.txt b/committed.txt
index 2a5d015..c8cac97 100644
--- a/committed.txt
+++ b/committed.txt
@@ -1 +1,2 @@
 1st
+2nd
diff --git a/pushed.txt b/pushed.txt
index c8cac97..87cfd71 100644
--- a/pushed.txt
+++ b/pushed.txt
@@ -1,2 +1,3 @@
 1st
 2nd
+3rd
diff --git a/staged.txt b/staged.txt
new file mode 100644
index 0000000..2a5d015
--- /dev/null
+++ b/staged.txt
@@ -0,0 +1 @@
+1st
<strong>$ git diff HEAD</strong>
diff --git a/committed.txt b/committed.txt
index 2a5d015..87cfd71 100644
--- a/committed.txt
+++ b/committed.txt
@@ -1 +1,3 @@
 1st
+2nd
+3rd
diff --git a/pushed.txt b/pushed.txt
index c8cac97..4d5110c 100644
--- a/pushed.txt
+++ b/pushed.txt
@@ -1,2 +1,4 @@
 1st
 2nd
+3rd
+4th
diff --git a/staged.txt b/staged.txt
new file mode 100644
index 0000000..c8cac97
--- /dev/null
+++ b/staged.txt
@@ -0,0 +1,2 @@
+1st
+2nd
<strong>$ git diff working-directory.txt</strong>
<strong>$ git diff --cached working-directory.txt</strong>
<strong>$ git diff HEAD working-directory.txt</strong></pre>
<pre><strong>$ git stash # (non-indexed working-directory.txt file is not affected; the stage.txt file that was not committed but only added to index will be moved to stash so you cannot see it; indexed and committed oushed.txt and committed.txt files will be overridden to their commit version)</strong>
Saved working directory and index state WIP on master: 70a5d6f 1x: committed.txt
HEAD is now at 70a5d6f 1x: committed.txt
<strong>$ ls
</strong>committed.txt pushed.txt working-directory.txt
<strong>$ cat pushed.txt</strong>
1st
2nd
<strong>$ cat committed.txt</strong>
1st
<strong>$ cat working-directory.txt</strong>
1st
<strong>$ git diff</strong>
<strong>$ git diff --cached</strong>
<strong>$ git diff HEAD</strong></pre>
<pre><strong>$ git stash list
</strong>stash@{0}: WIP on master: 70a5d6f 1x: committed.txt<strong>
$ git stash show
</strong> committed.txt | 2 ++
 pushed.txt | 2 ++
 staged.txt | 2 ++
 3 files changed, 6 insertions(+)<strong>
$ git stash apply
</strong>On branch master
Your branch is ahead of 'origin/master' by 2 commits.
 (use "git push" to publish your local commits)
Changes to be committed:
 (use "git reset HEAD &lt;file&gt;..." to unstage)
 new file: staged.txt
Changes not staged for commit:
 (use "git add &lt;file&gt;..." to update what will be committed)
 (use "git checkout -- &lt;file&gt;..." to discard changes in working directory)
 modified: committed.txt
 modified: pushed.txt
Untracked files:
 (use "git add &lt;file&gt;..." to include in what will be committed)
 working-directory.txt
<strong>
</strong></pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2384</wp:post_id>
  <wp:post_date>2016-02-12 22:37:11</wp:post_date>
  <wp:post_date_gmt>2016-02-12 21:37:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>git-stash</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="git"><![CDATA[git]]></category>
  <category domain="post_tag" nicename="git-stash"><![CDATA[git stash]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[19745687690]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[git-stas]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Git checkout vs reset vs reset --hard</title>
  <link>https://bmwieczorek.wordpress.com/2016/02/13/git-checkout-vs-reset-vs-reset-hard/</link>
  <pubDate>Sat, 13 Feb 2016 22:04:07 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2420</guid>
  <description/>
  <content:encoded><![CDATA[<pre>0. Initial status for all 3 cases below:</pre>
<pre>$ git status
On branch master
Your branch is ahead of 'origin/master' by 2 commits.
 (use "git push" to publish your local commits)
Changes to be committed:
 (use "git reset HEAD &lt;file&gt;..." to unstage)
 modified: committed.txt
 modified: pushed.txt
 new file: staged.txt
Changes not staged for commit:
 (use "git add &lt;file&gt;..." to update what will be committed)
 (use "git checkout -- &lt;file&gt;..." to discard changes in working directory)
 modified: committed.txt
 modified: pushed.txt
 modified: staged.txt
Untracked files:
 (use "git add &lt;file&gt;..." to include in what will be committed)
 working-directory.txt
$ ls
committed.txt pushed.txt staged.txt working-directory.txt
$ cat committed.txt
1st
2nd
3rd
$ cat pushed.txt
1st
2nd
3rd
4th
$ cat staged.txt
1st
2nd
$ cat working-directory.txt
1st
$ git diff
diff --git a/committed.txt b/committed.txt
index c8cac97..87cfd71 100644
--- a/committed.txt
+++ b/committed.txt
@@ -1,2 +1,3 @@
 1st
 2nd
+3rd
diff --git a/pushed.txt b/pushed.txt
index 87cfd71..4d5110c 100644
--- a/pushed.txt
+++ b/pushed.txt
@@ -1,3 +1,4 @@
 1st
 2nd
 3rd
+4th
diff --git a/staged.txt b/staged.txt
index 2a5d015..c8cac97 100644
--- a/staged.txt
+++ b/staged.txt
@@ -1 +1,2 @@
 1st
+2nd
$ git diff working-directory.txt
$ git diff --cached
diff --git a/committed.txt b/committed.txt
index 2a5d015..c8cac97 100644
--- a/committed.txt
+++ b/committed.txt
@@ -1 +1,2 @@
 1st
+2nd
diff --git a/pushed.txt b/pushed.txt
index c8cac97..87cfd71 100644
--- a/pushed.txt
+++ b/pushed.txt
@@ -1,2 +1,3 @@
 1st
 2nd
+3rd
diff --git a/staged.txt b/staged.txt
new file mode 100644
index 0000000..2a5d015
--- /dev/null
+++ b/staged.txt
@@ -0,0 +1 @@
+1st
$ git diff --cached working-directory.txt
$ git diff HEAD
diff --git a/committed.txt b/committed.txt
index 2a5d015..87cfd71 100644
--- a/committed.txt
+++ b/committed.txt
@@ -1 +1,3 @@
 1st
+2nd
+3rd
diff --git a/pushed.txt b/pushed.txt
index c8cac97..4d5110c 100644
--- a/pushed.txt
+++ b/pushed.txt
@@ -1,2 +1,4 @@
 1st
 2nd
+3rd
+4th
diff --git a/staged.txt b/staged.txt
new file mode 100644
index 0000000..c8cac97
--- /dev/null
+++ b/staged.txt
@@ -0,0 +1,2 @@
+1st
+2nd
$ git diff HEAD working-directory.txt
$ git diff
HEAD master origin/master
$ git diff origin/master
diff --git a/committed.txt b/committed.txt
new file mode 100644
index 0000000..87cfd71
--- /dev/null
+++ b/committed.txt
@@ -0,0 +1,3 @@
+1st
+2nd
+3rd
diff --git a/pushed.txt b/pushed.txt
index 2a5d015..4d5110c 100644
--- a/pushed.txt
+++ b/pushed.txt
@@ -1 +1,4 @@
 1st
+2nd
+3rd
+4th
diff --git a/staged.txt b/staged.txt
new file mode 100644
index 0000000..c8cac97
--- /dev/null
+++ b/staged.txt
@@ -0,0 +1,2 @@
+1st
+2nd</pre>
<pre>
<strong>1. Restore working files from index (revert working directory changes excluding non-tracked files):</strong>
$ git checkout .
$ git status
On branch master
Your branch is ahead of 'origin/master' by 2 commits.
 (use "git push" to publish your local commits)
Changes to be committed:
 (use "git reset HEAD &lt;file&gt;..." to unstage)
 modified: committed.txt
 modified: pushed.txt
 new file: staged.txt
Untracked files:
 (use "git add &lt;file&gt;..." to include in what will be committed)
 working-directory.txt
$ cat pushed.txt
1st
2nd
3rd
$ cat committed.txt
1st
2nd
$ cat staged.txt
1st
$ cat working-directory.txt
1st
$ git diff
$ git diff --cached
diff --git a/committed.txt b/committed.txt
index 2a5d015..c8cac97 100644
--- a/committed.txt
+++ b/committed.txt
@@ -1 +1,2 @@
 1st
+2nd
diff --git a/pushed.txt b/pushed.txt
index c8cac97..87cfd71 100644
--- a/pushed.txt
+++ b/pushed.txt
@@ -1,2 +1,3 @@
 1st
 2nd
+3rd
diff --git a/staged.txt b/staged.txt
new file mode 100644
index 0000000..2a5d015
--- /dev/null
+++ b/staged.txt
@@ -0,0 +1 @@
+1st
$ git diff HEAD
diff --git a/committed.txt b/committed.txt
index 2a5d015..c8cac97 100644
--- a/committed.txt
+++ b/committed.txt
@@ -1 +1,2 @@
 1st
+2nd
diff --git a/pushed.txt b/pushed.txt
index c8cac97..87cfd71 100644
--- a/pushed.txt
+++ b/pushed.txt
@@ -1,2 +1,3 @@
 1st
 2nd
+3rd
diff --git a/staged.txt b/staged.txt
new file mode 100644
index 0000000..2a5d015
--- /dev/null
+++ b/staged.txt
@@ -0,0 +1 @@
+1st
$ git diff HEAD working-directory.txt</pre>
<pre>
<strong>2. Reset index with current HEAD (committed state), opposite to git add. Does not affect any working directory files</strong>
$ git reset HEAD .
Unstaged changes after reset:
M committed.txt
M pushed.txt
$ ls
committed.txt pushed.txt staged.txt working-directory.txt
$ cat pushed.txt
1st
2nd
3rd
4th
$ git status
On branch master
Your branch is ahead of 'origin/master' by 2 commits.
 (use "git push" to publish your local commits)
Changes not staged for commit:
 (use "git add &lt;file&gt;..." to update what will be committed)
 (use "git checkout -- &lt;file&gt;..." to discard changes in working directory)
 modified: committed.txt
 modified: pushed.txt
Untracked files:
 (use "git add &lt;file&gt;..." to include in what will be committed)
 staged.txt
 working-directory.txt
no changes added to commit (use "git add" and/or "git commit -a")
$ cat committed.txt
1st
2nd
3rd
$ cat pushed.txt
1st
2nd
3rd
4th
$ cat staged.txt
1st
2nd
$ cat working-directory.txt
1st
$ git diff
diff --git a/committed.txt b/committed.txt
index 2a5d015..87cfd71 100644
--- a/committed.txt
+++ b/committed.txt
@@ -1 +1,3 @@
 1st
+2nd
+3rd
diff --git a/pushed.txt b/pushed.txt
index c8cac97..4d5110c 100644
--- a/pushed.txt
+++ b/pushed.txt
@@ -1,2 +1,4 @@
 1st
 2nd
+3rd
+4th
$ git diff --cached
$ git diff HEAD
diff --git a/committed.txt b/committed.txt
index 2a5d015..87cfd71 100644
--- a/committed.txt
+++ b/committed.txt
@@ -1 +1,3 @@
 1st
+2nd
+3rd
diff --git a/pushed.txt b/pushed.txt
index c8cac97..4d5110c 100644
--- a/pushed.txt
+++ b/pushed.txt
@@ -1,2 +1,4 @@
 1st
 2nd
+3rd
+4th</pre>
<pre>
<strong>3. Reset working directory and index with HEAD version (non tracked files are not affected; but if a file was added to index but not committed, then it will be deleted from index and from working directory)</strong>
$ git reset --hard
HEAD is now at 70a5d6f 1x: committed.txt
$ git status
On branch master
Your branch is ahead of 'origin/master' by 2 commits.
 (use "git push" to publish your local commits)
Untracked files:
 (use "git add &lt;file&gt;..." to include in what will be committed)
 working-directory.txt
nothing added to commit but untracked files present (use "git add" to track)
$ ls
committed.txt pushed.txt working-directory.txt
$ cat pushed.txt
1st
2nd
$ cat committed.txt
1st
$ cat working-directory.txt
1st
$ git diff
$ git diff --cached
$ git diff HEAD
$ git diff origin/master
diff --git a/committed.txt b/committed.txt
new file mode 100644
index 0000000..2a5d015
--- /dev/null
+++ b/committed.txt
@@ -0,0 +1 @@
+1st
diff --git a/pushed.txt b/pushed.txt
index 2a5d015..c8cac97 100644
--- a/pushed.txt
+++ b/pushed.txt
@@ -1 +1,2 @@
 1st
+2nd</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2420</wp:post_id>
  <wp:post_date>2016-02-13 23:04:07</wp:post_date>
  <wp:post_date_gmt>2016-02-13 22:04:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>git-checkout-vs-reset-vs-reset-hard</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="git"><![CDATA[git]]></category>
  <category domain="post_tag" nicename="git-checkout"><![CDATA[git checkout]]></category>
  <category domain="post_tag" nicename="git-reset"><![CDATA[git reset]]></category>
  <category domain="post_tag" nicename="git-reset-hard"><![CDATA[git reset --hard]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[19775957579]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>git pull merge vs rebase</title>
  <link>https://bmwieczorek.wordpress.com/2016/02/14/git-pull-merge-vs-rebase/</link>
  <pubDate>Sun, 14 Feb 2016 16:04:52 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2428</guid>
  <description/>
  <content:encoded><![CDATA[<pre>Note: extract commands by calling:
"| grep '$ ' | sed 's/\$\ //'"</pre>
<pre><strong>0. Initial status for all 2 cases below:</strong></pre>
<pre>$ mkdir git-pull-merge-vs-rebase
$ cd git-pull-merge-vs-rebase
$ mkdir u1
$ cd u1
$ git clone https://github.com/bmwieczorek/git-pull-merge-vs-rebase.git
Cloning into 'git-pull-merge-vs-rebase'...
warning: You appear to have cloned an empty repository.
Checking connectivity... done.
$ cd git-pull-merge-vs-rebase
$ echo "u1: initial create of file.txt" &gt;&gt; file.txt
$ git add file.txt
<strong>$ git commit -m "u1: created file.txt" file.txt</strong>
[master (root-commit) 54a0645] u1: created file.txt
 1 file changed, 1 insertion(+)
 create mode 100644 file.txt
<strong>$ git push origin master</strong>
Password for 'https://bmwieczorek@github.com':
Counting objects: 3, done.
Writing objects: 100% (3/3), 255 bytes | 0 bytes/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://bmwieczorek@github.com/bmwieczorek/git-pull-merge-vs-rebase.git
 * [new branch] master -&gt; master
$ echo "u1: append 1x file.txt" &gt;&gt; file.txt
$ git add file.txt
<strong>$ git commit -m "u1: append 1x file.txt"</strong>
[master 1d74c81] u1: append 1x file.txt
 1 file changed, 1 insertion(+)
$ # do not push yet

$ cd ../..
$ mkdir u2
$ cd u2
$ git clone https://github.com/bmwieczorek/git-pull-merge-vs-rebase.git
Cloning into 'git-pull-merge-vs-rebase'...
remote: Counting objects: 3, done.
remote: Total 3 (delta 0), reused 3 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), done.
Checking connectivity... done.
$ cd git-pull-merge-vs-rebase
$ echo "u2: append 1x" &gt;&gt; file.txt
$ git add file.txt
<strong>$ git commit -m "u2: append 1x file.txt" file.txt</strong>
[master 5b0b88a] u2: append 1x file.txt
 1 file changed, 1 insertion(+)
<strong>$ git push origin master</strong>
Counting objects: 3, done.
Writing objects: 100% (3/3), 304 bytes | 0 bytes/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://bmwieczorek@github.com/bmwieczorek/git-pull-merge-vs-rebase.git
 54a0645..5b0b88a master -&gt; master


$ cd ../../u1/git-pull-merge-vs-rebase
$ echo "u1: append 2x file.txt" &gt;&gt; file.txt
$ git add file.txt
<strong>$ git commit -m "u1: append 2x file.txt"</strong>
[master 9b4e921] u1: append 2x file.txt
 1 file changed, 1 insertion(+)
<strong>$ git push origin master</strong>
To https://bmwieczorek@github.com/bmwieczorek/git-pull-merge-vs-rebase.git
 ! [<strong>rejected</strong>] master -&gt; master (fetch first)
error: failed to push some refs to 'https://bmwieczorek@github.com/bmwieczorek/git-pull-merge-vs-rebase.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to <strong>first integrate the remote changes</strong>
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
<strong>$ git log --graph --pretty=oneline --abbrev-commit --decorate --all</strong>
f4696de (HEAD -&gt; master) u1: append 2x file.txt
281bc65 u1: append 1x file.txt
8665249 (origin/master) u1: created file.txt</pre>
<pre><strong>1. git pull (fetch + merge)</strong></pre>
<pre><strong>$ git pull
</strong>remote: Counting objects: 3, done.
remote: Total 3 (delta 0), reused 3 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), done.
From https://github.com/bmwieczorek/git-pull-merge-vs-rebase
 54a0645..5b0b88a master -&gt; origin/master
Auto-merging file.txt
<strong>CONFLICT (content): Merge conflict in file.txt</strong>
Automatic merge failed; fix conflicts and then commit the result.

$ cat file.txt
u1: initial create of file.txt
&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
u1: append 1x file.txt
u1: append 2x file.txt
=======
u2: append 1x
&gt;&gt;&gt;&gt;&gt;&gt;&gt; 5b0b88a264a20a81bb26a38ea63f03f8c35b8218

$ git log --graph --pretty=oneline --all --abbrev-commit --decorate
* 9b4e921 (HEAD -&gt; master) u1: append 2x file.txt
* 1d74c81 u1: append 1x file.txt
| * 5b0b88a (origin/master) u2: append 1x file.txt
|/
* 54a0645 u1: created file.txt

$ git diff &lt;tab&gt;
FETCH_HEAD HEAD master MERGE_HEAD ORIG_HEAD origin/master

$ cat .git/FETCH_HEAD
5b0b88a264a20a81bb26a38ea63f03f8c35b8218 branch 'master' of https://github.com/bmwieczorek/git-pull-merge-vs-rebase

$ cat .git/MERGE_HEAD
5b0b88a264a20a81bb26a38ea63f03f8c35b8218

$ cat .git/ORIG_HEAD
9b4e9212aeb8245694c469324c11ab451bb59eff

$ cat file.txt | egrep -v '&lt;&lt;&lt;|&gt;&gt;&gt;|===' &gt; file.txt # <strong>resolve conflict</strong>

$ cat file.txt
u1: initial create of file.txt
u1: append 1x file.txt
u1: append 2x file.txt
u2: append 1x

$ git status
On branch master
Your branch and 'origin/master' have diverged,
and have 2 and 1 different commit each, respectively.
 (use "git pull" to merge the remote branch into yours)
You have unmerged paths.
 (fix conflicts and run "git commit")
Unmerged paths:
 (use "git add &lt;file&gt;..." to mark resolution)
 both modified: file.txt
no changes added to commit (use "git add" and/or "git commit -a")

$ git add file.txt

$ git status
On branch master
Your branch and 'origin/master' have diverged,
and have 2 and 1 different commit each, respectively.
 (use "git pull" to merge the remote branch into yours)
All conflicts fixed but you are still merging.
 (use "git commit" to conclude merge)
Changes to be committed:
 modified: file.txt

<strong>$ git commit -m "u1: merged changes from master"</strong>
[master f286b34] u1: merged changes from master

<strong>$ git push origin master</strong>
Counting objects: 9, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (6/6), done.
Writing objects: 100% (9/9), 795 bytes | 0 bytes/s, done.
Total 9 (delta 2), reused 0 (delta 0)
To https://bmwieczorek@github.com/bmwieczorek/git-pull-merge-vs-rebase.git
 5b0b88a..f286b34 master -&gt; master
 
$ git diff &lt;tab&gt;
FETCH_HEAD HEAD master ORIG_HEAD origin/master

$ cat .git/FETCH_HEAD
5b0b88a264a20a81bb26a38ea63f03f8c35b8218 branch 'master' of https://github.com/bmwieczorek/git-pull-merge-vs-rebase

$ cat .git/ORIG_HEAD
9b4e9212aeb8245694c469324c11ab451bb59eff

$ git log --abbrev-commit --decorate # <strong>note that history is in the chronological order of commits (not pushes) + last merge commit</strong>
commit f286b34 (HEAD -&gt; master, origin/master)
Merge: 9b4e921 5b0b88a
Date: Sun Feb 14 16:38:44 2016 +0100
 u1: merged changes from master
commit 9b4e921
Date: Sun Feb 14 14:31:40 2016 +0100
 u1: append 2x file.txt
commit 5b0b88a
Date: Sun Feb 14 14:31:34 2016 +0100
 u2: append 1x file.txt
commit 1d74c81
Date: Sun Feb 14 14:31:31 2016 +0100
 u1: append 1x file.txt
commit 54a0645
Date: Sun Feb 14 14:30:33 2016 +0100
 u1: created file.txt

$ git log --graph --pretty=oneline --abbrev-commit --decorate
* f286b34 (HEAD -&gt; master) u1: merged changes from master
|\
| * 5b0b88a (origin/master) u2: append 1x file.txt
* | 9b4e921 u1: append 2x file.txt
* | 1d74c81 u1: append 1x file.txt
|/
* 54a0645 u1: created file.txt</pre>
<pre><strong>2. git pull with rebase (fetch + rebase)</strong></pre>
<pre><strong>$ </strong><strong>git pull --rebase</strong>
remote: Counting objects: 3, done.
remote: Total 3 (delta 0), reused 3 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), done.
From https://github.com/bmwieczorek/git-pull-merge-vs-rebase
 8665249..ae30041 master -&gt; origin/master
<strong>First, rewinding head to replay your work on top of it...</strong>
<strong>Applying: u1: append 1x file.txt</strong>
Using index info to reconstruct a base tree...
M file.txt
Falling back to patching base and 3-way merge...
Auto-merging file.txt
<strong>CONFLICT (content): Merge conflict in file.txt</strong>
error: Failed to merge in the changes.
Patch failed at 0001 u1: append 1x file.txt
The copy of the patch that failed is found in: .git/rebase-apply/patch
<strong>When you have resolved this problem, run "git rebase --continue".</strong>
If you prefer to skip this patch, run "git rebase --skip" instead.
To check out the original branch and stop rebasing, run "git rebase --abort".

$ git status
rebase in progress; onto ae30041
You are currently rebasing branch 'master' on 'ae30041'.
 (fix conflicts and then run "git rebase --continue")
 (use "git rebase --skip" to skip this patch)
 (use "git rebase --abort" to check out the original branch)
Unmerged paths:
 (use "git reset HEAD &lt;file&gt;..." to unstage)
 (use "git add &lt;file&gt;..." to mark resolution)
 both modified: file.txt
no changes added to commit (use "git add" and/or "git commit -a")

$ cat file.txt
u1: initial create of file.txt
&lt;&lt;&lt;&lt;&lt;&lt;&lt; ae3004164ee6fbfa5daf9dc339f494c7b1486891
u2: append 1x
=======
u1: append 1x file.txt
&gt;&gt;&gt;&gt;&gt;&gt;&gt; u1: append 1x file.txt

$ cat file.txt | egrep -v '&lt;&lt;&lt;|&gt;&gt;&gt;|===' &gt; file.txt # <strong>resolve conflict</strong>

$ cat file.txt
u1: initial create of file.txt
u2: append 1x
u1: append 1x file.txt

$ git log --pretty=oneline --abbrev-commit --decorate --all
f4696de (master) u1: append 2x file.txt
ae30041 (HEAD, origin/master) u2: append 1x file.txt
281bc65 u1: append 1x file.txt
8665249 u1: created file.txt

$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
* f4696de - Sun, 14 Feb 2016 17:18:55 +0100 (7 minutes ago) (master)
| u1: append 2x file.txt - Bartosz Wieczorek
* 281bc65 - Sun, 14 Feb 2016 17:18:50 +0100 (7 minutes ago)
| u1: append 1x file.txt - Bartosz Wieczorek
| * ae30041 - Sun, 14 Feb 2016 17:18:52 +0100 (7 minutes ago) (HEAD, origin/master)
|/ u2: append 1x file.txt - Bartosz Wieczorek
* 8665249 - Sun, 14 Feb 2016 17:18:47 +0100 (7 minutes ago)
 u1: created file.txt - Bartosz Wieczorek

$ git diff
FETCH_HEAD HEAD master ORIG_HEAD origin/master

$ cat .git/FETCH_HEAD
ae3004164ee6fbfa5daf9dc339f494c7b1486891 branch 'master' of https://github.com/bmwieczorek/git-pull-merge-vs-rebase

$ cat .git/HEAD
ae3004164ee6fbfa5daf9dc339f494c7b1486891

$ cat .git/ORIG_HEAD
f4696de0cc8caa2a921cc0bc5ead80842097ba37

$ git status
rebase in progress; onto ae30041
You are currently rebasing branch 'master' on 'ae30041'.
 (fix conflicts and then run "git rebase --continue")
 (use "git rebase --skip" to skip this patch)
 (use "git rebase --abort" to check out the original branch)
Unmerged paths:
 (use "git reset HEAD &lt;file&gt;..." to unstage)
 (use "git add &lt;file&gt;..." to mark resolution)
 both modified: file.txt
no changes added to commit (use "git add" and/or "git commit -a")

$ cat file.txt
u1: initial create of file.txt
u2: append 1x
u1: append 1x file.txt

<strong>$ git add file.txt</strong>

<strong>$ git rebase --continue</strong>
<strong>Applying: u1: append 1x file.txt</strong>
<strong>Applying: u1: append 2x file.txt</strong>
Using index info to reconstruct a base tree...
M file.txt
Falling back to patching base and 3-way merge...
Auto-merging file.txt

$ cat file.txt
u1: initial create of file.txt
u2: append 1x
u1: append 1x file.txt
u1: append 2x file.txt

$ git status
On branch master
Your branch is ahead of 'origin/master' by 2 commits.
 (use "git push" to publish your local commits)
nothing to commit, working directory clean

$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
* 6326710 - Sun, 14 Feb 2016 17:18:55 +0100 (10 minutes ago) (HEAD -&gt; master)
| u1: append 2x file.txt - Bartosz Wieczorek
* feb9d0c - Sun, 14 Feb 2016 17:18:50 +0100 (10 minutes ago)
| u1: append 1x file.txt - Bartosz Wieczorek
* ae30041 - Sun, 14 Feb 2016 17:18:52 +0100 (10 minutes ago) (origin/master)
| u2: append 1x file.txt - Bartosz Wieczorek
* 8665249 - Sun, 14 Feb 2016 17:18:47 +0100 (10 minutes ago)
 u1: created file.txt - Bartosz Wieczorek

$ git log --graph --pretty=oneline --abbrev-commit --decorate --all <strong># note the order is first master branch changes then u1 two commits</strong>
<strong>* 6326710 (HEAD -&gt; master) u1: append 2x file.txt</strong>
<strong>* feb9d0c u1: append 1x file.txt</strong>
<strong>* ae30041 (origin/master) u2: append 1x file.txt</strong>
<strong>* 8665249 u1: created file.txt</strong>

$ git push origin master
Counting objects: 6, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (4/4), done.
Writing objects: 100% (6/6), 550 bytes | 0 bytes/s, done.
Total 6 (delta 1), reused 0 (delta 0)
To https://bmwieczorek@github.com/bmwieczorek/git-pull-merge-vs-rebase.git
 ae30041..6326710 master -&gt; master

$ git log --graph --pretty=oneline --abbrev-commit --decorate --all
* 6326710 (HEAD -&gt; master, origin/master) u1: append 2x file.txt
* feb9d0c u1: append 1x file.txt
* ae30041 u2: append 1x file.txt
* 8665249 u1: created file.txt




mkdir git-pull-merge-vs-rebase
cd git-pull-merge-vs-rebase
mkdir u1
cd u1
git clone https://github.com/bmwieczorek/git-pull-merge-vs-rebase.git
cd git-pull-merge-vs-rebase
echo "u1: initial create of file.txt" &gt;&gt; file.txt
git add file.txt
git commit -m "u1: created file.txt" file.txt
git push origin master
echo "u1: append 1x file.txt" &gt;&gt; file.txt
git add file.txt
git commit -m "u1: append 1x file.txt"
# do not push yet
cd ../..
mkdir u2
cd u2
git clone https://github.com/bmwieczorek/git-pull-merge-vs-rebase.git
cd git-pull-merge-vs-rebase
echo "u2: append 1x" &gt;&gt; file.txt
git add file.txt
git commit -m "u2: append 1x file.txt" file.txt
git push origin master
cd ../../u1/git-pull-merge-vs-rebase
echo "u1: append 2x file.txt" &gt;&gt; file.txt
git add file.txt
git commit -m "u1: append 2x file.txt"
git push origin master
git log --graph --pretty=oneline --abbrev-commit --decorate
git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
git pull --rebase
git status
cat file.txt
cat file.txt | egrep -v '&lt;&lt;&lt;|&gt;&gt;&gt;|===' &gt; file.txt # resolve conflict
cat file.txt
git log --graph --pretty=oneline --abbrev-commit --decorate
git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) 
cat .git/FETCH_HEAD
cat .git/HEAD
cat .git/ORIG_HEAD
git status
cat file.txt
git add file.txt
git rebase --continue
cat file.txt
git status
git log --graph --pretty=oneline --abbrev-commit --decorate # note the order is first master branch changes then
 u1 two commits
git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
git push origin master



</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2428</wp:post_id>
  <wp:post_date>2016-02-14 17:04:52</wp:post_date>
  <wp:post_date_gmt>2016-02-14 16:04:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>git-pull-merge-vs-rebase</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="git"><![CDATA[git]]></category>
  <category domain="post_tag" nicename="git-pull"><![CDATA[git pull]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[19796372710]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>git pull --rebase</title>
  <link>https://bmwieczorek.wordpress.com/2016/02/14/git-pull-rebase/</link>
  <pubDate>Sun, 14 Feb 2016 19:16:57 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2467</guid>
  <description/>
  <content:encoded><![CDATA[<pre><strong>Scenario:
</strong>U1 clone repo, create file, commit and push origin master
U1 first update file, commit (do not yet push)
U2 clone repo, update file, commit and push origin master
U1 second update file, commit, and try to push (rejected push)
U1 git pull --rebase, resolve conflict, git rebase --continue, git push origin master

<strong>History after rebase: local commits will be applied on the top of (after) commits that were already applied to origin master. In other words the local commits will be seen as last. Here, U2 commit will be reordered to be applied before 'U1 first update' commit even though the 'U1 first update' was chronologically first):
</strong>U1 second update file
U1 first update file
U2 update file
U1 commit (file create)</pre>
<pre><strong>Commands:
</strong><span style="line-height:1.7;">mkdir git-pull-with-rebase
</span>cd git-pull-with-rebase
mkdir u1
cd u1
git clone https://github.com/bmwieczorek/git-pull-with-rebase.git
cd git-pull-with-rebase
echo "u1: initial create of file.txt" &gt;&gt; file.txt
git add file.txt
git commit -m "u1: created file.txt" file.txt
git push origin master
echo "u1: append 1x file.txt" &gt;&gt; file.txt
git add file.txt
git commit -m "u1: append 1x file.txt"
# do not push yet
cd ../..
mkdir u2
cd u2
git clone https://github.com/bmwieczorek/git-pull-with-rebase.git
cd git-pull-with-rebase
echo "u2: append 1x" &gt;&gt; file.txt
git add file.txt
git commit -m "u2: append 1x file.txt" file.txt
git push origin master
cd ../../u1/git-pull-with-rebase
echo "u1: append 2x file.txt" &gt;&gt; file.txt
git add file.txt
git commit -m "u1: append 2x file.txt"
git push origin master
git log --graph --pretty=oneline --abbrev-commit --decorate
git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
git pull --rebase
git status
cat file.txt
cat file.txt | egrep -v '&lt;&lt;&lt;|&gt;&gt;&gt;|===' &gt; file.txt # resolve conflict
cat file.txt
git log --graph --pretty=oneline --abbrev-commit --decorate
git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
cat .git/FETCH_HEAD
cat .git/HEAD
cat .git/ORIG_HEAD
git status
cat file.txt
git add file.txt
git rebase --continue
cat file.txt
git status
git log --graph --pretty=oneline --abbrev-commit --decorate # note the order is first master branch changes then u1 two commits
git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
git push origin master
git log --graph --pretty=oneline --abbrev-commit --decorate
git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all</pre>
<pre><strong>Results:
</strong>$ mkdir git-pull-with-rebase
$ cd git-pull-with-rebase
$ mkdir u1
$ cd u1
$ git clone https://github.com/bmwieczorek/git-pull-with-rebase.git
Cloning into 'git-pull-with-rebase'...
warning: You appear to have cloned an empty repository.
Checking connectivity... done.
$ cd git-pull-with-rebase
$ echo "u1: initial create of file.txt" &gt;&gt; file.txt
$ git add file.txt
$ git commit -m "u1: created file.txt" file.txt
[master (root-commit) 743a0f8] u1: created file.txt
 1 file changed, 1 insertion(+)
 create mode 100644 file.txt
$ git push origin master
Counting objects: 3, done.
Writing objects: 100% (3/3), 255 bytes | 0 bytes/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://bmwieczorek@github.com/bmwieczorek/git-pull-with-rebase.git
 * [new branch] master -&gt; master
$ echo "u1: append 1x file.txt" &gt;&gt; file.txt
$ git add file.txt
$ git commit -m "u1: append 1x file.txt"
[master b4060fb] u1: append 1x file.txt
 1 file changed, 1 insertion(+)
$ # do not push yet
$ cd ../..
$ mkdir u2
$ cd u2
$ git clone https://github.com/bmwieczorek/git-pull-with-rebase.git
Cloning into 'git-pull-with-rebase'...
remote: Counting objects: 3, done.
remote: Total 3 (delta 0), reused 3 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), done.
Checking connectivity... done.
$ cd git-pull-with-rebase
$ echo "u2: append 1x" &gt;&gt; file.txt
$ git add file.txt
$ git commit -m "u2: append 1x file.txt" file.txt
[master e63fe7e] u2: append 1x file.txt
 1 file changed, 1 insertion(+)
$ git push origin master
Counting objects: 3, done.
Writing objects: 100% (3/3), 300 bytes | 0 bytes/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://bmwieczorek@github.com/bmwieczorek/git-pull-with-rebase.git
 743a0f8..e63fe7e master -&gt; master
$ cd ../../u1/git-pull-with-rebase
$ echo "u1: append 2x file.txt" &gt;&gt; file.txt
$ git add file.txt
$ git commit -m "u1: append 2x file.txt"
[master bc68886] u1: append 2x file.txt
 1 file changed, 1 insertion(+)
<strong>$ git push origin master</strong>
To https://bmwieczorek@github.com/bmwieczorek/git-pull-with-rebase.git
<strong> ! [rejected] master -&gt; master (fetch first)</strong>
error: failed to push some refs to 'https://bmwieczorek@github.com/bmwieczorek/git-pull-with-rebase.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
$ git log --graph --pretty=oneline --abbrev-commit --decorate
* bc68886 (HEAD -&gt; master) u1: append 2x file.txt
* b4060fb u1: append 1x file.txt
* 743a0f8 (origin/master) u1: created file.txt
$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
* bc68886 - Sun, 14 Feb 2016 22:35:40 +0100 (14 seconds ago) (HEAD -&gt; master)
| u1: append 2x file.txt - Bartosz Wieczorek
* b4060fb - Sun, 14 Feb 2016 22:34:29 +0100 (85 seconds ago)
| u1: append 1x file.txt - Bartosz Wieczorek
* 743a0f8 - Sun, 14 Feb 2016 22:34:10 +0100 (2 minutes ago) (origin/master)
 u1: created file.txt - Bartosz Wieczorek
<strong>$ git pull --rebase</strong>
remote: Counting objects: 3, done.
remote: Total 3 (delta 0), reused 3 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), done.
From https://github.com/bmwieczorek/git-pull-with-rebase
 743a0f8..e63fe7e master -&gt; origin/master
First, rewinding head to replay your work on top of it...
Applying: u1: append 1x file.txt
Using index info to reconstruct a base tree...
M file.txt
Falling back to patching base and 3-way merge...
Auto-merging file.txt
CONFLICT (content): Merge conflict in file.txt
error: Failed to merge in the changes.
Patch failed at 0001 u1: append 1x file.txt
The copy of the patch that failed is found in: .git/rebase-apply/patch
When you have resolved this problem, run "git rebase --continue".
If you prefer to skip this patch, run "git rebase --skip" instead.
To check out the original branch and stop rebasing, run "git rebase --abort".
$ git status
rebase in progress; onto e63fe7e
You are currently rebasing branch 'master' on 'e63fe7e'.
 (fix conflicts and then run "git rebase --continue")
 (use "git rebase --skip" to skip this patch)
 (use "git rebase --abort" to check out the original branch)
Unmerged paths:
 (use "git reset HEAD &lt;file&gt;..." to unstage)
 (use "git add &lt;file&gt;..." to mark resolution)
 both modified: file.txt
no changes added to commit (use "git add" and/or "git commit -a")
$ cat file.txt
u1: initial create of file.txt
&lt;&lt;&lt;&lt;&lt;&lt;&lt; e63fe7eaceb2b540544522e7121b79d7eb46337f
u2: append 1x
=======
u1: append 1x file.txt
&gt;&gt;&gt;&gt;&gt;&gt;&gt; u1: append 1x file.txt
$ cat file.txt | egrep -v '&lt;&lt;&lt;|&gt;&gt;&gt;|===' &gt; file.txt # resolve conflict
$ cat file.txt
u1: initial create of file.txt
u2: append 1x
u1: append 1x file.txt
$ git log --graph --pretty=oneline --abbrev-commit --decorate
* e63fe7e (HEAD, origin/master) u2: append 1x file.txt
* 743a0f8 u1: created file.txt
$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
* bc68886 - Sun, 14 Feb 2016 22:35:40 +0100 (43 seconds ago) (master)
| u1: append 2x file.txt - Bartosz Wieczorek
* b4060fb - Sun, 14 Feb 2016 22:34:29 +0100 (2 minutes ago)
| u1: append 1x file.txt - Bartosz Wieczorek
| * e63fe7e - Sun, 14 Feb 2016 22:35:22 +0100 (61 seconds ago) (HEAD, origin/master)
|/ u2: append 1x file.txt - Bartosz Wieczorek
* 743a0f8 - Sun, 14 Feb 2016 22:34:10 +0100 (2 minutes ago)
 u1: created file.txt - Bartosz Wieczorek
$ cat .git/FETCH_HEAD
e63fe7eaceb2b540544522e7121b79d7eb46337f branch 'master' of https://github.com/bmwieczorek/git-pull-with-rebase
$ cat .git/HEAD
e63fe7eaceb2b540544522e7121b79d7eb46337f
$ cat .git/ORIG_HEAD
bc68886e2728e2382970bd98f01ff3d00ff8c5a4
$ git status
rebase in progress; onto e63fe7e
You are currently rebasing branch 'master' on 'e63fe7e'.
 (fix conflicts and then run "git rebase --continue")
 (use "git rebase --skip" to skip this patch)
 (use "git rebase --abort" to check out the original branch)
Unmerged paths:
 (use "git reset HEAD &lt;file&gt;..." to unstage)
 (use "git add &lt;file&gt;..." to mark resolution)
 both modified: file.txt
no changes added to commit (use "git add" and/or "git commit -a")
$ git add file.txt
<strong>$ git rebase --continue</strong>
Applying: u1: append 1x file.txt
Applying: u1: append 2x file.txt
Using index info to reconstruct a base tree...
M file.txt
Falling back to patching base and 3-way merge...
Auto-merging file.txt
$ cat file.txt
u1: initial create of file.txt
u2: append 1x
u1: append 1x file.txt
u1: append 2x file.txt
$ git status
On branch master
Your branch is ahead of 'origin/master' by 2 commits.
 (use "git push" to publish your local commits)
nothing to commit, working directory clean
$ git log --graph --pretty=oneline --abbrev-commit --decorate <strong># origin/master U2 commit is applied before both U1 commits</strong>
<strong>* 5505349 (HEAD -&gt; master) u1: append 2x file.txt</strong>
<strong>* f117b95 u1: append 1x file.txt</strong>
<strong>* e63fe7e (origin/master) u2: append 1x file.txt</strong>
<strong>* 743a0f8 u1: created file.txt</strong>
$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
* 5505349 - Sun, 14 Feb 2016 22:35:40 +0100 (2 minutes ago) (HEAD -&gt; master)
| u1: append 2x file.txt - Bartosz Wieczorek
* f117b95 - Sun, 14 Feb 2016 22:34:29 +0100 (3 minutes ago)
| u1: append 1x file.txt - Bartosz Wieczorek
* e63fe7e - Sun, 14 Feb 2016 22:35:22 +0100 (2 minutes ago) (origin/master)
| u2: append 1x file.txt - Bartosz Wieczorek
* 743a0f8 - Sun, 14 Feb 2016 22:34:10 +0100 (3 minutes ago)
 u1: created file.txt - Bartosz Wieczorek
$ git push origin master
Counting objects: 6, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (4/4), done.
Writing objects: 100% (6/6), 551 bytes | 0 bytes/s, done.
Total 6 (delta 1), reused 0 (delta 0)
To https://bmwieczorek@github.com/bmwieczorek/git-pull-with-rebase.git
 e63fe7e..5505349 master -&gt; master
$ git log --graph --pretty=oneline --abbrev-commit --decorate
* 5505349 (HEAD -&gt; master, origin/master) u1: append 2x file.txt
* f117b95 u1: append 1x file.txt
* e63fe7e u2: append 1x file.txt
* 743a0f8 u1: created file.txt
$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
* 5505349 - Sun, 14 Feb 2016 22:35:40 +0100 (2 minutes ago) (HEAD -&gt; master, origin/master)
| u1: append 2x file.txt - Bartosz Wieczorek
* f117b95 - Sun, 14 Feb 2016 22:34:29 +0100 (4 minutes ago)
| u1: append 1x file.txt - Bartosz Wieczorek
* e63fe7e - Sun, 14 Feb 2016 22:35:22 +0100 (3 minutes ago)
| u2: append 1x file.txt - Bartosz Wieczorek
* 743a0f8 - Sun, 14 Feb 2016 22:34:10 +0100 (4 minutes ago)
 u1: created file.txt - Bartosz Wieczorek

</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2467</wp:post_id>
  <wp:post_date>2016-02-14 20:16:57</wp:post_date>
  <wp:post_date_gmt>2016-02-14 19:16:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>git-pull-rebase</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="git"><![CDATA[git]]></category>
  <category domain="post_tag" nicename="git-pull-rebase"><![CDATA[git pull rebase]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[19801196542]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Git pull (with merge)</title>
  <link>https://bmwieczorek.wordpress.com/2016/02/15/git-pull-merge/</link>
  <pubDate>Mon, 15 Feb 2016 18:49:16 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2486</guid>
  <description/>
  <content:encoded><![CDATA[<pre><strong>Scenario:
</strong>U1 clone repo, create file, commit and push origin master
U1 first update file, commit (do not yet push)
U2 clone repo, update file, commit and push origin master
U1 second update file, commit, and try to push (rejected push)
U1 git pull, resolve conflict, commit, push origin master

<strong>History after pull (with merge): chronological + additional commit for resolved conflict change
U1 merge commit
</strong>U1 second update file 
U2 update file
U1 first update file
U1 commit (file create)</pre>
<pre><strong>Commands:
</strong><span style="line-height:1.7;">mkdir -p git-pull-merge/u1
mkdir -p git-pull-merge/u2
</span>cd git-pull-merge/u1
git clone https://github.com/bmwieczorek/git-pull-merge.git
cd git-pull-merge
echo "u1: initial create of file.txt" &gt;&gt; file.txt
git add file.txt
git commit -m "u1: created file.txt" file.txt
git push origin master
echo "u1: append 1x file.txt" &gt;&gt; file.txt
git add file.txt
git commit -m "u1: append 1x file.txt"
# do not push yet
cd ../../u2
git clone https://github.com/bmwieczorek/git-pull-merge.git
cd git-pull-merge
echo "u2: append 1x" &gt;&gt; file.txt
git add file.txt
git commit -m "u2: append 1x file.txt" file.txt
git push origin master
cd ../../u1/git-pull-merge
echo "u1: append 2x file.txt" &gt;&gt; file.txt
git add file.txt
git commit -m "u1: append 2x file.txt"
git push origin master
git log --pretty=oneline --abbrev-commit --decorate
git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
git pull
git status
cat file.txt
cat file.txt | egrep -v '&lt;&lt;&lt;|&gt;&gt;&gt;|===' &gt; file.txt # resolve conflict
cat file.txt
git log --pretty=oneline --abbrev-commit --decorate
git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
cat .git/FETCH_HEAD
cat .git/MERGE_HEAD
cat .git/HEAD
cat .git/ORIG_HEAD
git add file.txt
git status
git commit -m "U1: merged local commits with origin/master (U2) commit"
cat file.txt
git status
git log --pretty=oneline --abbrev-commit --decorate #
git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
git push origin master
git log --pretty=oneline --abbrev-commit --decorate
git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all</pre>
<pre><strong>Results:
</strong>$ mkdir -p git-pull-merge/u1
$ mkdir -p git-pull-merge/u2
$ cd git-pull-merge/u1
$ git clone https://github.com/bmwieczorek/git-pull-merge.git
Cloning into 'git-pull-merge'...
warning: You appear to have cloned an empty repository.
Checking connectivity... done.
$ cd git-pull-merge
$ echo "u1: initial create of file.txt" &gt;&gt; file.txt
$ git add file.txt
$ git commit -m "u1: created file.txt" file.txt
[master (root-commit) 380d5d9] u1: created file.txt
 1 file changed, 1 insertion(+)
 create mode 100644 file.txt
$ git push origin master
Counting objects: 3, done.
Writing objects: 100% (3/3), 255 bytes | 0 bytes/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://bmwieczorek@github.com/bmwieczorek/git-pull-merge.git
 * [new branch] master -&gt; master
$ echo "u1: append 1x file.txt" &gt;&gt; file.txt
$ git add file.txt
$ git commit -m "u1: append 1x file.txt"
[master c0d4167] u1: append 1x file.txt
 1 file changed, 1 insertion(+)
$ # do not push yet
$ cd ../../u2
$ git clone https://github.com/bmwieczorek/git-pull-merge.git
Cloning into 'git-pull-merge'...
remote: Counting objects: 3, done.
remote: Total 3 (delta 0), reused 3 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), done.
Checking connectivity... done.
$ cd git-pull-merge
$ echo "u2: append 1x" &gt;&gt; file.txt
$ git add file.txt
$ git commit -m "u2: append 1x file.txt" file.txt
[master 98cfc13] u2: append 1x file.txt
 1 file changed, 1 insertion(+)
$ git push origin master
Counting objects: 3, done.
Writing objects: 100% (3/3), 301 bytes | 0 bytes/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://bmwieczorek@github.com/bmwieczorek/git-pull-merge.git
 380d5d9..98cfc13 master -&gt; master
$ cd ../../u1/git-pull-merge
$ echo "u1: append 2x file.txt" &gt;&gt; file.txt
$ git add file.txt
$ git commit -m "u1: append 2x file.txt"
[master d5eff05] u1: append 2x file.txt
 1 file changed, 1 insertion(+)
$ git push origin master
To https://bmwieczorek@github.com/bmwieczorek/git-pull-merge.git
<strong> ! [rejected] master -&gt; master (fetch first)</strong>
error: failed to push some refs to 'https://bmwieczorek@github.com/bmwieczorek/git-pull-merge.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. <strong>You may want to first integrate the remote changes</strong>
hint: <strong>(e.g., 'git pull ...') before pushing again.</strong>
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
$ git log --pretty=oneline --abbrev-commit --decorate
d5eff05 (HEAD -&gt; master) u1: append 2x file.txt
c0d4167 u1: append 1x file.txt
380d5d9 (origin/master) u1: created file.txt
$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
* d5eff05 - Mon, 15 Feb 2016 21:52:36 +0100 (28 seconds ago) (HEAD -&gt; master)
| u1: append 2x file.txt - Bartosz Wieczorek
* c0d4167 - Mon, 15 Feb 2016 21:50:48 +0100 (2 minutes ago)
| u1: append 1x file.txt - Bartosz Wieczorek
* 380d5d9 - Mon, 15 Feb 2016 21:50:33 +0100 (3 minutes ago) (origin/master)
 u1: created file.txt - Bartosz Wieczorek
<strong>$ git pull</strong>
remote: Counting objects: 3, done.
remote: Total 3 (delta 0), reused 3 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), done.
From https://github.com/bmwieczorek/git-pull-merge
 380d5d9..98cfc13 master -&gt; origin/master
Auto-merging file.txt
<strong>CONFLICT (content): Merge conflict in file.txt</strong>
Automatic merge failed; fix conflicts and then commit the result.
$ git status
On branch master
Your branch and 'origin/master' have diverged,
and have 2 and 1 different commit each, respectively.
 (use "git pull" to merge the remote branch into yours)
You have unmerged paths.
 (fix conflicts and run "git commit")
Unmerged paths:
 (use "git add &lt;file&gt;..." to mark resolution)
 both modified: file.txt
no changes added to commit (use "git add" and/or "git commit -a")
$ cat file.txt
u1: initial create of file.txt
&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
u1: append 1x file.txt
u1: append 2x file.txt
=======
u2: append 1x
&gt;&gt;&gt;&gt;&gt;&gt;&gt; 98cfc134c2c14d8115ae5fc9003ac1e13ba93ebb
$ cat file.txt | egrep -v '&lt;&lt;&lt;|&gt;&gt;&gt;|===' &gt; file.txt # <strong>resolve conflict</strong>
$ cat file.txt
u1: initial create of file.txt
u1: append 1x file.txt
u1: append 2x file.txt
u2: append 1x
$ git log --pretty=oneline --abbrev-commit --decorate
d5eff05 (HEAD -&gt; master) u1: append 2x file.txt
c0d4167 u1: append 1x file.txt
380d5d9 u1: created file.txt
$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
* d5eff05 - Mon, 15 Feb 2016 21:52:36 +0100 (62 seconds ago) (HEAD -&gt; master)
| u1: append 2x file.txt - Bartosz Wieczorek
* c0d4167 - Mon, 15 Feb 2016 21:50:48 +0100 (3 minutes ago)
| u1: append 1x file.txt - Bartosz Wieczorek
| * 98cfc13 - Mon, 15 Feb 2016 21:52:01 +0100 (2 minutes ago) (origin/master)
|/ u2: append 1x file.txt - Bartosz Wieczorek
* 380d5d9 - Mon, 15 Feb 2016 21:50:33 +0100 (3 minutes ago)
 u1: created file.txt - Bartosz Wieczorek
$ cat .git/FETCH_HEAD
98cfc134c2c14d8115ae5fc9003ac1e13ba93ebb branch 'master' of https://github.com/bmwieczorek/git-pull-merge
$ cat .git/MERGE_HEAD
98cfc134c2c14d8115ae5fc9003ac1e13ba93ebb
$ cat .git/HEAD
ref: refs/heads/master
$ cat .git/ORIG_HEAD
d5eff058422f02df955b50499d9399ff0d174ebb
$ git add file.txt
$ git status
On branch master
Your branch and 'origin/master' have diverged,
and have 2 and 1 different commit each, respectively.
 (use "git pull" to merge the remote branch into yours)
All conflicts fixed but you are still merging.
 (use "git commit" to conclude merge)
Changes to be committed:
 modified: file.txt
<strong>$ git commit -m "U1: merged local commits with origin/master (U2) commit"</strong>
[master edf2634] U1: merged local commits with origin/master (U2) commit
$ cat file.txt
u1: initial create of file.txt
u1: append 1x file.txt
u1: append 2x file.txt
u2: append 1x
$ git status
On branch master
Your branch is ahead of 'origin/master' by 3 commits.
 (use "git push" to publish your local commits)
nothing to commit, working directory clean
<strong>$ git log --pretty=oneline --abbrev-commit --decorate # note additional commit for resolved conflict change and chronological commits</strong>
<strong>edf2634 (HEAD -&gt; master) U1: merged local commits with origin/master (U2) commit</strong>
<strong>d5eff05 u1: append 2x file.txt</strong>
<strong>98cfc13 (origin/master) u2: append 1x file.txt</strong>
<strong>c0d4167 u1: append 1x file.txt</strong>
<strong>380d5d9 u1: created file.txt</strong>
$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
* edf2634 - Mon, 15 Feb 2016 21:54:24 +0100 (20 seconds ago) (HEAD -&gt; master)
|\ U1: merged local commits with origin/master (U2) commit - Bartosz Wieczorek
| * 98cfc13 - Mon, 15 Feb 2016 21:52:01 +0100 (3 minutes ago) (origin/master)
| | u2: append 1x file.txt - Bartosz Wieczorek
* | d5eff05 - Mon, 15 Feb 2016 21:52:36 +0100 (2 minutes ago)
| | u1: append 2x file.txt - Bartosz Wieczorek
* | c0d4167 - Mon, 15 Feb 2016 21:50:48 +0100 (4 minutes ago)
|/ u1: append 1x file.txt - Bartosz Wieczorek
* 380d5d9 - Mon, 15 Feb 2016 21:50:33 +0100 (4 minutes ago)
 u1: created file.txt - Bartosz Wieczorek
$ git push origin master
Counting objects: 9, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (6/6), done.
Writing objects: 100% (9/9), 815 bytes | 0 bytes/s, done.
Total 9 (delta 2), reused 0 (delta 0)
To https://bmwieczorek@github.com/bmwieczorek/git-pull-merge.git
 98cfc13..edf2634 master -&gt; master
$ git log --pretty=oneline --abbrev-commit --decorate
edf2634 (HEAD -&gt; master, origin/master) U1: merged local commits with origin/master (U2) commit
d5eff05 u1: append 2x file.txt
98cfc13 u2: append 1x file.txt
c0d4167 u1: append 1x file.txt
380d5d9 u1: created file.txt
$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
* edf2634 - Mon, 15 Feb 2016 21:54:24 +0100 (64 seconds ago) (HEAD -&gt; master, origin/master)
|\ U1: merged local commits with origin/master (U2) commit - Bartosz Wieczorek
| * 98cfc13 - Mon, 15 Feb 2016 21:52:01 +0100 (3 minutes ago)
| | u2: append 1x file.txt - Bartosz Wieczorek
* | d5eff05 - Mon, 15 Feb 2016 21:52:36 +0100 (3 minutes ago)
| | u1: append 2x file.txt - Bartosz Wieczorek
* | c0d4167 - Mon, 15 Feb 2016 21:50:48 +0100 (5 minutes ago)
|/ u1: append 1x file.txt - Bartosz Wieczorek
* 380d5d9 - Mon, 15 Feb 2016 21:50:33 +0100 (5 minutes ago)
 u1: created file.txt - Bartosz Wieczorek<strong>
</strong>
</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2486</wp:post_id>
  <wp:post_date>2016-02-15 19:49:16</wp:post_date>
  <wp:post_date_gmt>2016-02-15 18:49:16</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>git-pull-merge</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="git"><![CDATA[git]]></category>
  <category domain="post_tag" nicename="git-pull"><![CDATA[git pull]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[19833986825]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Git interactive rebase with squash</title>
  <link>https://bmwieczorek.wordpress.com/2016/02/16/git-interactive-rebase-with-squash/</link>
  <pubDate>Tue, 16 Feb 2016 13:12:53 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2501</guid>
  <description/>
  <content:encoded><![CDATA[<pre><strong>Scenario:
</strong>1. clone repo, create file, commit and push origin master
2. create feature-branch, commit new feature to feature-branch
3. checkout master, commit security fix to master
4. checkout feature-branch, commit correction for new feature
5. interactive rebase with master, squash new feature and correction to new feature into new one commit (history will contain only new combined without 2 previous)
6. checkout master, fast-forward merge with feature-branch to master
<strong>History after pull (with merge): </strong></pre>
<pre><strong>Commands:
</strong>git clone https://github.com/bmwieczorek/git-squash.git
cd git-squash
echo "master: file create" &gt;&gt; file.txt
git add file.txt
git commit -m "master: file create" file.txt
git push origin master
git checkout -b feature-branch
echo "feature-branch: added new feature to file" &gt;&gt; file.txt
git add file.txt
git commit -m "feature-branch: added new feature to file.txt"
git checkout master
echo "master: security fix in file.txt" &gt;&gt; file.txt
git add file.txt
git commit -m "master: security fix in file.txt" file.txt
git checkout feature-branch
echo "feature-branch: correction for new feature in file.txt" &gt;&gt; file.txt
git add file.txt
git commit -m "feature-branch: correction for new feature in file.txt" file.txt
git log --pretty=oneline --abbrev-commit --decorate
git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
git rebase -i master # replace pick with squash for correction commit<strong>
</strong>cat file.txt
vim file.txt # edit conflict for applying 'new feature' on top of 'security fix'
cat file.txt
git status
git rebase --continue # provide commit message for commit aggregating new feature and correction
cat file.txt
git status
git log --pretty=oneline --abbrev-commit --decorate
git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
git checkout master
git merge feature-branch #fast-forward
git log --pretty=oneline --abbrev-commit --decorate
git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all</pre>
<pre><strong>Results:</strong>
$ git clone https://github.com/bmwieczorek/git-squash.git
Cloning into 'git-squash'...
warning: You appear to have cloned an empty repository.
Checking connectivity... done.
$ cd git-squash
$ echo "master: file create" &gt;&gt; file.txt
$ git add file.txt
$ git commit -m "master: file create" file.txt
[master (root-commit) a9d23b4] master: file create
 1 file changed, 1 insertion(+)
 create mode 100644 file.txt
$ git push origin master
Counting objects: 3, done.
Writing objects: 100% (3/3), 244 bytes | 0 bytes/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://bmwieczorek@github.com/bmwieczorek/git-squash.git
 * [new branch] master -&gt; master
$ git checkout -b feature-branch
Switched to a new branch 'feature-branch'
$ echo "feature-branch: added new feature to file" &gt;&gt; file.txt
$ git add file.txt
$ cat file.txt
master: file create
feature-branch: added new feature to file
$ git commit -m "feature-branch: added new feature to file.txt"
[feature-branch 675a6ba] feature-branch: added new feature to file.txt
 1 file changed, 1 insertion(+)
$ git checkout master
Switched to branch 'master'
Your branch is up-to-date with 'origin/master'.
$ echo "master: security fix in file.txt" &gt;&gt; file.txt
$ git add file.txt
$ git commit -m "master: security fix in file.txt" file.txt
[master d9aff30] master: security fix in file.txt
 1 file changed, 1 insertion(+)
$ git checkout feature-branch
Switched to branch 'feature-branch'
$ echo "feature-branch: correction for new feature in file.txt" &gt;&gt; file.txt
$ git add file.txt
$ git commit -m "feature-branch: correction for new feature in file.txt" file.txt
[feature-branch 83661c5] feature-branch: correction for new feature in file.txt
 1 file changed, 1 insertion(+)
$ git log --pretty=oneline --abbrev-commit --decorate
83661c5 (HEAD -&gt; feature-branch) feature-branch: correction for new feature in file.txt
675a6ba feature-branch: added new feature to file.txt
a9d23b4 (origin/master) master: file create
$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
* 83661c5 - Tue, 16 Feb 2016 13:49:03 +0100 (8 seconds ago) (HEAD -&gt; feature-branch)
| feature-branch: correction for new feature in file.txt - Bartosz Wieczorek
* 675a6ba - Tue, 16 Feb 2016 13:47:53 +0100 (78 seconds ago)
| feature-branch: added new feature to file.txt - Bartosz Wieczorek
| * d9aff30 - Tue, 16 Feb 2016 13:48:08 +0100 (63 seconds ago) (master)
|/ master: security fix in file.txt - Bartosz Wieczorek
* a9d23b4 - Tue, 16 Feb 2016 13:44:44 +0100 (4 minutes ago) (origin/master)
 master: file create - Bartosz Wieczorek
$ git rebase -i master
error: could not apply 675a6ba... feature-branch: added new feature to file.txt

When you have resolved this problem, run "git rebase --continue".
If you prefer to skip this patch, run "git rebase --skip" instead.
To check out the original branch and stop rebasing, run "git rebase --abort".
Could not apply 675a6ba490991b5a85b662ec0043e87b6b5e61f2... feature-branch: added new feature to file.txt

***MESSAGE***

pick 675a6ba feature-branch: added new feature to file.txt
pick 83661c5 feature-branch: correction for new feature in file.txt

# Rebase d9aff30..83661c5 onto d9aff30 (2 command(s))
#
# Commands:
# p, pick = use commit
# r, reword = use commit, but edit the commit message
# e, edit = use commit, but stop for amending
# s, squash = use commit, but meld into previous commit
# f, fixup = like "squash", but discard this commit's log message
# x, exec = run command (the rest of the line) using shell
# d, drop = remove commit
#
# These lines can be re-ordered; they are executed from top to bottom.
#
# If you remove a line here THAT COMMIT WILL BE LOST.
#
# However, if you remove everything, the rebase will be aborted.
#
# Note that empty commits are commented out


*** CHANGED TO ***
squash 83661c5 feature-branch: correction for new feature in file.txt

$ cat file.txt
master: file create
&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
master: security fix in file.txt
=======
feature-branch: added new feature to file
&gt;&gt;&gt;&gt;&gt;&gt;&gt; 675a6ba... feature-branch: added new feature to file.txt

$ vim file.txt # resolve conflict when applying 'new feature' on top of security fix
$ git status
interactive rebase in progress; onto d9aff30
Last command done (1 command done):
 pick 675a6ba feature-branch: added new feature to file.txt
Next command to do (1 remaining command):
 squash 83661c5 feature-branch: correction for new feature in file.txt
 (use "git rebase --edit-todo" to view and edit)
You are currently rebasing branch 'feature-branch' on 'd9aff30'.
 (fix conflicts and then run "git rebase --continue")
 (use "git rebase --skip" to skip this patch)
 (use "git rebase --abort" to check out the original branch)
Unmerged paths:
 (use "git reset HEAD &lt;file&gt;..." to unstage)
 (use "git add &lt;file&gt;..." to mark resolution)
 both modified: file.txt
no changes added to commit (use "git add" and/or "git commit -a")

$ git log --pretty=oneline --abbrev-commit --decorate
d9aff30 (HEAD, master) master: security fix in file.txt
a9d23b4 (origin/master) master: file create

$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
* 83661c5 - Tue, 16 Feb 2016 13:49:03 +0100 (3 minutes ago) (feature-branch)
| feature-branch: correction for new feature in file.txt - Bartosz Wieczorek
* 675a6ba - Tue, 16 Feb 2016 13:47:53 +0100 (4 minutes ago)
| feature-branch: added new feature to file.txt - Bartosz Wieczorek
| * d9aff30 - Tue, 16 Feb 2016 13:48:08 +0100 (4 minutes ago) (HEAD, master)
|/ master: security fix in file.txt - Bartosz Wieczorek
* a9d23b4 - Tue, 16 Feb 2016 13:44:44 +0100 (7 minutes ago) (origin/master)
 master: file create - Bartosz Wieczorek

$ cat file.txt
master: file create
master: security fix in file.txt
feature-branch: added new feature to file

$ git status
interactive rebase in progress; onto d9aff30
Last command done (1 command done):
 pick 675a6ba feature-branch: added new feature to file.txt
Next command to do (1 remaining command):
 squash 83661c5 feature-branch: correction for new feature in file.txt
 (use "git rebase --edit-todo" to view and edit)
You are currently rebasing branch 'feature-branch' on 'd9aff30'.
 (all conflicts fixed: run "git rebase --continue")
Changes to be committed:
 (use "git reset HEAD &lt;file&gt;..." to unstage)
 modified: file.txt

$ git rebase --continue

***MESSAGE***

feature-branch: added new feature to file.txt

# Please enter the commit message for your changes. Lines starting
# with '#' will be ignored, and an empty message aborts the commit.
# interactive rebase in progress; onto d9aff30
# Last command done (1 command done):
# pick 675a6ba feature-branch: added new feature to file.txt
# Next command to do (1 remaining command):
# squash 83661c5 feature-branch: correction for new feature in file.txt
# You are currently rebasing branch 'feature-branch' on 'd9aff30'.
#
# Changes to be committed:
# modified: file.txt
#

*** CHANGED TO ***
feature-branch: interactive rebase --continue: added new feature to file.txt


***MESSAGE***

# This is a combination of 2 commits.
# The first commit's message is:

feature-branch: interactive rebase continue: added new feature to file.txt

# This is the 2nd commit message:

feature-branch: correction for new feature in file.txt

# Please enter the commit message for your changes. Lines starting
# with '#' will be ignored, and an empty message aborts the commit.
#
# Date: Tue Feb 16 13:47:53 2016 +0100
#
# interactive rebase in progress; onto d9aff30
# Last commands done (2 commands done):
# pick 675a6ba feature-branch: added new feature to file.txt
# squash 83661c5 feature-branch: correction for new feature in file.txt
# No commands remaining.
# You are currently editing a commit while rebasing branch 'feature-branch' on 'd9aff30'.
#
# Changes to be committed:
# modified: file.txt
#

***ADDED ADDITIONAL MESSASE ***
feature-branch: squashed commit for new feature and correction


[detached HEAD e897028] feature-branch: interactive rebase continue: added new feature to file.txt
 1 file changed, 1 insertion(+)
[detached HEAD 922bdeb] feature-branch: squashed commit for new feature and correction
 Date: Tue Feb 16 13:47:53 2016 +0100
 1 file changed, 2 insertions(+)
Successfully rebased and updated refs/heads/feature-branch.

$ cat file.txt
master: file create
master: security fix in file.txt
feature-branch: added new feature to file
feature-branch: correction for new feature in file.txt

$ git log --pretty=oneline --abbrev-commit --decorate
922bdeb (HEAD -&gt; feature-branch) feature-branch: squashed commit for new feature and correction
d9aff30 (master) master: security fix in file.txt
a9d23b4 (origin/master) master: file create

$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
* 922bdeb - Tue, 16 Feb 2016 13:47:53 +0100 (9 minutes ago) (HEAD -&gt; feature-branch)
| feature-branch: squashed commit for new feature and correction - Bartosz Wieczorek
* d9aff30 - Tue, 16 Feb 2016 13:48:08 +0100 (8 minutes ago) (master)
| master: security fix in file.txt - Bartosz Wieczorek
* a9d23b4 - Tue, 16 Feb 2016 13:44:44 +0100 (12 minutes ago) (origin/master)
 master: file create - Bartosz Wieczorek

$ git status
On branch feature-branch
nothing to commit, working directory clean

$ git checkout master
Switched to branch 'master'
Your branch is ahead of 'origin/master' by 1 commit.
 (use "git push" to publish your local commits)

$ git merge feature-branch
Updating d9aff30..922bdeb
Fast-forward
 file.txt | 2 ++
 1 file changed, 2 insertions(+)

$ git log --pretty=oneline --abbrev-commit --decorate
922bdeb (HEAD -&gt; master, feature-branch) feature-branch: squashed commit for new feature and correction
d9aff30 master: security fix in file.txt
a9d23b4 (origin/master) master: file create

$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
* 922bdeb - Tue, 16 Feb 2016 13:47:53 +0100 (10 minutes ago) (HEAD -&gt; master, feature-branch)
| feature-branch: squashed commit for new feature and correction - Bartosz Wieczorek
* d9aff30 - Tue, 16 Feb 2016 13:48:08 +0100 (10 minutes ago)
| master: security fix in file.txt - Bartosz Wieczorek
* a9d23b4 - Tue, 16 Feb 2016 13:44:44 +0100 (13 minutes ago) (origin/master)
 master: file create - Bartosz Wieczorek

$ cat file.txt
master: file create
master: security fix in file.txt
feature-branch: added new feature to file
feature-branch: correction for new feature in file.txt

$ git log
commit 922bdeb14032364c1086682139bcb74fb61184f2
Author: Bartosz Wieczorek &lt;bmwieczorek@gmail.com&gt;
 feature-branch: squashed commit for new feature and correction
 feature-branch: interactive rebase continue: added new feature to file.txt
 feature-branch: correction for new feature in file.txt
commit d9aff30b13447b952e17f2fe9b6eee1d77d33e2e
Date: Tue Feb 16 13:48:08 2016 +0100
 master: security fix in file.txt
commit a9d23b4f3091a0db7e045fce43165cd54273634a
Date: Tue Feb 16 13:44:44 2016 +0100
 master: file create







</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2501</wp:post_id>
  <wp:post_date>2016-02-16 14:12:53</wp:post_date>
  <wp:post_date_gmt>2016-02-16 13:12:53</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>git-interactive-rebase-with-squash</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="git"><![CDATA[git]]></category>
  <category domain="post_tag" nicename="git-interactive-rebase-with-squash"><![CDATA[git interactive rebase with squash]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[19859204321]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>git squash commits with interactive rebase</title>
  <link>https://bmwieczorek.wordpress.com/2016/02/16/git-squash-commits-with-interactive-rebase/</link>
  <pubDate>Tue, 16 Feb 2016 17:38:11 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2534</guid>
  <description/>
  <content:encoded><![CDATA[<pre>$ mkdir git-branch-squash
$ cd git-branch-squash
$ git init
Initialized empty Git repository in /cygdrive/c/dev/git-branch-squash/.git/
$ echo "master: initial create of file.txt" &gt; file.txt
$ git add file.txt
$ git commit -m "master: initial create of file.txt" file.txt
[master (root-commit) 71cfb6b] master: initial create of file.txt
 1 file changed, 1 insertion(+)
 create mode 100644 file.txt
$ git checkout -b feature-branch
Switched to a new branch 'feature-branch'
$ echo "feature-branch: start working on file.txt" &gt;&gt; file.txt 
$ git commit -a -m "feature-branch: start working on file.txt"
[feature-branch 7a1d64a] feature-branch: start working on file.txt
 1 file changed, 1 insertion(+)
$ echo "feature-branch: fix 1 for file.txt" &gt;&gt; file.txt
$ git commit -a -m "feature-branch: fix 1 for file.txt"
[feature-branch ee78458] feature-branch: fix 1 for file.txt
 1 file changed, 1 insertion(+)
$ echo "feature-branch: fix 2 for file.txt" &gt;&gt; file.txt
$ git commit -a -m "feature-branch: fix 2 for file.txt"
[feature-branch 9f51537] feature-branch: fix 2 for file.txt
 1 file changed, 1 insertion(+)
$ echo "feature-branch: fix 3 for file.txt" &gt;&gt; file.txt
$ git commit -a -m "feature-branch: fix 3 for file.txt"
[feature-branch 7efe54e] feature-branch: fix 3 for file.txt
 1 file changed, 1 insertion(+)

$ git log --graph --pretty=oneline --abbrev-commit --decorate
* 7efe54e (HEAD -&gt; feature-branch) feature-branch: fix 3 for file.txt
* 9f51537 feature-branch: fix 2 for file.txt
* ee78458 feature-branch: fix 1 for file.txt
* 7a1d64a feature-branch: start working on file.txt
* 71cfb6b (master) master: initial create of file.txt

<strong>$ git rebase -i HEAD~4 # squash all 4 commits into one by manually changing pick to squash for last 3 commits

</strong><strong># message window for interactive rebase: #</strong><strong>
</strong><strong>
pick 7a1d64a feature-branch: start working on file.txt sqaush</strong>
<strong>squash ee78458 feature-branch: fix 1 for file.txt # manually renamed pick to squash</strong>
<strong>squash 9f51537 feature-branch: fix 2 for file.txt </strong><strong># manually renamed pick to squash</strong>
<strong>squash 7efe54e feature-branch: fix 3 for file.txt </strong><strong># manually renamed pick to squash</strong><strong>
</strong># Rebase 71cfb6b..7efe54e onto 71cfb6b (4 command(s))
#
# Commands:
# p, pick = use commit
# r, reword = use commit, but edit the commit message
# e, edit = use commit, but stop for amending
# s, squash = use commit, but meld into previous commit
# f, fixup = like "squash", but discard this commit's log message
# x, exec = run command (the rest of the line) using shell
# d, drop = remove commit
#
# These lines can be re-ordered; they are executed from top to bottom.
# If you remove a line here THAT COMMIT WILL BE LOST.
# However, if you remove everything, the rebase will be aborted.
# Note that empty commits are commented out

<strong># message to edit message of the commit replacing squashed</strong> <strong>commits: #</strong>

# This is a combination of 4 commits.
<strong>feature-branch: implemented new feature (squashed commit) # comment added manually</strong>
# The first commit's message is:
feature-branch: start working on file.txt
# This is the 2nd commit message:
<strong>feature-branch: fix 1 for file.txt</strong>
# This is the 3rd commit message:
<strong>feature-branch: fix 2 for file.txt</strong>
# This is the 4th commit message:
<strong>feature-branch: fix 3 for file.txt</strong>
# Please enter the commit message for your changes. Lines starting
# with '#' will be ignored, and an empty message aborts the commit.
# Date: Tue Feb 16 18:25:02 2016 +0100
# interactive rebase in progress; onto 71cfb6b
# Last commands done (4 commands done):
# squash 9f51537 feature-branch: fix 2 for file.txt
# squash 7efe54e feature-branch: fix 3 for file.txt
# No commands remaining.
# You are currently editing a commit while rebasing branch 'feature-branch' on '71cfb6b'.
# Changes to be committed:
# modified: file.txt

[detached HEAD d03dc43] feature-branch: implemented new feature (squashed commit)
 Date: Tue Feb 16 18:25:02 2016 +0100
 1 file changed, 4 insertions(+)
Successfully rebased and updated refs/heads/feature-branch.

<strong>$ git log --graph --pretty=oneline --abbrev-commit --decorate</strong>
<strong>* d03dc43 (HEAD -&gt; feature-branch) feature-branch: implemented new feature (squashed commit)</strong>
<strong>* 71cfb6b (master) master: initial create of file.txt
</strong>
<strong>$ git log --abbrev-commit --decorate</strong>
<strong>commit d03dc43 (HEAD -&gt; feature-branch)</strong>
<strong>Date: Tue Feb 16 18:25:02 2016 +0100</strong>
<strong> feature-branch: implemented new feature (squashed commit)</strong>
<strong> feature-branch: start working on file.txt</strong>
<strong> feature-branch: fix 1 for file.txt</strong>
<strong> feature-branch: fix 2 for file.txt</strong>
<strong> feature-branch: fix 3 for file.txt</strong>
<strong>commit 71cfb6b (master)</strong>
<strong>Date: Tue Feb 16 18:24:00 2016 +0100</strong>
<strong> master: initial create of file.txt</strong></pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2534</wp:post_id>
  <wp:post_date>2016-02-16 18:38:11</wp:post_date>
  <wp:post_date_gmt>2016-02-16 17:38:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>git-squash-commits-with-interactive-rebase</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="git"><![CDATA[git]]></category>
  <category domain="post_tag" nicename="git-squash-commits"><![CDATA[git squash commits]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[19866804372]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>git merge vs git merge --no-ff (fast-forward vs no fast-forward)</title>
  <link>https://bmwieczorek.wordpress.com/2016/02/19/git-merge-no-ff/</link>
  <pubDate>Fri, 19 Feb 2016 11:14:12 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2549</guid>
  <description/>
  <content:encoded><![CDATA[<pre>No fastf-orward merge creates additional commit (with message to edit) vs fast-forward where commits are immediately merged. Note also history graph: with no-ff history graph split into 2 branches and combined at additional commit (immediately see from graph there was feature branch and merge - easier to revert as well). However, with ff approach you have only one line with all the commits (need to read log messages which commits are from feature branch) 

mkdir git-merge-no-ff
cd git-merge-no-ff
git init
echo "master: initial create of file" &gt; file.txt
git add file.txt
git commit -m "master: initial create of file" file.txt
git checkout -b "feature-branch"
echo "feature-branch: updated 1x file.txt" &gt;&gt; file.txt
git commit -a -m "feature-branch: updated 1x file.txt"
echo "feature-branch: updated 2x file.txt" &gt;&gt; file.txt
git commit -a -m "feature-branch: updated 2x file.txt"
git checkout master
git merge --no-ff feature-branch
(popup commit message window)

$ git log --decorate --abbrev-commit
<strong>commit e5a9e08 (HEAD -&gt; master)</strong>
<strong>Merge: 0c02667 102bac7</strong>
<strong>Date: Fri Feb 19 12:05:44 2016 +0100</strong>
<strong> Merge branch 'feature-branch' (-no-ff:containing all commits from feature branch)</strong>
commit 102bac7 (feature-branch)
Date: Fri Feb 19 12:05:37 2016 +0100
 feature-branch: updated 2x file.txt
commit d44b396
Date: Fri Feb 19 12:05:15 2016 +0100
 feature-branch: updated 1x file.txt
commit 0c02667
Date: Fri Feb 19 12:04:11 2016 +0100
 master: initial create of file

$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
* e5a9e08 - Fri, 19 Feb 2016 12:05:44 +0100 (3 minutes ago) (HEAD -&gt; master)
<strong>|\ Merge branch 'feature-branch' (-no-ff:containing all commits from feature branch) - Bartosz Wieczorek</strong>
| * 102bac7 - Fri, 19 Feb 2016 12:05:37 +0100 (3 minutes ago) (feature-branch)
| | feature-branch: updated 2x file.txt - Bartosz Wieczorek
| * d44b396 - Fri, 19 Feb 2016 12:05:15 +0100 (4 minutes ago)
|/ feature-branch: updated 1x file.txt - Bartosz Wieczorek
* 0c02667 - Fri, 19 Feb 2016 12:04:11 +0100 (5 minutes ago)
 master: initial create of file - Bartosz Wieczorek

VS FAST FORWARD:</pre>
<pre>git merge --no-ff feature-branch
git log --decorate --abbrev-commit
commit b8cd9ad (HEAD -&gt; master, feature-branch)
Date: Fri Feb 19 12:12:26 2016 +0100
 feature-branch: updated 2x file.txt
commit a1f5f5c
Date: Fri Feb 19 12:12:26 2016 +0100
 feature-branch: updated 1x file.txt
commit 80beaa8
Date: Fri Feb 19 12:12:26 2016 +0100
 master: initial create of file
$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
* b8cd9ad - Fri, 19 Feb 2016 12:12:26 +0100 (50 seconds ago) (HEAD -&gt; master, feature-branch)
| feature-branch: updated 2x file.txt - Bartosz Wieczorek
* a1f5f5c - Fri, 19 Feb 2016 12:12:26 +0100 (50 seconds ago)
| feature-branch: updated 1x file.txt - Bartosz Wieczorek
* 80beaa8 - Fri, 19 Feb 2016 12:12:26 +0100 (50 seconds ago)
 master: initial create of file - Bartosz Wieczorek


</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2549</wp:post_id>
  <wp:post_date>2016-02-19 12:14:12</wp:post_date>
  <wp:post_date_gmt>2016-02-19 11:14:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>git-merge-no-ff</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="git"><![CDATA[git]]></category>
  <category domain="post_tag" nicename="git-merge-fast-forward"><![CDATA[git merge fast-forward]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[19962287027]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>git merge --squash</title>
  <link>https://bmwieczorek.wordpress.com/2016/02/19/git-merge-squash/</link>
  <pubDate>Fri, 19 Feb 2016 14:17:29 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2565</guid>
  <description/>
  <content:encoded><![CDATA[<pre>'git merge --squash feature-branch' command takes all the commits from feature-branch, combines them into one commit and updates the stage area and working directory in master but does NOT automatically commits them into master. After veryfing the changes you need commit the modified files manually. Note the branch and master do NOT join eventually and master contains only one merged commit.

mkdir git-merge-squash
cd git-merge-squash
git init
echo "master: initial create of file" &gt; file.txt
git add file.txt
git commit -m "master: initial create of file" file.txt
git checkout -b "feature-branch"
echo "feature-branch: updated 1x file.txt" &gt;&gt; file.txt
git commit -a -m "feature-branch: updated 1x file.txt"
echo "feature-branch: updated 2x file.txt" &gt;&gt; file.txt
git commit -a -m "feature-branch: updated 2x file.txt"
git checkout master
<strong>git merge --squash feature-branch</strong>

<strong>$ git status</strong>
On branch master
<strong>Changes to be committed:</strong>
 (use "git reset HEAD &lt;file&gt;..." to unstage)
<strong>modified: file.txt
</strong>$ git diff file.txt
$ cat file.txt
master: initial create of file
feature-branch: updated 1x file.txt
feature-branch: updated 2x file.txt
$ git diff HEAD
diff --git a/file.txt b/file.txt
index e760575..96d40b4 100644
--- a/file.txt
+++ b/file.txt
@@ -1 +1,3 @@
 master: initial create of file
+feature-branch: updated 1x file.txt
+feature-branch: updated 2x file.txt
<strong>$ git commit -am "master: merged feature branch to master (merge --squash)"</strong>
[master 5ce8ac9] master: merged feature branch to master (merge --squash)
 1 file changed, 2 insertions(+)</pre>
<pre>$ git log --decorate --abbrev-commit
commit 5ce8ac9 (HEAD -&gt; master)
Date: Fri Feb 19 15:10:35 2016 +0100
<strong>master: merged feature branch to master (merge --squash)</strong>
commit 5c432b9
Date: Fri Feb 19 14:37:35 2016 +0100
<strong>master: initial create of file</strong>

$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
<strong>* 5ce8ac9 - Fri, 19 Feb 2016 15:10:35 +0100 (26 seconds ago) (HEAD -&gt; master)</strong>
<strong>| master: merged feature branch to master (merge --squash) - Bartosz Wieczorek</strong>
| * f2667ad - Fri, 19 Feb 2016 14:37:35 +0100 (33 minutes ago) (feature-branch)
| | feature-branch: updated 2x file.txt - Bartosz Wieczorek
| * dd4c796 - Fri, 19 Feb 2016 14:37:35 +0100 (33 minutes ago)
|/ feature-branch: updated 1x file.txt - Bartosz Wieczorek
* 5c432b9 - Fri, 19 Feb 2016 14:37:35 +0100 (33 minutes ago)
 master: initial create of file - Bartosz Wieczorek</pre>
<pre></pre>
<pre></pre>
<pre></pre>
<pre></pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2565</wp:post_id>
  <wp:post_date>2016-02-19 15:17:29</wp:post_date>
  <wp:post_date_gmt>2016-02-19 14:17:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>git-merge-squash</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="git"><![CDATA[git]]></category>
  <category domain="post_tag" nicename="git-merge"><![CDATA[git merge]]></category>
  <category domain="post_tag" nicename="git-merge-squash"><![CDATA[git merge squash]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[19966992865]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>git merge common ancestors</title>
  <link>https://bmwieczorek.wordpress.com/2016/02/19/git-merge-common-ancestors/</link>
  <pubDate>Fri, 19 Feb 2016 20:36:48 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2586</guid>
  <description/>
  <content:encoded><![CDATA[<pre>rm -rf git-merge
mkdir git-merge
cd git-merge
git init
<strong>echo "public class A {" &gt; file.txt</strong>
git add file.txt
git commit -m "master: initial create" file.txt
git checkout -b "feature-branch"
<strong>echo " public void myMethod(String master, String feature1) {" &gt;&gt; file.txt</strong>
git commit -a -m "feature-branch: updated 1x file.txt"
git checkout master
<strong>echo " public void myMethod(String master, String master2) {" &gt;&gt; file.txt</strong>
git commit -a -m "master: updated 1x file.txt"
git checkout feature-branch
<strong>git config --global merge.conflictstyle diff3</strong>
git rebase master
cat file.txt
<strong>public class A {</strong>
&lt;&lt;&lt;&lt;&lt;&lt;&lt; 67ab579b2ad9eee0ddab24552486fb0ad4856180
<strong> public void myMethod(String master, String master2) {</strong>
||||||| merged common ancestors #<strong>empty since myMethod were added/appended by later commits</strong>
=======
<strong> public void myMethod(String master, String feature1) {</strong>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; feature-branch: updated 1x file.txt</pre>
<pre>mkdir git-merge
cd git-merge
git init
<strong>echo "public class A {" &gt; file.txt</strong>
<strong>echo " public void myMethod(String master) {" &gt;&gt; file.txt</strong>
git add file.txt
git commit -m "master: initial create" file.txt
git checkout -b "feature-branch"
<strong>echo "public class A {" &gt; file.txt
echo " public void myMethod(String master, String feature1) {" &gt;&gt; file.txt</strong>
git commit -a -m "feature-branch: updated 1x file.txt"
git checkout master
<strong>echo "public class A {" &gt; file.txt
echo " public void myMethod(String master, String master2) {" &gt;&gt; file.txt</strong>
git commit -a -m "master: updated 1x file.txt"
git checkout feature-branch
<strong>git config --global merge.conflictstyle diff3</strong>
git merge master
cat file.txt
<strong>public class A {</strong>
&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
<strong> public void myMethod(String master, String feature1) {</strong>
||||||| merged common ancestors
<strong> public void myMethod(String master) { # ancestor line comes from master initial commits - parent for both of later commits</strong>
=======
<strong> public void myMethod(String master, String master2) {</strong>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; master</pre>
<pre><strong>NOTE: for resolving conflict find the easier change vs ancestor and apply it to the other branch that have more complicated changes, eventually delete all &lt;&lt;&lt; === &gt;&gt;&gt;</strong></pre>
<pre>the same would be for rebasing:
git rebase master
cat file.txt
public class A {
&lt;&lt;&lt;&lt;&lt;&lt;&lt; 0eb56663659a69ae3e04323520c9c90d8405ed21
<strong> public void myMethod(String master, String master2) {</strong>
||||||| merged common ancestors
<strong> public void myMethod(String master) {</strong>
=======
<strong> public void myMethod(String master, String feature1) {</strong>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; feature-branch: updated 1x file.txt


$ git diff HEAD..master
diff --git a/file.txt b/file.txt
index 3e27eb0..fd94a49 100644
--- a/file.txt
+++ b/file.txt
@@ -1,2 +1,2 @@
 public class A {
- public void myMethod(String master, String feature1) {
+ public void myMethod(String master, String master2) {

$ git diff master..HEAD
diff --git a/file.txt b/file.txt
index fd94a49..3e27eb0 100644
--- a/file.txt
+++ b/file.txt
@@ -1,2 +1,2 @@
 public class A {
- public void myMethod(String master, String master2) {
+ public void myMethod(String master, String feature1) {

$ git diff HEAD

$ git diff master
diff --git a/file.txt b/file.txt
index fd94a49..3e27eb0 100644
--- a/file.txt
+++ b/file.txt
@@ -1,2 +1,2 @@
 public class A {
- public void myMethod(String master, String master2) {
+ public void myMethod(String master, String feature1) {

$ git diff HEAD~1..HEAD
diff --git a/file.txt b/file.txt
index ab74287..3e27eb0 100644
--- a/file.txt
+++ b/file.txt
@@ -1,2 +1,2 @@
 public class A {
- public void myMethod(String master) {
+ public void myMethod(String master, String feature1) {

$ git diff master~1..master
diff --git a/file.txt b/file.txt
index ab74287..fd94a49 100644
--- a/file.txt
+++ b/file.txt
@@ -1,2 +1,2 @@
 public class A {
- public void myMethod(String master) {
+ public void myMethod(String master, String master2) {

</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2586</wp:post_id>
  <wp:post_date>2016-02-19 21:36:48</wp:post_date>
  <wp:post_date_gmt>2016-02-19 20:36:48</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>git-merge-common-ancestors</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="git"><![CDATA[git]]></category>
  <category domain="post_tag" nicename="git-common-ancestor"><![CDATA[git common ancestor]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[19977124204]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[git-merge-common-anestors]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>git advantages vs svn</title>
  <link>https://bmwieczorek.wordpress.com/2016/02/23/git-advantages-vs-svn/</link>
  <pubDate>Tue, 23 Feb 2016 15:38:40 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2604</guid>
  <description/>
  <content:encoded><![CDATA[Git advantages - in short: git not only offers svn functionality by offers much more than that:
<ul>
	<li>LOCAL ACCESS TO ALL BRANCHES AND HISTORY - git clone downloads full repository (including history and all branches) so viewing history and changing branches does not require internet access and it much faster than e.g. svn where it need to talk to online repo to get history or switch branches, on the other side in git it is just about moving pointers. If origin repo gets corrupted than any user repo has all the data (assuming it was recently synchronized)</li>
	<li>ABILITY TO COMMIT LOCALLY ANYTIME - every time you want to save your work you can commit even if you do not have access to the origin repo</li>
	<li>NO PERMISSION ISSUES FOR CREATING BRANCHES - with svn you need to have special permission to create branches and it requires svn to copy many files what takes time. On the other hand you can always create your local branch and it is very fast (as creating 40B file)</li>
	<li>FINE-TUNING COMMITS AND HISTORY - you can always change your last commit's message (git amend) or the committed file set, moreover you reorder, squash or remove commits with interactive rebase (git rebase -i)</li>
	<li>GIT is about applying changes whereas SVN is about file snapshots for each revision</li>
</ul>
Other differences:
SVN: has only working area and online repo committed area (shared with all)
GIT: has working area (contains local working changes), stage area (tracked changes added to the index that are candidates for committing), locally committed area (not yet pushed to public) and finally changes pushed to online repo for sharing with other committers

GIT:
1. local working changes area -- git add --&gt; added file(s) to the stage area to track these changes in index
2. stage area -- git checkout --&gt; override local working area with tracked version of the files
3. stage area -- git commit --&gt; committed area to add the changes to the history
4. committed area -- git reset HEAD--&gt; overwrite stage area with changes from the commit pointed by HEAD (can be without HEAD  defaulting to HEAD, explicit commit hash or HEAD~1 for the previous commit)
5. committed ares -- git reset -- hard --&gt; overrides stage and local working area with commit changes
6. committed area -- git push --&gt; push the changes to online public shared repo
7. online public shared repo -- git fetch origin--&gt; update origin branches e.g. origin/master and origin/develop with latest public repo changes (but does not change the local working area nor stage area)
8. online public shared repo -- git pull --&gt; update origin references with public repo changes AND also merges these changes with stage area and local working area

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2604</wp:post_id>
  <wp:post_date>2016-02-23 16:38:40</wp:post_date>
  <wp:post_date_gmt>2016-02-23 15:38:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>git-advantages-vs-svn</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="git"><![CDATA[git]]></category>
  <category domain="post_tag" nicename="git-checkout"><![CDATA[git checkout]]></category>
  <category domain="post_tag" nicename="git-reset"><![CDATA[git reset]]></category>
  <category domain="post_tag" nicename="git-vs-svn"><![CDATA[git vs svn]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[20096752568]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>My git rebase workflow for team</title>
  <link>https://bmwieczorek.wordpress.com/2016/02/23/my-git-rebase-workflow-for-teamit/</link>
  <pubDate>Tue, 23 Feb 2016 22:07:35 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2685</guid>
  <description/>
  <content:encoded><![CDATA[Here are the branches for most complicated scenario where multiple users work concurrently on public feature-XX branch:
<pre>1) long running public 'master' contains production code and each commit is a new release
2) long running public 'develop' containing work that will target for the upcoming release
3) public 'feature-XX' branch for work that a couple of developers work on to be included to develop branch at some point
4) local feature-XX tracking branch knows where its corresponding remote origin/feature-XX is, you can use git fetch/pull or push command without the need to specify every time origin and feature-XX)
5) local my-feature-XX branch for local commits with history commits modifications via rebase</pre>
Least complicated scenario (assuming that local master is a tracking branch of origin/master and my-feature -XX local branch will be eventually merged onto master). Here are the branches for such scenario:
<pre> 1) master
 2) my-feature-XX</pre>
Here we will talk about the first most complicated case with the rules of thumbs:
<ol>
	<li>you should newer work directly on master (nor develop branch) so that fetch or pull will not cause any conflicts</li>
	<li>work most of the time on your local my-feature-XX branch, systematically fetch changes from upstream origin/my-feature and rebase frequently my-feature-XX onto latest origin/my-feature or alternatively pull feature-XX tracking branch and rebase my-feature-XX onto that feature-XX</li>
	<li>rebased local my-feature-XX in the next step can be merged to tracking feature-XX branch</li>
	<li>for short-lived branch changes such as my-feature-XX use fast-forward merge or alternatively 'git merge --squash my-feature-XX' (both causing commit history graph to be visualized as one line)</li>
	<li>for long-lived branches like feature-XX and develop use no fast-forward option for visibility purposes (to create an explicit merge commit joining two separate branches in history graph)</li>
	<li>as soon as merged changes in feature-XX branch are pushed to origin/feature-XX then you should not re-write feature-XX history via rebase what can cause breakage for other users</li>
	<li>if feature-XX is completed and ready to be integrated with public develop branch then if you want to rewrite history you need to create a copy of feature-XX, rebase the copy  interactively and merge that copy to develop branch</li>
	<li>in the last step after you rebased your changes onto public branch e.g. develop, you can create PULL REQUEST to send your changes for review INTEGRATION MANAGER. Such coordinator (only one person for authoritative repo) will pull changes from your public branch, review them and will merge them to the destination public branch.</li>
</ol>
Note that workflow is different from purely merge workflow using git commit, git pull and git push.

<strong>Git merge vs rebase</strong>

Note that every time you want to bring upstream changes to your local branch and there are conflicts then you will need to create an additional merge commit when 'git checkout my-feature-XX &amp;&amp; git merge origin/feature-XX', resolve conflict and required to 'git add &amp;&amp; git commit -m "merged changed from master"'. On the other hand, if you do 'git rebase origin/feature-XX' there will not be such additional commit (after conflict resolution do 'git add &amp;&amp; git --rebase continue'). <strong>So in short rebasing avoid keeps history clean avoids merge commits. </strong>However, <strong>do not rebase after you pushed to public repo</strong>. If you push your code to public branch make sure no-body pulls from that branch otherwise your subsequent rebase followed by push (-f as forced) would cause breakage on others side.

Note alternatively, instead of introducing tracking feature-XX branch and my-feature-XX you could create only tracking  feature-XX, develop there and use 'pull --rebase' when getting upstream data. Then push the data.

Here are the command for the git rebase workflow for teams following principle: rebase local branch changes and merge these rebased local commit changes to public branch:

<strong>Commands:</strong>
<pre>rm -rf git-rebase-workflow-for-team
mkdir git-rebase-workflow-for-team
cd git-rebase-workflow-for-team
git clone https://github.com/bmwieczorek/git-rebase-workflow-for-team.git repo-initial-setup
cd repo-initial-setup
echo "master: initial create project structure" &gt; file.txt
git add file.txt
git commit -m "master: initial create project structure" file.txt
git push origin master # push changes to remote repo and create origin/master and local master
git checkout -b develop # create local develop branch
git push origin develop
git checkout -b feature-XX
git push origin feature-XX
cd ..</pre>
<pre>#u1
git clone https://github.com/bmwieczorek/git-rebase-workflow-for-team.git u1
cd u1
<strong>git checkout --track origin/feature-XX #create local feature-XX branch tracking remote origin/feature-XX, git pull and fetch do not require specifying feature-XX</strong>
git checkout -b my-feature-XX
echo "feature-XX: u1 impl" &gt;&gt; file.txt
git commit -am "feature-XX: u1 impl XX" #always commit before rebase
<strong>git fetch origin #update origin/feature-XX
git rebase origin/feature-XX #rebase is great for local branches to clean up history and put our work on top of lastest public version, resolve conflicts if any, here none
</strong>#perform local peer review</pre>
<pre>#u2
cd ..
git clone https://github.com/bmwieczorek/git-rebase-workflow-for-team.git u2
cd u2
<strong>git checkout --track origin/feature-XX
</strong>git checkout -b my-feature-XX
echo "feature-XX: u2 impl" &gt;&gt; file.txt
git commit -am "feature-XX: u2 impl XX"
echo "feature-XX: u2 fix for impl" &gt;&gt; file.txt
git commit -am "feature-XX: u2 fix for impl XX" 
<strong>git checkout feature-XX
git pull # no conflicts as no local changes in feature-XX
git checkout my-feature-XX
git rebase feature-XX #alternative to git rebase origin/feature-XX but requiring first to pull in feature-XX</strong>
git checkout feature-XX
<strong>git merge --squash my-feature-XX # alternative to squash changes as a diff and update index instead of git rebase with squash
git commit -am "feature-XX: u2 finished impl XX" #required to commit changes from merge --squash</strong>
git push # not needed to add origin feature-XX for tracking branches
cd ..</pre>
<pre>#u1
cd ../u1
git checkout my-feature-XX
echo "feature-XX: u1 remove swearwords after review" &gt;&gt; file.txt
git commit -am "feature-XX: u1 remove swearwords XX"
echo "feature-XX: u1 correct identation after review" &gt;&gt; file.txt
git commit -am "feature-XX: u1 correct identation XX"
<strong>git fetch origin # load changes from remote to orgin/feature-XX
git rebase origin/feature-XX #first rebase onto public changes then
git rebase -i origin/feature-XX #or alternatively
#git rebase -i HEAD~2 # squash corrections into one correction commit after review, update first message to replace pick with squash for indentation commit; update second message to include only 'feature-XX: u1 correct after code review'
git checkout feature-XX
git pull #there should not be any conflicts as development was in my-feature-XX
git merge my-feature-XX # use fast-forward for short-lived feature branches</strong>
git push</pre>
<pre><strong>#create pull request to merge feature-XX to develop (using no-ff)
# or AS INTEGRATION MANAGER merge manually using --no-ff</strong>
<strong>git checkout develop
git merge --no-ff feature-XX #accept commit message without changes</strong>
git push
git log --decorate --abbrev-commit
git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
git branch -d my-feature-XX # delete local my-feature-XX branch
git push origin :feature-XX # delete remote feature-XX branch</pre>
<pre><strong>Results:</strong></pre>
<pre>$ mkdir git-rebase-workflow-for-team
$ cd git-rebase-workflow-for-team
$ git clone https://github.com/bmwieczorek/git-rebase-workflow-for-team.git repo-initial-setup
Cloning into 'repo-initial-setup'...
warning: You appear to have cloned an empty repository.
Checking connectivity... done.
$ cd repo-initial-setup/
$ echo "master: initial create project structure" &gt; file.txt
$ git add file.txt
$ git commit -m "master: initial create project structure" file.txt
[master (root-commit) bb87fa5] master: initial create project structure
 1 file changed, 1 insertion(+)
 create mode 100644 file.txt
$ git push origin master # push changes to remote repo and create origin/master and local master
Counting objects: 3, done.
Writing objects: 100% (3/3), 279 bytes | 0 bytes/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://bmwieczorek@github.com/bmwieczorek/git-rebase-workflow-for-team.git
 * [new branch] master -&gt; master
$ git branch -a
* master
 remotes/origin/master
$ git checkout -b develop # create local develop branch
Switched to a new branch 'develop'
$ git branch -a
* develop
 master
 remotes/origin/master
$ git push origin develop
Total 0 (delta 0), reused 0 (delta 0)
To https://bmwieczorek@github.com/bmwieczorek/git-rebase-workflow-for-team.git
 * [new branch] develop -&gt; develop
$ git branch -a
* develop
 master
 remotes/origin/develop
 remotes/origin/master
$ git checkout -b feature-XX
Switched to a new branch 'feature-XX'
$ git push origin feature-XX
Total 0 (delta 0), reused 0 (delta 0)
To https://bmwieczorek@github.com/bmwieczorek/git-rebase-workflow-for-team.git
 * [new branch] feature-XX -&gt; feature-XX
$ git branch -a
 develop
* feature-XX
 master
 remotes/origin/develop
 remotes/origin/feature-XX
 remotes/origin/master
$cd ..</pre>
<pre>#u1
$ git clone https://github.com/bmwieczorek/git-rebase-workflow-for-team.git u1
Cloning into 'u1'...
remote: Counting objects: 3, done.
remote: Total 3 (delta 0), reused 3 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), done.
Checking connectivity... done.
$ cd u1
$ git branch -a
* master
 remotes/origin/HEAD -&gt; origin/master
 remotes/origin/develop
 remotes/origin/feature-XX
 remotes/origin/master
$ git checkout --track origin/feature-XX #create local feature-XX branch tracking remote origin/feature-XX, git pull and fetch do not require specifying feature-XX
Branch feature-XX set up to track remote branch feature-XX from origin.
Switched to a new branch 'feature-XX'
SG0212148@H8470305328627 /cygdrive/c/dev/git-rebase-workflow-for-team/repo-initial-setup/u1
$ git branch -a
* feature-XX
 master
 remotes/origin/HEAD -&gt; origin/master
 remotes/origin/develop
 remotes/origin/feature-XX
 remotes/origin/master
$ git checkout -b my-feature-XX
Switched to a new branch 'my-feature-XX'
$ git branch -a
 feature-XX
 master
* my-feature-XX
 remotes/origin/HEAD -&gt; origin/master
 remotes/origin/develop
 remotes/origin/feature-XX
 remotes/origin/master
$ echo "feature-XX: u1 impl" &gt;&gt; file.txt
$ git commit -am "feature-XX: u1 impl XX" #always commit before rebase
[my-feature-XX 751b4b3] feature-XX: u1 impl XX
 1 file changed, 1 insertion(+)
$ git fetch origin #update origin/feature-XX
$ git rebase origin/feature-XX #always rebase onto lastest public version, resolve conflicts if any, here none
Current branch my-feature-XX is up to date.
$cd ..</pre>
<pre>#u2
$ git clone https://github.com/bmwieczorek/git-rebase-workflow-for-team.git u2
Cloning into 'u2'...
remote: Counting objects: 3, done.
remote: Total 3 (delta 0), reused 3 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), done.
Checking connectivity... done.
$ cd u2/
$ git checkout --track origin/feature-XX
Branch feature-XX set up to track remote branch feature-XX from origin.
Switched to a new branch 'feature-XX'
$ git checkout -b my-feature-XX
Switched to a new branch 'my-feature-XX'
$ echo "feature-XX: u2 impl" &gt;&gt; file.txt
$ git commit -am "feature-XX: u2 impl XX"
[my-feature-XX 26fe171] feature-XX: u2 impl XX
 1 file changed, 1 insertion(+)
$ echo "feature-XX: u2 fix for impl" &gt;&gt; file.txt
$ git commit -am "feature-XX: u2 fix for impl XX"
[my-feature-XX d5543da] feature-XX: u2 fix for impl XX
 1 file changed, 1 insertion(+)
$ git checkout feature-XX
Switched to branch 'feature-XX'
Your branch is up-to-date with 'origin/feature-XX'.
$ git pull # no conflicts as no local changes in feature-XX
Already up-to-date.
$ git checkout my-feature-XX
Switched to branch 'my-feature-XX'
$ git rebase feature-XX
Current branch my-feature-XX is up to date.
$ git checkout feature-XX
Switched to branch 'feature-XX'
Your branch is up-to-date with 'origin/feature-XX'.
$ git merge --squash my-feature-XX # squash changes as a diff and update index
Updating bb87fa5..d5543da
Fast-forward
Squash commit -- not updating HEAD
 file.txt | 2 ++
 1 file changed, 2 insertions(+)
$ git status
On branch feature-XX
Your branch is up-to-date with 'origin/feature-XX'.
Changes to be committed:
 (use "git reset HEAD &lt;file&gt;..." to unstage)
 modified: file.txt
$ git commit -am "feature-XX: u2 finished impl XX"
[feature-XX 97fc417] feature-XX: u2 finished impl XX
 1 file changed, 2 insertions(+)
$ git log --decorate --abbrev-commit
commit 97fc417 (HEAD -&gt; feature-XX)
Author: Bartosz Wieczorek &lt;bmwieczorek@gmail.com&gt;
Date: Tue Feb 23 22:29:31 2016 +0100
 feature-XX: u2 finished impl XX
commit bb87fa5 (origin/master, origin/feature-XX, origin/develop, origin/HEAD, master)
Date: Tue Feb 23 22:06:50 2016 +0100
 master: initial create project structure
$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
* 97fc417 - Tue, 23 Feb 2016 22:29:31 +0100 (21 seconds ago) (HEAD -&gt; feature-XX)
| feature-XX: u2 finished impl XX - Bartosz Wieczorek
| * d5543da - Tue, 23 Feb 2016 22:28:34 +0100 (78 seconds ago) (my-feature-XX)
| | feature-XX: u2 fix for impl XX - Bartosz Wieczorek
| * 26fe171 - Tue, 23 Feb 2016 22:28:27 +0100 (85 seconds ago)
|/ feature-XX: u2 impl XX - Bartosz Wieczorek
* bb87fa5 - Tue, 23 Feb 2016 22:06:50 +0100 (23 minutes ago) (origin/master, origin/feature-XX, origin/develop, origin/HEAD, master)
 master: initial create project structure - Bartosz Wieczorek
$ git push # not needed to add origin feature-XX for tracking branches
Counting objects: 3, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 332 bytes | 0 bytes/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://bmwieczorek@github.com/bmwieczorek/git-rebase-workflow-for-team.git
 bb87fa5..97fc417 feature-XX -&gt; feature-XX
$cd ..</pre>
<pre>#u1
$ cd u1/
$ git checkout my-feature-XX
Already on 'my-feature-XX'
$ echo "feature-XX: u1 remove swearwords after review" &gt;&gt; file.txt
$ git commit -am "feature-XX: u1 remove swearwords XX"
[my-feature-XX e0f2582] feature-XX: u1 remove swearwords XX
 1 file changed, 1 insertion(+)
$ echo "feature-XX: u1 correct identation after review" &gt;&gt; file.txt
$ git commit -am "feature-XX: u1 correct identation XX"
[my-feature-XX 36cc745] feature-XX: u1 correct identation XX
 1 file changed, 1 insertion(+)
$ git fetch origin # load changes from remote to orgin/feature-XX
remote: Counting objects: 3, done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 3 (delta 0), reused 3 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), done.
From https://github.com/bmwieczorek/git-rebase-workflow-for-team
 bb87fa5..97fc417 feature-XX -&gt; origin/feature-XX
$ git rebase origin/feature-XX #first rebase onto public changes then
First, rewinding head to replay your work on top of it...
Applying: feature-XX: u1 impl XX
Using index info to reconstruct a base tree...
M file.txt
Falling back to patching base and 3-way merge...
Auto-merging file.txt
CONFLICT (content): Merge conflict in file.txt
error: Failed to merge in the changes.
Patch failed at 0001 feature-XX: u1 impl XX
The copy of the patch that failed is found in: .git/rebase-apply/patch
When you have resolved this problem, run "git rebase --continue".
If you prefer to skip this patch, run "git rebase --skip" instead.
To check out the original branch and stop rebasing, run "git rebase --abort".
### 1ST MESSAGE ###
pick 9847bee feature-XX: u1 remove swearwords XX
pick 46cd035 feature-XX: u1 correct identation XX
# Rebase be6f577..46cd035 onto be6f577 (2 command(s))
--&gt;
pick 9847bee feature-XX: u1 remove swearwords XX
squash 46cd035 feature-XX: u1 correct identation XX
### 1ST MESSAGE ###
# This is a combination of 2 commits.
# The first commit's message is:
feature-XX: u1 remove swearwords XX
# This is the 2nd commit message:
feature-XX: u1 correct identation XX
# interactive rebase in progress; onto be6f577
# Last commands done (2 commands done):
# pick 9847bee feature-XX: u1 remove swearwords XX
# squash 46cd035 feature-XX: u1 correct identation XX
# You are currently editing a commit while rebasing branch 'my-feature-XX' on 'be6f577'.
--&gt; feature-XX: u1 correct after code review
$ cat file.txt
master: initial create project structure
&lt;&lt;&lt;&lt;&lt;&lt;&lt; 97fc41777dcba3c342a6d9a932790c20b6c7fe36
feature-XX: u2 impl
feature-XX: u2 fix for impl
||||||| merged common ancestors
=======
feature-XX: u1 impl
&gt;&gt;&gt;&gt;&gt;&gt;&gt; feature-XX: u1 impl XX
$ vim file.txt
$ cat file.txt
master: initial create project structure
feature-XX: u2 impl
feature-XX: u2 fix for impl
feature-XX: u1 impl
$ git add file.txt
$ git rebase --continue
Applying: feature-XX: u1 impl XX
Applying: feature-XX: u1 remove swearwords XX
Using index info to reconstruct a base tree...
M file.txt
Falling back to patching base and 3-way merge...
Auto-merging file.txt
Applying: feature-XX: u1 correct identation XX
Using index info to reconstruct a base tree...
M file.txt
Falling back to patching base and 3-way merge...
Auto-merging file.txt
$ cat file.txt
master: initial create project structure
feature-XX: u2 impl
feature-XX: u2 fix for impl
feature-XX: u1 impl
feature-XX: u1 remove swearwords after review
feature-XX: u1 correct identation after review
$ git log --decorate --abbrev-commit
commit 46cd035 (HEAD -&gt; my-feature-XX)
Date: Tue Feb 23 22:34:12 2016 +0100
 feature-XX: u1 correct identation XX
commit 9847bee
Date: Tue Feb 23 22:34:04 2016 +0100
 feature-XX: u1 remove swearwords XX
commit be6f577
Date: Tue Feb 23 22:23:23 2016 +0100
 feature-XX: u1 impl XX
commit 97fc417 (origin/feature-XX)
Date: Tue Feb 23 22:29:31 2016 +0100
 feature-XX: u2 finished impl XX
commit bb87fa5 (origin/master, origin/develop, origin/HEAD, master, feature-XX)
Date: Tue Feb 23 22:06:50 2016 +0100
 master: initial create project structure
$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
* 46cd035 - Tue, 23 Feb 2016 22:34:12 +0100 (12 minutes ago) (HEAD -&gt; my-feature-XX)
| feature-XX: u1 correct identation XX - Bartosz Wieczorek
* 9847bee - Tue, 23 Feb 2016 22:34:04 +0100 (12 minutes ago)
| feature-XX: u1 remove swearwords XX - Bartosz Wieczorek
* be6f577 - Tue, 23 Feb 2016 22:23:23 +0100 (22 minutes ago)
| feature-XX: u1 impl XX - Bartosz Wieczorek
* 97fc417 - Tue, 23 Feb 2016 22:29:31 +0100 (16 minutes ago) (origin/feature-XX)
| feature-XX: u2 finished impl XX - Bartosz Wieczorek
* bb87fa5 - Tue, 23 Feb 2016 22:06:50 +0100 (39 minutes ago) (origin/master, origin/develop, origin/HEAD, master, feature-XX)
 master: initial create project structure - Bartosz Wieczorek
$ git rebase -i HEAD~2 # squash corrections into one correction commit after review
[detached HEAD 4e64156] feature-XX: u1 correct after code review
 Date: Tue Feb 23 22:34:04 2016 +0100
 1 file changed, 2 insertions(+)
Successfully rebased and updated refs/heads/my-feature-XX.
$ git log --decorate --abbrev-commit
commit 4e64156 (HEAD -&gt; my-feature-XX)
Date: Tue Feb 23 22:34:04 2016 +0100
 feature-XX: u1 correct after code review
commit be6f577
Date: Tue Feb 23 22:23:23 2016 +0100
 feature-XX: u1 impl XX
commit 97fc417 (origin/feature-XX)
Date: Tue Feb 23 22:29:31 2016 +0100
 feature-XX: u2 finished impl XX
commit bb87fa5 (origin/master, origin/develop, origin/HEAD, master, feature-XX)
Date: Tue Feb 23 22:06:50 2016 +0100
 master: initial create project structure
$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
* 4e64156 - Tue, 23 Feb 2016 22:34:04 +0100 (17 minutes ago) (HEAD -&gt; my-feature-XX)
| feature-XX: u1 correct after code review - Bartosz Wieczorek
* be6f577 - Tue, 23 Feb 2016 22:23:23 +0100 (28 minutes ago)
| feature-XX: u1 impl XX - Bartosz Wieczorek
* 97fc417 - Tue, 23 Feb 2016 22:29:31 +0100 (22 minutes ago) (origin/feature-XX)
| feature-XX: u2 finished impl XX - Bartosz Wieczorek
* bb87fa5 - Tue, 23 Feb 2016 22:06:50 +0100 (44 minutes ago) (origin/master, origin/develop, origin/HEAD, master, feature-XX)
 master: initial create project structure - Bartosz Wieczorek
$ git checkout feature-XX
Switched to branch 'feature-XX'
Your branch is behind 'origin/feature-XX' by 1 commit, and can be fast-forwarded.
 (use "git pull" to update your local branch)
$ git pull # there should not be any conflicts as local commits were only in local my-feature-XX
$ git merge my-feature-XX # use fast-forward for short lived feature branches
Updating bb87fa5..4e64156
Fast-forward
 file.txt | 5 +++++
 1 file changed, 5 insertions(+)
$ git push
Counting objects: 6, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (4/4), done.
Writing objects: 100% (6/6), 619 bytes | 0 bytes/s, done.
Total 6 (delta 1), reused 0 (delta 0)
To https://bmwieczorek@github.com/bmwieczorek/git-rebase-workflow-for-team.git
 97fc417..4e64156 feature-XX -&gt; feature-XX</pre>
<pre>$ git checkout develop
Branch develop set up to track remote branch develop from origin.
Switched to a new branch 'develop'
$ git merge --no-ff feature-XX
Merge made by the 'recursive' strategy.
 file.txt | 5 +++++
 1 file changed, 5 insertions(+)
### MESSAGE ###
Merge branch 'feature-XX' into develop 
$ git push
Counting objects: 1, done.
Writing objects: 100% (1/1), 242 bytes | 0 bytes/s, done.
Total 1 (delta 0), reused 0 (delta 0)
To https://bmwieczorek@github.com/bmwieczorek/git-rebase-workflow-for-team.git
 bb87fa5..941958b develop -&gt; develop
$ git log --decorate --abbrev-commit
commit 941958b (HEAD -&gt; develop, origin/develop)
Merge: bb87fa5 4e64156
Date: Tue Feb 23 22:52:17 2016 +0100
 Merge branch 'feature-XX' into develop
commit 4e64156 (origin/feature-XX, my-feature-XX, feature-XX)
Date: Tue Feb 23 22:34:04 2016 +0100
 feature-XX: u1 correct after code review
commit be6f577
Date: Tue Feb 23 22:23:23 2016 +0100
 feature-XX: u1 impl XX
commit 97fc417
Date: Tue Feb 23 22:29:31 2016 +0100
 feature-XX: u2 finished impl XX
commit bb87fa5 (origin/master, origin/HEAD, master)
Date: Tue Feb 23 22:06:50 2016 +0100
 master: initial create project structure
$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
* 941958b - Tue, 23 Feb 2016 22:52:17 +0100 (9 minutes ago) (HEAD -&gt; develop, origin/develop)
|\ Merge branch 'feature-XX' into develop - Bartosz Wieczorek
| * 4e64156 - Tue, 23 Feb 2016 22:34:04 +0100 (28 minutes ago) (origin/feature-XX, my-feature-XX, feature-XX)
| | feature-XX: u1 correct after code review - Bartosz Wieczorek
| * be6f577 - Tue, 23 Feb 2016 22:23:23 +0100 (38 minutes ago)
| | feature-XX: u1 impl XX - Bartosz Wieczorek
| * 97fc417 - Tue, 23 Feb 2016 22:29:31 +0100 (32 minutes ago)
|/ feature-XX: u2 finished impl XX - Bartosz Wieczorek
* bb87fa5 - Tue, 23 Feb 2016 22:06:50 +0100 (55 minutes ago) (origin/master, origin/HEAD, master)
 master: initial create project structure - Bartosz Wieczorek


<strong>Post inspired mainly by http://randyfay.com/content/rebase-workflow-git</strong></pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2685</wp:post_id>
  <wp:post_date>2016-02-23 23:07:35</wp:post_date>
  <wp:post_date_gmt>2016-02-23 22:07:35</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>my-git-rebase-workflow-for-teamit</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="git"><![CDATA[git]]></category>
  <category domain="post_tag" nicename="git-rebase-workflow-for-team"><![CDATA[git rebase workflow for team]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[20107907926]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Git rebase vs merge for integrating changes from another branch or upstream</title>
  <link>https://bmwieczorek.wordpress.com/2016/02/24/git-rebase-vs-merge-for-integrating-changes-from-another-branch-or-upstream/</link>
  <pubDate>Wed, 24 Feb 2016 13:36:25 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2731</guid>
  <description/>
  <content:encoded><![CDATA[Git merge will require  to create new commit if there is a conflict. Git rebase will not create new commit. Git merge will show two lines combined in the merge commit (having two parents - from both branches) in history graph. Git rebase will show straight line with local commits on top of the other branch work.
<pre>mkdir git-rebase-vs-merge
cd git-rebase-vs-merge
git init
echo "master: created" &gt; file.txt
git add file.txt
git commit -am "master: created"
git checkout -b feature-XX
echo "feature-XX: append 1x" &gt;&gt; file.txt
git commit -am "feature-XX: append 1x"
git checkout master
echo "master: append 1x" &gt;&gt; file.txt
git commit -am "master: append 1x"
git checkout feature-XX
echo "feature-XX: append 2x" &gt;&gt; file.txt
git commit -am "feature-XX: append 2x"
$ git log --decorate --abbrev-commit
commit bee2148 (HEAD -&gt; feature-XX)
Date: Wed Feb 24 14:15:34 2016 +0100
 feature-XX: append 2x
commit 3314c4e
Date: Wed Feb 24 14:15:08 2016 +0100
 feature-XX: append 1x
commit 8829040
Date: Wed Feb 24 14:14:49 2016 +0100
 master: created
$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
* bee2148 - Wed, 24 Feb 2016 14:15:34 +0100 (7 minutes ago) (HEAD -&gt; feature-XX)
| feature-XX: append 2x - Bartosz Wieczorek
* 3314c4e - Wed, 24 Feb 2016 14:15:08 +0100 (7 minutes ago)
| feature-XX: append 1x - Bartosz Wieczorek
| * 66aaede - Wed, 24 Feb 2016 14:15:23 +0100 (7 minutes ago) (master)
|/ master: append 1x - Bartosz Wieczorek
* 8829040 - Wed, 24 Feb 2016 14:14:49 +0100 (8 minutes ago)
 master: created - Bartosz Wieczorek$ cp -r ../git-rebase-vs-merge ../git-rebase-vs-merge-MERGE/
$ cp -r ../git-rebase-vs-merge ../git-rebase-vs-merge-REBASE/</pre>
&nbsp;
<pre>$ cd ../git-rebase-vs-merge-MERGE/
<strong>$ git merge master</strong>
Auto-merging file.txt
CONFLICT (content): Merge conflict in file.txt
Automatic merge failed; fix conflicts and then commit the result.
$ cat file.txt
master: created
&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
feature-XX: append 1x
feature-XX: append 2x
||||||| merged common ancestors
=======
master: append 1x
&gt;&gt;&gt;&gt;&gt;&gt;&gt; master
$ vim file.txt
$ cat file.txt
master: created
feature-XX: append 1x
feature-XX: append 2x
master: append 1x
$ git status
On branch feature-XX
You have unmerged paths.
 (fix conflicts and run "git commit")
Unmerged paths:
 (use "git add &lt;file&gt;..." to mark resolution)
 both modified: file.txt
no changes added to commit (use "git add" and/or "git commit -a")
<strong>$ git add file.txt</strong>
<strong>$ git commit -am "feature-XX: merged changes from master to feature-XX branch"</strong>
[feature-XX 5373f86] feature-XX: merged changes from master to feature-XX branch
$ git log --decorate --abbrev-commit
commit 5373f86 (HEAD -&gt; feature-XX)
Merge: bee2148 66aaede
Date: Wed Feb 24 14:19:03 2016 +0100
 feature-XX: merged changes from master to feature-XX branch
commit bee2148
Date: Wed Feb 24 14:15:34 2016 +0100
 feature-XX: append 2x
commit 66aaede (master)
Date: Wed Feb 24 14:15:23 2016 +0100
 master: append 1x
commit 3314c4e
Date: Wed Feb 24 14:15:08 2016 +0100
 feature-XX: append 1x
commit 8829040
Date: Wed Feb 24 14:14:49 2016 +0100
 master: created
$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
<strong>* 5373f86 - Wed, 24 Feb 2016 14:19:03 +0100 (10 seconds ago) (HEAD -&gt; feature-XX)</strong>
<strong>|\ feature-XX: merged changes from master to feature-XX branch - Bartosz Wieczorek</strong>
| * 66aaede - Wed, 24 Feb 2016 14:15:23 +0100 (4 minutes ago) (master)
| | master: append 1x - Bartosz Wieczorek
* | bee2148 - Wed, 24 Feb 2016 14:15:34 +0100 (4 minutes ago)
| | feature-XX: append 2x - Bartosz Wieczorek
* | 3314c4e - Wed, 24 Feb 2016 14:15:08 +0100 (4 minutes ago)
|/ feature-XX: append 1x - Bartosz Wieczorek
* 8829040 - Wed, 24 Feb 2016 14:14:49 +0100 (4 minutes ago)
 master: created - Bartosz Wieczorek</pre>
<pre>$ cd ../git-rebase-vs-merge-REBASE/
<strong>$ git rebase master</strong>
First, rewinding head to replay your work on top of it...
Applying: feature-XX: append 1x
Using index info to reconstruct a base tree...
M file.txt
Falling back to patching base and 3-way merge...
Auto-merging file.txt
CONFLICT (content): Merge conflict in file.txt
error: Failed to merge in the changes.
Patch failed at 0001 feature-XX: append 1x
The copy of the patch that failed is found in: .git/rebase-apply/patch
When you have resolved this problem, run "git rebase --continue".
If you prefer to skip this patch, run "git rebase --skip" instead.
To check out the original branch and stop rebasing, run "git rebase --abort".
$ cat file.txt
master: created
&lt;&lt;&lt;&lt;&lt;&lt;&lt; 66aaede288e55d4831c82ae3549f6f67e166b742
master: append 1x
||||||| merged common ancestors
=======
feature-XX: append 1x
&gt;&gt;&gt;&gt;&gt;&gt;&gt; feature-XX: append 1x
$ vim file.txt
$ cat file.txt
master: created
master: append 1x
feature-XX: append 1x
<strong>$ git add file.txt</strong>
<strong>$ git rebase --continue</strong>
Applying: feature-XX: append 1x
Applying: feature-XX: append 2x
Using index info to reconstruct a base tree...
M file.txt
Falling back to patching base and 3-way merge...
Auto-merging file.txt
$ git status
On branch feature-XX
nothing to commit, working directory clean
$ git log --decorate --abbrev-commit
commit cbe6866 (HEAD -&gt; feature-XX)
Date: Wed Feb 24 14:15:34 2016 +0100
 feature-XX: append 2x
commit 635f3d3
Date: Wed Feb 24 14:15:08 2016 +0100
 feature-XX: append 1x
commit 66aaede (master)
Date: Wed Feb 24 14:15:23 2016 +0100
 master: append 1x
commit 8829040
Date: Wed Feb 24 14:14:49 2016 +0100
 master: created
$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
<strong>* cbe6866 - Wed, 24 Feb 2016 14:15:34 +0100 (8 minutes ago) (HEAD -&gt; feature-XX)</strong>
<strong>| feature-XX: append 2x - Bartosz Wieczorek</strong>
<strong>* 635f3d3 - Wed, 24 Feb 2016 14:15:08 +0100 (8 minutes ago)</strong>
<strong>| feature-XX: append 1x - Bartosz Wieczorek</strong>
<strong>* 66aaede - Wed, 24 Feb 2016 14:15:23 +0100 (8 minutes ago) (master)</strong>
<strong>| master: append 1x - Bartosz Wieczorek</strong>
<strong>* 8829040 - Wed, 24 Feb 2016 14:14:49 +0100 (8 minutes ago)</strong>
<strong> master: created - Bartosz Wieczorek</strong></pre>
&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2731</wp:post_id>
  <wp:post_date>2016-02-24 14:36:25</wp:post_date>
  <wp:post_date_gmt>2016-02-24 13:36:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>git-rebase-vs-merge-for-integrating-changes-from-another-branch-or-upstream</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="git"><![CDATA[git]]></category>
  <category domain="post_tag" nicename="git-rebase-vs-merge"><![CDATA[git rebase vs merge]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[20128215952]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Git (unintentional) merge commits</title>
  <link>https://bmwieczorek.wordpress.com/2016/02/24/git-unintentional-merge-commits/</link>
  <pubDate>Wed, 24 Feb 2016 16:06:47 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2753</guid>
  <description/>
  <content:encoded><![CDATA[<strong>Note: example shows merging NON-CONFLICTING changes from another branch resulting in a merge commit. </strong>Note the changes done in master in file.txt were <strong>automatically merged</strong> to feature branch what could not have been noticed by a developer as there was no conflict. There is a risk that a developer will not include this changes in feature branch (as they were not his changes) what can cause problems.
<pre>mkdir git-merge
cd git-merge
git init
echo "master: created" &gt; file.txt
git add file.txt
git commit -am "master: created"
git checkout -b feature-XX
echo "feature-XX: append 1x" &gt;&gt; feature.txt
git add feature.txt
git commit -am "feature-XX: append 1x"
git checkout master
echo "master: append 1x" &gt;&gt; file.txt
git commit -am "master: append 1x"
git checkout feature-XX
echo "feature-XX: append 2x" &gt;&gt; feature.txt
git commit -am "feature-XX: append 2x"
git log --decorate --abbrev-commit
git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all</pre>
<pre><strong>$ git merge master # creates unintentional merge commit even though there weren't any conflicts</strong>
<strong>### MESSAGE ###</strong>
<strong>Merge branch 'master' into feature-XX

</strong>Merge made by the 'recursive' strategy.
file.txt | 1 +
1 file changed, 1 insertion(+)
$ git status
On branch feature-XX
nothing to commit, working directory clean
$ git log --decorate --abbrev-commit
<strong>commit 123dc18 (HEAD -&gt; feature-XX)</strong>
<strong>Merge: 5775ac0 c119837</strong>
<strong>Date: Wed Feb 24 16:51:36 2016 +0100</strong>
<strong>Merge branch 'master' into feature-XX</strong>
commit 5775ac0
Date: Wed Feb 24 16:51:19 2016 +0100
feature-XX: append 2x
commit c119837 (master)
Date: Wed Feb 24 16:51:18 2016 +0100
master: append 1x
commit a7a3df0
Date: Wed Feb 24 16:51:18 2016 +0100
feature-XX: append 1x
commit 8b430ac
Date: Wed Feb 24 16:51:18 2016 +0100
master: created
$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
<strong>* 123dc18 - Wed, 24 Feb 2016 16:51:36 +0100 (38 seconds ago) (HEAD -&gt; feature-XX)</strong>
<strong>|\ Merge branch 'master' into feature-XX - Bartosz Wieczorek</strong>
| * c119837 - Wed, 24 Feb 2016 16:51:18 +0100 (56 seconds ago) (master)
| | master: append 1x - Bartosz Wieczorek
* | 5775ac0 - Wed, 24 Feb 2016 16:51:19 +0100 (55 seconds ago)
| | feature-XX: append 2x - Bartosz Wieczorek
* | a7a3df0 - Wed, 24 Feb 2016 16:51:18 +0100 (56 seconds ago)
|/ feature-XX: append 1x - Bartosz Wieczorek
* 8b430ac - Wed, 24 Feb 2016 16:51:18 +0100 (56 seconds ago)
master: created - Bartosz Wieczorek</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2753</wp:post_id>
  <wp:post_date>2016-02-24 17:06:47</wp:post_date>
  <wp:post_date_gmt>2016-02-24 16:06:47</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>git-unintentional-merge-commits</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="git"><![CDATA[git]]></category>
  <category domain="post_tag" nicename="git-merge"><![CDATA[git merge]]></category>
  <category domain="post_tag" nicename="git-unintentional-merge"><![CDATA[git unintentional merge]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[20132373793]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>git merge - commit all what was merged</title>
  <link>https://bmwieczorek.wordpress.com/2016/02/24/git-merge-commit-all-what-was-merged/</link>
  <pubDate>Wed, 24 Feb 2016 16:59:57 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2785</guid>
  <description/>
  <content:encoded><![CDATA[<strong>Note that when doing git pull (with default merge) git will apply all developers changes in-between your changes. That means that you may see modified files that you did not worked on (here master.txt). You need to commit and push them back to the upstream (do not exclude them unless they were wrong and you tell that explicitly). Otherwise pushing partial changes would lead to losing others work.</strong>

<strong>On the other hand with git pull --rebase (or git rebase) you first take others changes and apply your changes on the top of them so that your changes go as last ones. That is much safer as you know your changes and you will not omit accidentialy others work when pushing to main repo.</strong>

Example:
<pre>mkdir git-merge
cd git-merge
git init
echo "master: created master.txt" &gt; master.txt
echo "master: created common.txt" &gt; common.txt
git add .
git commit -am "master: created common.txt and master.txt"
git checkout -b feature-xx
echo "feature-xx: created feature-xx.txt" &gt;&gt; feature-xx.txt
git add feature-xx.txt
echo "feature-xx: append 1x common.txt" &gt;&gt; common.txt
git commit -am "feature-xx: append 1x common and created feature-xx.txt"
git checkout master
echo "master: append 1x master.txt" &gt;&gt; master.txt
echo "master: append 1x common.txt" &gt;&gt; common.txt
git commit -am "master: append 1x master.txt and common.txt"
git checkout feature-xx
echo "feature-xx: append 1x feature-xx.txt" &gt;&gt; feature-xx.txt
echo "feature-xx: append 2x common.txt" &gt;&gt; common.txt
git commit -am "feature-xx: append 1x feature-xx.txt and 2x common.txt"</pre>
<pre>
$ git merge master
Auto-merging common.txt
CONFLICT (content): Merge conflict in common.txt
Automatic merge failed; fix conflicts and then commit the result.
$ git status
On branch feature-xx
You have unmerged paths.
 (fix conflicts and run "git commit")
Changes to be committed:
 modified: master.txt
Unmerged paths:
 (use "git add &lt;file&gt;..." to mark resolution)
 both modified: common.txt
$ explorer.exe .
$ cat common.txt
master: created common.txt
&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
feature-xx: append 1x common.txt
feature-xx: append 2x common.txt
||||||| merged common ancestors
=======
master: append 1x common.txt
&gt;&gt;&gt;&gt;&gt;&gt;&gt; master
$ vim common.txt
$ cat common.txt
master: created common.txt
feature-xx: append 1x common.txt
feature-xx: append 2x common.txt
master: append 1x common.txt
$ git add common.txt # resolved conflict</pre>
<pre><img class="alignnone size-full wp-image-2795" src="https://bmwieczorek.files.wordpress.com/2016/02/tortoise-commit.png" alt="tortoise-commit" width="555" height="535" /></pre>
<pre><strong>Here developer only selected common.txt as that was the only file he worked on the feature-xx branch. He skipped committing master.txt since he did not touch it. Hoever, that master.txt had a very important fix and he should have commited that. Note also very enigmatic default commit message that suggest only conflicted commit.txt has changed.</strong></pre>
<pre>$ git status
On branch feature-xx
Changes not staged for commit:
 (use "git add &lt;file&gt;..." to update what will be committed)
 (use "git checkout -- &lt;file&gt;..." to discard changes in working directory)
 modified: master.txt
no changes added to commit (use "git add" and/or "git commit -a")
$ git log --decorate --abbrev-commit
commit c9a33be (HEAD -&gt; feature-xx)
Merge: 7f3b96f b331881
Date: Wed Feb 24 17:49:22 2016 +0100
 Merge branch 'master' into feature-xx
 # Conflicts:
 # common.txt
commit 7f3b96f
Date: Wed Feb 24 17:46:55 2016 +0100
 feature-xx: append 1x feature-xx.txt and 2x common.txt
commit b331881 (master)
Date: Wed Feb 24 17:46:54 2016 +0100
 master: append 1x master.txt and common.txt
commit 64e89e9
Date: Wed Feb 24 17:46:54 2016 +0100
 feature-xx: append 1x common and created feature-xx.txt
commit 3a52a79
Date: Wed Feb 24 17:46:54 2016 +0100
 master: created common.txt and master.txt
$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
* c9a33be - Wed, 24 Feb 2016 17:49:22 +0100 (7 minutes ago) (HEAD -&gt; feature-xx)
|\ Merge branch 'master' into feature-xx - Bartosz Wieczorek
| * b331881 - Wed, 24 Feb 2016 17:46:54 +0100 (10 minutes ago) (master)
| | master: append 1x master.txt and common.txt - Bartosz Wieczorek
* | 7f3b96f - Wed, 24 Feb 2016 17:46:55 +0100 (10 minutes ago)
| | feature-xx: append 1x feature-xx.txt and 2x common.txt - Bartosz Wieczorek
* | 64e89e9 - Wed, 24 Feb 2016 17:46:54 +0100 (10 minutes ago)
|/ feature-xx: append 1x common and created feature-xx.txt - Bartosz Wieczorek
* 3a52a79 - Wed, 24 Feb 2016 17:46:54 +0100 (10 minutes ago)
 master: created common.txt and master.txt - Bartosz Wieczorek</pre>
<pre>$ git push</pre>
<pre>$ git diff HEAD master.txt
diff --git a/master.txt b/master.txt
index b076f41..6900433 100644
--- a/master.txt
+++ b/master.txt
@@ -1 +1,2 @@
 master: created master.txt
<strong>+master: append 1x master.txt # that fix did not go to the repository</strong></pre>
<pre></pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2785</wp:post_id>
  <wp:post_date>2016-02-24 17:59:57</wp:post_date>
  <wp:post_date_gmt>2016-02-24 16:59:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>git-merge-commit-all-what-was-merged</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="git"><![CDATA[git]]></category>
  <category domain="post_tag" nicename="git-merge"><![CDATA[git merge]]></category>
  <category domain="post_tag" nicename="git-unintentional-merge-commit"><![CDATA[git unintentional merge commit]]></category>
  <category domain="post_tag" nicename="git-rebase"><![CDATA[git-rebase]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[20133898422]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>git pull scenarios</title>
  <link>https://bmwieczorek.wordpress.com/2016/02/25/git-pull-merge-commits/</link>
  <pubDate>Thu, 25 Feb 2016 16:52:06 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2812</guid>
  <description/>
  <content:encoded><![CDATA[<strong>Scenario 1  (both users U1 and U2 are in sync; U2 modified committed and pushed file B; U1 executes git pull --&gt; <span style="text-decoration:underline;">fast forward merge updates file B, not merge commit happens</span>):
</strong>
<ul>
	<li>U1: create file A and B commits it and pushes to repo</li>
	<li>U2: pull changes</li>
	<li>U2: modifies only B, commits and pushes</li>
	<li>U1: pull #no conflicts, automatically U2 fast-forward commit in incorporated for U1, no merge commit</li>
</ul>
<pre>#u1
git clone https://github.com/bmwieczorek/git-pull-merge.git git-pull-merge-u1
cd git-pull-merge-u1
echo "u1 created a.txt" &gt; a.txt
git add a.txt
git commit -m "u1 created a.txt"
echo "u1 created b.txt" &gt; b.txt
git add b.txt
git commit -m "u1 created b.txt"
git push origin master
cd ..</pre>
<pre>#u2
git clone https://github.com/bmwieczorek/git-pull-merge.git git-pull-merge-u2
cd git-pull-merge-u2
echo "u2 append 1x b.txt" &gt;&gt; b.txt
git add b.txt
git commit -am "u2 append 1x b.txt"
git push origin master
cd ..</pre>
<pre>#u1
cd git-pull-merge-u1
git pull
$ git pull
remote: Counting objects: 3, done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 3 (delta 0), reused 3 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), done.
From https://github.com/bmwieczorek/git-pull-merge
 7dde4b0..6b1b5a1 master -&gt; origin/master
Updating 7dde4b0..6b1b5a1
<strong>Fast-forward</strong>
 b.txt | 1 +
 1 file changed, 1 insertion(+)
$ git log --decorate --abbrev-commit --stat
commit 6b1b5a1 (HEAD -&gt; master, origin/master)
Date: Thu Feb 25 17:56:43 2016 +0100
u2 append 1x b.txt
b.txt | 1 +
 1 file changed, 1 insertion(+)
commit 7dde4b0
Date: Thu Feb 25 17:56:40 2016 +0100
u1 created b.txt
b.txt | 1 +
 1 file changed, 1 insertion(+)
commit a6dc68e
Date: Thu Feb 25 17:56:40 2016 +0100
u1 created a.txt
a.txt | 1 +
 1 file changed, 1 insertion(+)
$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
* 6b1b5a1 - Thu, 25 Feb 2016 17:56:43 +0100 (15 minutes ago) (HEAD -&gt; master, origin/master)
| u2 append 1x b.txt - Bartosz Wieczorek
* 7dde4b0 - Thu, 25 Feb 2016 17:56:40 +0100 (15 minutes ago)
| u1 created b.txt - Bartosz Wieczorek
* a6dc68e - Thu, 25 Feb 2016 17:56:40 +0100 (15 minutes ago)
 u1 created a.txt - Bartosz Wieczorek</pre>
&nbsp;

<strong>Scenario 2  (both users U1 and U2 are in sync; U1 modified and committed file A; U2 modified committed and pushed file B; U1 executes git pull --&gt; <span style="text-decoration:underline;">automatic merge happens for file B (no conflict) and automatic merge commit is generated</span>):</strong>
<ul>
	<li>U1: create file A and B commits it and pushes to repo</li>
	<li><strong>U1: modifies A, commits but do not yet push</strong></li>
	<li>U2: pull changes</li>
	<li>U2: modifies B, commits and pushes</li>
	<li>U1: pull #no conflicts, automatically U2 commit in incorporated for U1 and automatically additional merge commit is created with message window popup</li>
</ul>
<pre>#u1
git clone https://github.com/bmwieczorek/git-pull-merge.git git-pull-merge-u1
cd git-pull-merge-u1
echo "u1 created a.txt" &gt; a.txt
git add a.txt
git commit -m "u1 created a.txt" 
echo "u1 created b.txt" &gt; b.txt
git add b.txt
git commit -m "u1 created b.txt"
git push origin master
echo "u1 append 1x a.txt" &gt;&gt; a.txt
git add a.txt
git commit -m "u1 appended a.txt" a.txt
cd ..</pre>
<pre>#u2
git clone https://github.com/bmwieczorek/git-pull-merge.git git-pull-merge-u2
cd git-pull-merge-u2
echo "u2 append 1x b.txt" &gt;&gt; b.txt
git add b.txt
git commit -am "u2 append 1x b.txt"
git push origin master
cd ..</pre>
<pre>#u1
cd git-pull-merge-u1
$ git pull</pre>
<pre>### MESSAGE ###
Merge branch 'master' of https://github.com/bmwieczorek/git-pull-merge</pre>
<pre>remote: Counting objects: 3, done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 3 (delta 0), reused 3 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), done.
From https://github.com/bmwieczorek/git-pull-tortoise-merge
 bc649c1..a2af093 master -&gt; origin/master
Merge made by the 'recursive' strategy.
 b.txt | 1 +
 1 file changed, 1 insertion(+)
$ git log --decorate --abbrev-commit --stat
<strong>commit 3ed9f6c (HEAD -&gt; master)</strong>
<strong>Merge: 2d7c906 a2af093</strong>
<strong>Date: Thu Feb 25 17:24:49 2016 +0100</strong>
<strong>Merge branch 'master' of https://github.com/bmwieczorek/git-pull-merge</strong>
commit a2af093 (origin/master)
Date: Thu Feb 25 17:24:41 2016 +0100
u2 append 1x b.txt
b.txt | 1 +
 1 file changed, 1 insertion(+)
commit 2d7c906
Date: Thu Feb 25 17:24:40 2016 +0100
u1 appended a.txt
a.txt | 1 +
 1 file changed, 1 insertion(+)
commit bc649c1
Date: Thu Feb 25 17:24:37 2016 +0100
u1 created b.txt
b.txt | 1 +
 1 file changed, 1 insertion(+)
commit a351e86
Date: Thu Feb 25 17:24:37 2016 +0100
u1 created a.txt
a.txt | 1 +
 1 file changed, 1 insertion(+)
$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
<strong>* 3ed9f6c - Thu, 25 Feb 2016 17:24:49 +0100 (2 minutes ago) (HEAD -&gt; master)</strong>
<strong>|\ Merge branch 'master' of https://github.com/bmwieczorek/git-pull-merge - Bartosz Wieczorek</strong>
| * a2af093 - Thu, 25 Feb 2016 17:24:41 +0100 (2 minutes ago) (origin/master)
| | u2 append 1x b.txt - Bartosz Wieczorek
* | 2d7c906 - Thu, 25 Feb 2016 17:24:40 +0100 (2 minutes ago)
|/ u1 appended a.txt - Bartosz Wieczorek
* bc649c1 - Thu, 25 Feb 2016 17:24:37 +0100 (2 minutes ago)
| u1 created b.txt - Bartosz Wieczorek
* a351e86 - Thu, 25 Feb 2016 17:24:37 +0100 (2 minutes ago)
 u1 created a.txt - Bartosz Wieczorek</pre>
&nbsp;

<strong>Scenario 3 (both users U1 and U2 are in sync; U1 modified and committed file A; U2 modified committed and pushed file <span style="text-decoration:underline;">A</span> and B; U1 executes git pull <span style="text-decoration:underline;">and gets a conflict for file A --&gt; need to resolve conflict manually, explicitly commit changes for file A and B</span>):</strong>
<ul>
	<li>U1: create file A and B commits it and pushes to repo</li>
	<li><strong>U1: modifies A, commits but do not yet push</strong></li>
	<li>U2: pull changes</li>
	<li>U2: modifies <strong>A and</strong> B, commits and pushes</li>
	<li>U1: pull # get conflict message</li>
	<li>U1: resolve conflict and add A to index, commit A and <strong>ALSO  B (as B shows modified in index)</strong></li>
</ul>
<pre>#u1
git clone https://github.com/bmwieczorek/git-pull-merge.git git-pull-merge-u1
cd git-pull-merge-u1
echo "u1 created a.txt" &gt; a.txt
git add a.txt
git commit -m "u1 created a.txt"
echo "u1 created b.txt" &gt; b.txt
git add b.txt
git commit -m "u1 created b.txt"
git push origin master
echo "u1 append 1x a.txt" &gt;&gt; a.txt
git add a.txt
git commit -m "u1 appended a.txt" a.txt
cd ..</pre>
<pre>#u2
git clone https://github.com/bmwieczorek/git-pull-merge.git git-pull-merge-u2
cd git-pull-merge-u2
echo "u2 append 1x a.txt" &gt;&gt; a.txt
git add b.txt
git commit -am "u2 append 1x a.txt"
echo "u2 append 1x b.txt" &gt;&gt; b.txt
git add b.txt
git commit -am "u2 append 1x b.txt"
git push origin master
cd ..</pre>
<pre>#u1
cd git-pull-merge-u1
git pull
$ git pull
remote: Counting objects: 6, done.
remote: Compressing objects: 100% (4/4), done.
remote: Total 6 (delta 0), reused 6 (delta 0), pack-reused 0
Unpacking objects: 100% (6/6), done.
From https://github.com/bmwieczorek/git-pull-merge
 8d3dab6..add5276 master -&gt; origin/master
Auto-merging a.txt
CONFLICT (content): Merge conflict in a.txt
Automatic merge failed; fix conflicts and then commit the result.
$ git status
On branch master
Your branch and 'origin/master' have diverged,
and have 1 and 2 different commits each, respectively.
 (use "git pull" to merge the remote branch into yours)
You have unmerged paths.
 (fix conflicts and run "git commit")
<strong>Changes to be committed:</strong>
<strong> modified: b.txt</strong>
Unmerged paths:
 (use "git add &lt;file&gt;..." to mark resolution)
 both modified: a.txt
$ git diff HEAD b.txt
diff --git a/b.txt b/b.txt
index 732f593..1accd17 100644
--- a/b.txt
+++ b/b.txt
@@ -1 +1,2 @@
 u1 created b.txt
<strong>+u2 append 1x b.txt</strong>
$ cat a.txt
u1 created a.txt
&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
u1 append 1x a.txt
||||||| merged common ancestors
=======
u2 append 1x a.txt
&gt;&gt;&gt;&gt;&gt;&gt;&gt; add52769de2b4a49c07a1f3745283d262d8d94a2
$ vim a.txt
$ cat a.txt
u1 created a.txt
u1 append 1x a.txt
u2 append 1x a.txt
$ git add a.txt
$ git commit -m "u1 manually merged from upstream"
[master f99b515] u1 manually merged from upstream
$ git log --decorate --abbrev-commit --stat
<strong>commit f99b515 (HEAD -&gt; master)</strong>
<strong>Merge: 5491dff add5276</strong>
<strong>Date: Thu Feb 25 17:44:02 2016 +0100</strong>
<strong> u1 manually merged from upstream</strong>
commit add5276 (origin/master)
Date: Thu Feb 25 17:42:26 2016 +0100
 u2 append 1x b.txt
 b.txt | 1 +
 1 file changed, 1 insertion(+)
commit 80f95d8
Date: Thu Feb 25 17:42:26 2016 +0100
 u2 append 1x a.txt
 a.txt | 1 +
 1 file changed, 1 insertion(+)
commit 5491dff
Date: Thu Feb 25 17:42:25 2016 +0100
 u1 appended a.txt
 a.txt | 1 +
 1 file changed, 1 insertion(+)
commit 8d3dab6
Date: Thu Feb 25 17:42:23 2016 +0100
 u1 created b.txt
 b.txt | 1 +
 1 file changed, 1 insertion(+)
commit 2d142ad
Date: Thu Feb 25 17:42:23 2016 +0100
 u1 created a.txt
 a.txt | 1 +
 1 file changed, 1 insertion(+)
$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
<strong>* f99b515 - Thu, 25 Feb 2016 17:44:02 +0100 (56 seconds ago) (HEAD -&gt; master)</strong>
<strong>|\ u1 manually merged from upstream - Bartosz Wieczorek</strong>
| * add5276 - Thu, 25 Feb 2016 17:42:26 +0100 (3 minutes ago) (origin/master)
| | u2 append 1x b.txt - Bartosz Wieczorek
| * 80f95d8 - Thu, 25 Feb 2016 17:42:26 +0100 (3 minutes ago)
| | u2 append 1x a.txt - Bartosz Wieczorek
* | 5491dff - Thu, 25 Feb 2016 17:42:25 +0100 (3 minutes ago)
|/ u1 appended a.txt - Bartosz Wieczorek
* 8d3dab6 - Thu, 25 Feb 2016 17:42:23 +0100 (3 minutes ago)
| u1 created b.txt - Bartosz Wieczorek
* 2d142ad - Thu, 25 Feb 2016 17:42:23 +0100 (3 minutes ago)
 u1 created a.txt - Bartosz Wieczorek</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2812</wp:post_id>
  <wp:post_date>2016-02-25 17:52:06</wp:post_date>
  <wp:post_date_gmt>2016-02-25 16:52:06</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>git-pull-merge-commits</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="git"><![CDATA[git]]></category>
  <category domain="post_tag" nicename="git-pull"><![CDATA[git pull]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[20169723167]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>git pull --rebase scenarios</title>
  <link>https://bmwieczorek.wordpress.com/2016/02/26/git-pull-rebase-scenarios/</link>
  <pubDate>Fri, 26 Feb 2016 09:05:44 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2866</guid>
  <description/>
  <content:encoded><![CDATA[<strong>Scenario 1  (both users U1 and U2 are in sync; U2 modified committed and pushed file B; U1 executes git pull --rebase --&gt; <span style="text-decoration:underline;">fast forward update file B</span>):
</strong>
<ul>
	<li>U1: create file A and B commits it and pushes to repo</li>
	<li>U2: pull changes</li>
	<li>U2: modifies only B, commits and pushes</li>
	<li>U1: pull --rebase #no conflicts, automatically U2 fast-forward commit in incorporated for U1 (no merge commit when rebasing)</li>
</ul>
<pre>#u1
git clone https://github.com/bmwieczorek/git-pull-rebase.git git-pull-rebase-u1
cd git-pull-rebase-u1
echo "u1 created a.txt" &gt; a.txt
git add a.txt
git commit -m "u1 created a.txt"
echo "u1 created b.txt" &gt; b.txt
git add b.txt
git commit -m "u1 created b.txt"
git push origin master
cd ..</pre>
<pre>
#u2
git clone https://github.com/bmwieczorek/git-pull-rebase.git git-pull-rebase-u2
cd git-pull-rebase-u2
echo "u2 append 1x b.txt" &gt;&gt; b.txt
git add b.txt
git commit -am "u2 append 1x b.txt"
git push origin master
cd ..

#u1
cd git-pull-rebase-u1
git pull --rebase
<strong>$ git pull --rebase</strong>
remote: Counting objects: 3, done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 3 (delta 0), reused 3 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), done.
From https://github.com/bmwieczorek/git-pull-rebase
 625807c..23b1c44 master -&gt; origin/master
First, rewinding head to replay your work on top of it...
<strong>Fast-forwarded master to 23b1c44a2f52387c46b24a1bfb144be34b1abc0a.</strong>
$ git status
On branch master
Your branch is up-to-date with 'origin/master'.
nothing to commit, working directory clean
$ git log --decorate --abbrev-commit --stat | grep -v Author| egrep -v '^$'
commit 23b1c44 (HEAD -&gt; master, origin/master)
Date: Fri Feb 26 09:46:10 2016 +0100
 u2 append 1x b.txt
 b.txt | 1 +
 1 file changed, 1 insertion(+)
commit 625807c
Date: Fri Feb 26 09:45:37 2016 +0100
 u1 created b.txt
 b.txt | 1 +
 1 file changed, 1 insertion(+)
commit e94be7f
Date: Fri Feb 26 09:45:37 2016 +0100
 u1 created a.txt
 a.txt | 1 +
 1 file changed, 1 insertion(+)
$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
* 23b1c44 - Fri, 26 Feb 2016 09:46:10 +0100 (8 minutes ago) (HEAD -&gt; master, origin/master)
| u2 append 1x b.txt - Bartosz Wieczorek
* 625807c - Fri, 26 Feb 2016 09:45:37 +0100 (8 minutes ago)
| u1 created b.txt - Bartosz Wieczorek
* e94be7f - Fri, 26 Feb 2016 09:45:37 +0100 (8 minutes ago)
 u1 created a.txt - Bartosz Wieczorek</pre>
<strong>Scenario 2  (both users U1 and U2 are in sync; U1 modified and committed file A; U2 modified committed and pushed file B; U1 executes git pull --&gt; <span style="text-decoration:underline;">automatic merge happens for file B (no conflict) and automatic merge commit is generated</span>):</strong>
<ul>
	<li>U1: create file A and B commits it and pushes to repo</li>
	<li><strong>U1: modifies A, commits but do not yet push</strong></li>
	<li>U2: pull changes</li>
	<li>U2: modifies B, commits and pushes</li>
	<li>U1: pull  --rebase #no conflicts, reset to common commit, applied U2 change then applied U1 (no merge commit for rebase)</li>
</ul>
<pre>#u1
git clone https://github.com/bmwieczorek/git-pull-rebase.git git-pull-rebase-u1
cd git-pull-rebase-u1
echo "u1 created a.txt" &gt; a.txt
git add a.txt
git commit -m "u1 created a.txt" 
echo "u1 created b.txt" &gt; b.txt
git add b.txt
git commit -m "u1 created b.txt"
git push origin master
echo "u1 append 1x a.txt" &gt;&gt; a.txt
git add a.txt
git commit -m "u1 appended a.txt" a.txt
cd ..</pre>
<pre>#u2
git clone https://github.com/bmwieczorek/git-pull-rebase.git git-pull-rebase-u2
cd git-pull-rebase-u2
echo "u2 append 1x b.txt" &gt;&gt; b.txt
git add b.txt
git commit -am "u2 append 1x b.txt"
git push origin master
cd ..</pre>
<pre>#u1
cd git-pull-rebase-u1
git pull --rebase
<strong>$ git pull --rebase</strong>
remote: Counting objects: 3, done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 3 (delta 0), reused 3 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), done.
From https://github.com/bmwieczorek/git-pull-rebase
 d0af369..7ced2db master -&gt; origin/master
<strong>First, rewinding head to replay your work on top of it...</strong>
<strong>Applying: u1 appended a.txt</strong>
$ git status
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
 (use "git push" to publish your local commits)
nothing to commit, working directory clean
$ git log --decorate --abbrev-commit --stat | grep -v Author | sed -e /^$/d
commit e684266 (HEAD -&gt; master)
Date: Fri Feb 26 10:13:48 2016 +0100
 u1 appended a.txt
 a.txt | 1 +
 1 file changed, 1 insertion(+)
commit 7ced2db (origin/master)
Date: Fri Feb 26 10:13:49 2016 +0100
 u2 append 1x b.txt
 b.txt | 1 +
 1 file changed, 1 insertion(+)
commit d0af369
Date: Fri Feb 26 10:13:45 2016 +0100
 u1 created b.txt
 b.txt | 1 +
 1 file changed, 1 insertion(+)
commit fb6668e
Date: Fri Feb 26 10:13:45 2016 +0100
 u1 created a.txt
 a.txt | 1 +
 1 file changed, 1 insertion(+)
$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
* e684266 - Fri, 26 Feb 2016 10:13:48 +0100 (7 seconds ago) (HEAD -&gt; master)
| u1 appended a.txt - Bartosz Wieczorek
* 7ced2db - Fri, 26 Feb 2016 10:13:49 +0100 (6 seconds ago) (origin/master)
| u2 append 1x b.txt - Bartosz Wieczorek
* d0af369 - Fri, 26 Feb 2016 10:13:45 +0100 (10 seconds ago)
| u1 created b.txt - Bartosz Wieczorek
* fb6668e - Fri, 26 Feb 2016 10:13:45 +01 
  u1 created a.txt - Bartosz Wieczorek</pre>
<strong>Scenario 3 (both users U1 and U2 are in sync; U1 modified and committed file A; U2 modified committed and pushed file <span style="text-decoration:underline;">A</span> and B; U1 executes git pull --rebase <span style="text-decoration:underline;">and gets a conflict for file A --&gt; need to resolve conflict manually, explicitly add resolved file to index and rebase continue, no commit required</span>):</strong>
<ul>
	<li>U1: create file A and B commits it and pushes to repo</li>
	<li><strong>U1: modifies A, commits but do not yet push</strong></li>
	<li>U2: pull changes</li>
	<li>U2: modifies <strong>A and</strong> B, commits and pushes</li>
	<li>U1: pull --rebase# get conflict message</li>
	<li>U1: resolve conflict and add A to index, <strong>rebase continue; no commit required)</strong></li>
</ul>
<pre>#u1
git clone https://github.com/bmwieczorek/git-pull-rebase.git git-pull-rebase-u1
cd git-pull-rebase-u1
echo "u1 created a.txt" &gt; a.txt
git add a.txt
git commit -m "u1 created a.txt"
echo "u1 created b.txt" &gt; b.txt
git add b.txt
git commit -m "u1 created b.txt"
git push origin master
echo "u1 append 1x a.txt" &gt;&gt; a.txt
git add a.txt
git commit -m "u1 appended a.txt" a.txt
cd ..</pre>
<pre>#u2
git clone https://github.com/bmwieczorek/git-pull-rebase.git git-pull-rebase-u2
cd git-pull-rebase-u2
echo "u2 append 1x a.txt" &gt;&gt; a.txt
git add b.txt
git commit -am "u2 append 1x a.txt"
echo "u2 append 1x b.txt" &gt;&gt; b.txt
git add b.txt
git commit -am "u2 append 1x b.txt"
git push origin master
cd ..</pre>
<pre>#u1
cd git-pull-rebase-u1
git pull --rebase
<strong>$ git pull --rebase</strong>
remote: Counting objects: 6, done.
remote: Compressing objects: 100% (4/4), done.
remote: Total 6 (delta 0), reused 6 (delta 0), pack-reused 0
Unpacking objects: 100% (6/6), done.
From https://github.com/bmwieczorek/git-pull-rebase
 5375a97..468d5b6 master -&gt; origin/master
First, rewinding head to replay your work on top of it...
Applying: u1 appended a.txt
Using index info to reconstruct a base tree...
M a.txt
Falling back to patching base and 3-way merge...
Auto-merging a.txt
<strong>CONFLICT (content): Merge conflict in a.txt</strong>
error: Failed to merge in the changes.
Patch failed at 0001 u1 appended a.txt
The copy of the patch that failed is found in: .git/rebase-apply/patch
When you have resolved this problem, run "git rebase --continue".
If you prefer to skip this patch, run "git rebase --skip" instead.
To check out the original branch and stop rebasing, run "git rebase --abort".
$ git status
rebase in progress; onto 468d5b6
You are currently rebasing branch 'master' on '468d5b6'.
 (fix conflicts and then run "git rebase --continue")
 (use "git rebase --skip" to skip this patch)
 (use "git rebase --abort" to check out the original branch)
Unmerged paths:
 (use "git reset HEAD &lt;file&gt;..." to unstage)
 (use "git add &lt;file&gt;..." to mark resolution)
 both modified: a.txt
no changes added to commit (use "git add" and/or "git commit -a")
$ cat a.txt
u1 created a.txt
&lt;&lt;&lt;&lt;&lt;&lt;&lt; 468d5b6fa8d7118166bee3cac511019063179ab4
u2 append 1x a.txt
||||||| merged common ancestors
=======
u1 append 1x a.txt
&gt;&gt;&gt;&gt;&gt;&gt;&gt; u1 appended a.txt
$ vim a.txt
$ cat a.txt
u1 created a.txt
u2 append 1x a.txt
u1 append 1x a.txt
<strong>$ git add a.txt</strong>
<strong>$ git rebase --continue</strong>
Applying: u1 appended a.txt
$ git status
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
 (use "git push" to publish your local commits)
nothing to commit, working directory clean
$ cat a.txt
u1 created a.txt
u2 append 1x a.txt
u1 append 1x a.txt
$ git log --decorate --abbrev-commit --stat | grep -v Author | sed -e /^$/d
commit 50c2e38 (HEAD -&gt; master)
Date: Fri Feb 26 10:27:11 2016 +0100
 u1 appended a.txt
 a.txt | 1 +
 1 file changed, 1 insertion(+)
commit 468d5b6 (origin/master)
Date: Fri Feb 26 10:27:12 2016 +0100
 u2 append 1x b.txt
 b.txt | 1 +
 1 file changed, 1 insertion(+)
commit f0b5706
Date: Fri Feb 26 10:27:12 2016 +0100
 u2 append 1x a.txt
 a.txt | 1 +
 1 file changed, 1 insertion(+)
commit 5375a97
Date: Fri Feb 26 10:27:08 2016 +0100
 u1 created b.txt
 b.txt | 1 +
 1 file changed, 1 insertion(+)
commit 27af46e
Date: Fri Feb 26 10:27:08 2016 +0100
 u1 created a.txt
 a.txt | 1 +
 1 file changed, 1 insertion(+)
$ git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
* 50c2e38 - Fri, 26 Feb 2016 10:27:11 +0100 (3 minutes ago) (HEAD -&gt; master)
| u1 appended a.txt - Bartosz Wieczorek
* 468d5b6 - Fri, 26 Feb 2016 10:27:12 +0100 (3 minutes ago) (origin/master)
| u2 append 1x b.txt - Bartosz Wieczorek
* f0b5706 - Fri, 26 Feb 2016 10:27:12 +0100 (3 minutes ago)
| u2 append 1x a.txt - Bartosz Wieczorek
* 5375a97 - Fri, 26 Feb 2016 10:27:08 +0100 (3 minutes ago)
| u1 created b.txt - Bartosz Wieczorek
* 27af46e - Fri, 26 Feb 2016 10:27:08 +0100 (3 minutes ago)
 u1 created a.txt - Bartosz Wieczorek</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2866</wp:post_id>
  <wp:post_date>2016-02-26 10:05:44</wp:post_date>
  <wp:post_date_gmt>2016-02-26 09:05:44</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>git-pull-rebase-scenarios</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="git"><![CDATA[git]]></category>
  <category domain="post_tag" nicename="git-pull-rebase"><![CDATA[git pull rebase]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[20192133402]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Git Tortoise clone ssh</title>
  <link>https://bmwieczorek.wordpress.com/2016/05/18/git-tortoise-clone-ssh/</link>
  <pubDate>Wed, 18 May 2016 18:52:21 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2890</guid>
  <description/>
  <content:encoded><![CDATA[In order to use ssh public key stored in e.g. C:\Users\Bartek\.ssh\id_rsa.pub or cygwin C:\dev\env\cygwin64\home\SG0212148\.ssh\id_rsa.pub while using TortoiseGit update Tortoise/Settings/Network/SSH Client to use C:\dev\env\cygwin64\bin\ssh.exe]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2890</wp:post_id>
  <wp:post_date>2016-05-18 20:52:21</wp:post_date>
  <wp:post_date_gmt>2016-05-18 18:52:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>git-tortoise-clone-ssh</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="git"><![CDATA[git]]></category>
  <category domain="post_tag" nicename="tortoisegit"><![CDATA[TortoiseGit]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[22944156342]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>unix count number of words in text</title>
  <link>https://bmwieczorek.wordpress.com/2016/06/01/unix-count-number-of-words-in-text/</link>
  <pubDate>Wed, 01 Jun 2016 16:33:09 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2907</guid>
  <description/>
  <content:encoded><![CDATA[$ cat a.txt
aXXbXXcXX
dXXeXXf

$ grep -o 'XX' a.txt
XX
XX
XX
XX
XX

$ grep -o 'XX' a.txt | wc -l
5

&nbsp;

&nbsp;

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2907</wp:post_id>
  <wp:post_date>2016-06-01 18:33:09</wp:post_date>
  <wp:post_date_gmt>2016-06-01 16:33:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>unix-count-number-of-words-in-text</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="count"><![CDATA[count]]></category>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <category domain="post_tag" nicename="linux-2"><![CDATA[linux]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="unix"><![CDATA[unix]]></category>
  <category domain="post_tag" nicename="words"><![CDATA[words]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[23406507062]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>default memory setting for java</title>
  <link>https://bmwieczorek.wordpress.com/2016/06/01/default-memory-setting-for-java/</link>
  <pubDate>Wed, 01 Jun 2016 16:41:47 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2912</guid>
  <description/>
  <content:encoded><![CDATA[$ jinfo &lt;pid&gt;
Attaching to process ID 8170, please wait...
Debugger attached successfully.

sun.boot.library.path = /apps/java/jdk1.8.0_71/jre/lib/amd64
java.vm.name = Java HotSpot(TM) 64-Bit Server VM
java.runtime.version = 1.8.0_71-b15
os.arch = amd64
os.name = Linux
java.vm.specification.version = 1.8
sun.arch.data.model = 64
java.version = 1.8.0_71
VM Flags:
Non-default VM flags: -XX:CICompilerCount=3 -XX:InitialHeapSize=526385152 -<strong>XX:MaxHeapSize=8417968128</strong> <strong>-XX:MaxNewSize=2805989376</strong> -XX:MinHeapDeltaBytes=524288 -XX:NewSize=175112192 -XX:OldSize=351272960 -XX:+UseCompressedClassPointers -XX:+UseCompressedOops -XX:+UseFastUnorderedTimeStamps -XX:+UseParallelGC
Command line: -Dspring.profiles.active=dev

so <strong>InitialHeapSize=0.49GB</strong>, <strong>MaxHeapSize=7.9GB, MaxNewSize=2.6GB, OldSize=0.3GB</strong>

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2912</wp:post_id>
  <wp:post_date>2016-06-01 18:41:47</wp:post_date>
  <wp:post_date_gmt>2016-06-01 16:41:47</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>default-memory-setting-for-java</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="default"><![CDATA[default]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="java8"><![CDATA[java8]]></category>
  <category domain="post_tag" nicename="jdk8"><![CDATA[jdk8]]></category>
  <category domain="category" nicename="memory"><![CDATA[memory]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[23406750003]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Completable future - async and non blocking callbacks</title>
  <link>https://bmwieczorek.wordpress.com/2016/06/12/completable-future-async-and-non-blocking-callbacks/</link>
  <pubDate>Sun, 12 Jun 2016 17:55:36 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2929</guid>
  <description/>
  <content:encoded><![CDATA[&nbsp;

[code language="java"]
package com.bawi.completable.future;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.Arrays;
import java.util.concurrent.CompletableFuture;

public class MyCompletableFuture {
    private static final Logger LOGGER = LoggerFactory.getLogger(MyCompletableFuture.class);

    public static void main(String[] args) throws InterruptedException {
        System.out.println(Thread.currentThread().getName() + &quot;: started&quot;);
        Arrays.asList(&quot;a&quot;, &quot;ab&quot;, &quot;abc&quot;, &quot;abcd&quot;)
            .stream()
            .forEach(text -&gt; {
                CompletableFutur&lt;String&gt; stringCF = CompletableFuture.supplyAsync(() -&gt; produceText(text));
                CompletableFuture&lt;Integer&gt; integerCF = stringCF.thenApply(MyCompletableFuture::calcStringLength);
                CompletableFuture&lt;Double&gt; doubleCF = integerCF.thenApply(MyCompletableFuture::calcCirclePerimeter);
                CompletableFuture&lt;Void&gt; voidCF = doubleCF.thenAccept(MyCompletableFuture::print);
                CompletableFuture&lt;Void&gt; voidCF2 = voidCF.thenRun(() -&gt; System.out.println(&quot;DONE&quot;));
                }
            );
        System.out.println(Thread.currentThread().getName() + &quot;: created completable future, about to sleep&quot;);
        Thread.sleep(5000);
        System.out.println(Thread.currentThread().getName() + &quot;: finished&quot;);
   }

    static String produceText(String text)  {
        LOGGER.info(&quot;[daemon={}] 1: Producing text: {}&quot;, Thread.currentThread().isDaemon(), text);
        sleepMillis(1000);
        return text;
    }

    static int calcStringLength(String text) {
        int length = text.length();
        LOGGER.info(&quot;[daemon={}] 2: Calculating string length: {}&quot;, Thread.currentThread().isDaemon(), length);
        sleepMillis(1000);
        return length;
    }

    static double calcCirclePerimeter(int r) {
        double perimeter = 2 * Math.PI * r;
        LOGGER.info(&quot;[daemon={}] 3: Calculating circle perimeter: {}&quot;, Thread.currentThread().isDaemon(), perimeter);
        sleepMillis(1000);
        return perimeter;
    }

    static void print(Double d) {
        LOGGER.info(&quot;[daemon={}] 4: Printing: {}&quot;, Thread.currentThread().isDaemon(), d);
        System.out.println(&quot;d=&quot; + d);
    }

    private static void sleepMillis(int millis) {
        try {
            Thread.sleep(millis);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }
}
[/code]

Output (filtered) - note 4 things:
1) that creation of first CompletableFuture is (only) via supplyAsync method that intenally uses a thread pool: either implicit ForkJoinPool (if not specified as above) or takes explicit executor
2) the CompletableFuture creation and execution is async and non blocking (main thread immediately move forward)
3) as soon as the CompletableFuture is created then the supplied task is executed (worker-1 started producing text before main thread started to sleep)
4) if all the subsequent methods e.g. thenApply are not async then the same thread will be used to execute subsequent processing callback on that future completion (the same thread worker-1 executed all the steps)
<pre>main: started
19:13:56.653 [ForkJoinPool.commonPool-worker-1] INFO [daemon=true] 1: Producing text: a
main: created completable future, about to sleep
19:13:57.664 [ForkJoinPool.commonPool-worker-1] INFO [daemon=true] 2: Calculating string length: 1
19:13:58.664 [ForkJoinPool.commonPool-worker-1] INFO [daemon=true] 3: Calculating circle perimeter: 6.283185307179586
19:13:59.667 [ForkJoinPool.commonPool-worker-1] INFO [daemon=true] 4: Printing: 6.283185307179586
main: finished

</pre>
If we change the method to be all async to thenAplyAsynch, thenAcceptAsync and thenRunAsync then there is no quarantee that the same thread will execute all subsequent proccessing for that future - note below that worker-1 executed here first 2 tasks and worker-2 other 2 tasks:
<pre>main: started
19:04:37.022 [ForkJoinPool.commonPool-worker-1] [daemon=true] 1: Producing text: a
19:04:38.031 [ForkJoinPool.commonPool-worker-1] [daemon=true] 2: Calculating string length: 1
19:04:39.045 [ForkJoinPool.commonPool-worker-2] [daemon=true] 3: Calculating circle perimeter: 6.283185307179586
19:04:40.049 [ForkJoinPool.commonPool-worker-2] [daemon=true] 4: Printing: 6.283185307179586
DONE
main: finished</pre>
&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2929</wp:post_id>
  <wp:post_date>2016-06-12 19:55:36</wp:post_date>
  <wp:post_date_gmt>2016-06-12 17:55:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>completable-future-async-and-non-blocking-callbacks</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="completable-future"><![CDATA[completable future]]></category>
  <category domain="post_tag" nicename="completablefuture"><![CDATA[CompletableFuture]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="java8"><![CDATA[java8]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[23765738088]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Multiple approaches to concurrent processing in Java</title>
  <link>https://bmwieczorek.wordpress.com/2016/06/21/multiple-approaches-to-concurrent-processing-in-java/</link>
  <pubDate>Tue, 21 Jun 2016 15:12:32 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2953</guid>
  <description/>
  <content:encoded><![CDATA[Goal: Lets assume we want to execute 2 long running operations: download content and parse it and we want to do it for the list of resources.

The blog points multiple approaches:
1) Thread(s)
2) ExecutorService to submit Callable and return blocking Future get()
3) ExecutionCompletionService implementing CompletionService to submit Callable and returning Future.  CompletionService has take or poll methods waiting and returning first completed task (returned Future's get() is not blocking)
4) Parallel streams
5) CompletableFuture

[code language="java"]
public class TestConcurrent {

    private static final Logger LOGGER = LoggerFactory.getLogger(TestConcurrent.class);

    public static void main(String[] args) {
        LOGGER.info(&quot;Started&quot;);
        long startMillis = System.currentTimeMillis();

        // for each of the resource: download it and parse it and aggregate results to list:
        List&lt;Integer&gt; results = ...

        long stopMillis = System.currentTimeMillis();
        LOGGER.info(&quot;Finished in {} seconds, results={}&quot;, (stopMillis - startMillis) / 1000, results);
    }
[/code]

Lets define the download and parse methods and simulate long running execution using configurable TimeUnit.SECONDS.sleep(seconds).

[code language="java"]
static int download(int id, int seconds) {
    LOGGER.info(&quot;Downloading {} and sleeping {} second(s)&quot;, id, seconds);
    try {
        TimeUnit.SECONDS.sleep(seconds);
    } catch (InterruptedException e) {
        e.printStackTrace();
    }
    LOGGER.info(&quot;Downloaded {}&quot;, id);
    return id;
}

static int parse(int id, int seconds) {
    LOGGER.info(&quot;Parsing {} and sleeping {} second(s)&quot;, id, seconds);
    try {
        TimeUnit.SECONDS.sleep(seconds);
    } catch (InterruptedException e) {
        e.printStackTrace();
    }
    LOGGER.info(&quot;Parsed {}&quot;, id);
    return id;
}
[/code]

In order to make the scenario even more representative between approaches lets define number of resources as 3 and each of the resource needed to be downloaded before it can be parsed. Moreover, 1st resource will be downloaded in 3 seconds, 2nd in two seconds and 3rd in 3 seconds. Conversely, it takes 1 second to parse 1st resource, 2 seconds to parse 2nd resource and 3 seconds to parse 3rd resource.

Obviously we do not want to execute the tasks sequentially using the same thread as it would take too long (12 seconds)

[code language="java"]
private static List&lt;Integer&gt; mapSequentiallyWithOnlyMainThread() {
    List&lt;Integer&gt; numbers = Arrays.asList(1, 2, 3);

    return numbers
        .stream()
        .map(n -&gt; download(n, numbers.size() - n + 1))
        .map(n -&gt; parse(n, n))
        .collect(Collectors.toList());
}
[/code]
<pre>17:54:06.281 [main] Started
17:54:06.391 [main] Downloading 1 and sleeping 3 second(s)
17:54:09.394 [main] Downloaded 1
17:54:09.394 [main] Parsing 1 and sleeping 1 second(s)
17:54:10.394 [main] Parsed 1
17:54:10.394 [main] Downloading 2 and sleeping 2 second(s)
17:54:12.394 [main] Downloaded 2
17:54:12.394 [main] Parsing 2 and sleeping 2 second(s)
17:54:14.394 [main] Parsed 2
17:54:14.394 [main] Downloading 3 and sleeping 1 second(s)
17:54:15.394 [main] Downloaded 3
17:54:15.395 [main] Parsing 3 and sleeping 3 second(s)
17:54:18.395 [main] Parsed 3
17:54:18.395 [main] Finished in 12 seconds, results=[1, 2, 3]</pre>
So lets use multiple threads.
<ol>
	<li>Threads[code language="java"]
private static List&lt;Integer&gt; threads() {
    List&lt;Integer&gt; numbers = Arrays.asList(1, 2, 3);

    return numbers
        .stream()
        .map(n -&gt; startThreadAndJoin(() -&gt; download(n, numbers.size() - n + 1)))
        .map(n -&gt; startThreadAndJoin(() -&gt; parse(n, n)))
        .collect(Collectors.toList());
}

private static Integer startThreadAndJoin(Supplier&lt;Integer&gt; supplier) {
    AtomicInteger value = new AtomicInteger();
    Thread thread = new Thread(() -&gt; {
        value.set(supplier.get());
    });
    thread.start();
    try {
        thread.join();
        return value.get();
    } catch (InterruptedException e) {
        e.printStackTrace();
    }
    return null;
}[/code]
<pre>18:02:35.132 [main] Started
18:02:35.244 [Thread-0] Downloading 1 and sleeping 3 second(s)
18:02:38.246 [Thread-0] Downloaded 1
18:02:38.248 [Thread-1] Parsing 1 and sleeping 1 second(s)
18:02:39.248 [Thread-1] Parsed 1
18:02:39.249 [Thread-2] Downloading 2 and sleeping 2 second(s)
18:02:41.250 [Thread-2] Downloaded 2
18:02:41.251 [Thread-3] Parsing 2 and sleeping 2 second(s)
18:02:43.251 [Thread-3] Parsed 2
18:02:43.252 [Thread-4] Downloading 3 and sleeping 1 second(s)
18:02:44.252 [Thread-4] Downloaded 3
18:02:44.253 [Thread-5] Parsing 3 and sleeping 3 second(s)
18:02:47.253 [Thread-5] Parsed 3
18:02:47.253 [main] Finished in 12 seconds, results=[1, 2, 3]</pre>
</li>
	<li>ExecutorService[code language="java"]
private static List&lt;Integer&gt; executorServiceGet() {
    List&lt;Integer&gt; numbers = Arrays.asList(1, 2, 3);

    ExecutorService executorService = Executors.newFixedThreadPool(numbers.size());
    List&lt;Future&lt;Integer&gt;&gt; downloadedFutures = numbers
        .stream()
        .map(n -&gt; {
            Callable&lt;Integer&gt; callable = () -&gt; download(n, numbers.size() - n + 1);
            return executorService.submit(callable);
        })
        .collect(Collectors.toList());

    List&lt;Future&lt;Integer&gt;&gt; parsedFutures = numbers
        .stream()
        .map(n -&gt; {
            Future&lt;Integer&gt; future = downloadedFutures.get(n - 1);
            try {
                Integer value = future.get();
                return executorService.submit(() -&gt; parse(value, n));
            } catch (InterruptedException | ExecutionException e) {
                e.printStackTrace();
            }
            return null;
        })
        .collect(Collectors.toList());

    return parsedFutures
        .stream()
        .map(future -&gt; {
            try {
                return future.get();
            } catch (InterruptedException | ExecutionException e) {
                e.printStackTrace();
            }
            return null;
        })
        .collect(Collectors.toList());
}
[/code]
<pre>18:10:11.988 [main] Started
18:10:12.106 [pool-1-thread-1] Downloading 1 and sleeping 3 second(s)
18:10:12.110 [pool-1-thread-2] Downloading 2 and sleeping 2 second(s)
18:10:12.111 [pool-1-thread-3] Downloading 3 and sleeping 1 second(s)
18:10:13.111 [pool-1-thread-3] Downloaded 3
18:10:14.111 [pool-1-thread-2] Downloaded 2
18:10:15.109 [pool-1-thread-1] Downloaded 1
18:10:15.111 [pool-1-thread-3] Parsing 1 and sleeping 1 second(s)
18:10:15.112 [pool-1-thread-2] Parsing 2 and sleeping 2 second(s)
18:10:15.112 [pool-1-thread-1] Parsing 3 and sleeping 3 second(s)
18:10:16.112 [pool-1-thread-3] Parsed 1
18:10:17.113 [pool-1-thread-2] Parsed 2
18:10:18.112 [pool-1-thread-1] Parsed 3
18:10:18.112 [main] Finished in 6 seconds, results=[1, 2, 3]</pre>
</li>
	<li>ExecutionCompletionService[code language="java"]
private static List&lt;Integer&gt; executionCompletionServiceTakeAndGet() {
    List&lt;Integer&gt; numbers = Arrays.asList(1, 2, 3);

    ExecutorService executorService = Executors.newFixedThreadPool(numbers.size());
    ExecutorCompletionService&lt;Integer&gt; executorCompletionService = new ExecutorCompletionService&lt;&gt;(executorService);

    numbers
        .stream()
        .forEach(n -&gt; executorCompletionService.submit(() -&gt; download(n, numbers.size() - n + 1)));

    numbers
        .stream()
        .forEach(ignored -&gt; {
            try {
                Future&lt;Integer&gt;future = executorCompletionService.take();
                Integer value = future.get();
                executorCompletionService.submit(() -&gt; parse(value, value));
            } catch (InterruptedException | ExecutionException e) {
                e.printStackTrace();
            }
        });

    return numbers
        .stream()
        .map(ignore -&gt; {
            try {
                Future&lt;Integer&gt; future = executorCompletionService.take();
                return future.get();
            } catch (InterruptedException | ExecutionException e) {
                e.printStackTrace();
            }
            return null;
        })
        .collect(Collectors.toList());
}
[/code]
<pre>18:18:16.548 [main] Started
18:18:16.655 [pool-1-thread-2] Downloading 2 and sleeping 2 second(s)
18:18:16.655 [pool-1-thread-3] Downloading 3 and sleeping 1 second(s)
18:18:16.655 [pool-1-thread-1] Downloading 1 and sleeping 3 second(s)
18:18:17.658 [pool-1-thread-3] Downloaded 3
18:18:17.660 [pool-1-thread-3] Parsing 3 and sleeping 3 second(s)
18:18:18.658 [pool-1-thread-2] Downloaded 2
18:18:18.658 [pool-1-thread-2] Parsing 2 and sleeping 2 second(s)
18:18:19.658 [pool-1-thread-1] Downloaded 1
18:18:19.658 [pool-1-thread-1] Parsing 1 and sleeping 1 second(s)
18:18:20.658 [pool-1-thread-2] Parsed 2
18:18:20.658 [pool-1-thread-1] Parsed 1
18:18:20.660 [pool-1-thread-3] Parsed 3
18:18:20.660 [main] Finished in 4 seconds, results=[2, 1, 3]</pre>
</li>
	<li>Parallel streams[code language="java"]
private static List&lt;Integer&gt; mapParallel() {
    List&lt;Integer&gt; numbers = Arrays.asList(1, 2, 3);

    return numbers
        .parallelStream()
        .map(n -&gt; download(n, numbers.size() - n + 1))
        .map(n -&gt; parse(n, n))
        .collect(Collectors.toList());
}[/code]
<pre>18:23:51.300 [main] Started
18:23:51.413 [main] Downloading 2 and sleeping 2 second(s)
18:23:51.413 [ForkJoinPool.commonPool-worker-1] Downloading 1 and sleeping 3 second(s)
18:23:51.413 [ForkJoinPool.commonPool-worker-2] Downloading 3 and sleeping 1 second(s)
18:23:52.416 [ForkJoinPool.commonPool-worker-2] Downloaded 3
18:23:52.416 [ForkJoinPool.commonPool-worker-2] Parsing 3 and sleeping 3 second(s)
18:23:53.416 [main] Downloaded 2
18:23:53.416 [main] Parsing 2 and sleeping 2 second(s)
18:23:54.416 [ForkJoinPool.commonPool-worker-1] Downloaded 1
18:23:54.416 [ForkJoinPool.commonPool-worker-1] Parsing 1 and sleeping 1 second(s)
18:23:55.416 [main] Parsed 2
18:23:55.416 [ForkJoinPool.commonPool-worker-1] Parsed 1
18:23:55.416 [ForkJoinPool.commonPool-worker-2] Parsed 3
18:23:55.416 [main] Finished in 4 seconds, results=[1, 2, 3]</pre>
</li>
	<li>CompletableFuture[code language="java"]
private static List&lt;Integer&gt; completableFuture() {
    List&lt;Integer&gt; numbers = Arrays.asList(1, 2, 3);

    List&lt;CompletableFuture&lt;Integer&gt;&gt; cfs = numbers
        .stream()
        .map(n -&gt;
            CompletableFuture.supplyAsync(() -&gt; download(n, numbers.size() - n + 1))
                .thenApply(id -&gt; parse(id, n)))
        .collect(Collectors.toList());

    CompletableFuture&lt;List&lt;Integer&gt;&gt; allResultsCF = CompletableFuture.allOf(cfs.toArray(new CompletableFuture[numbers.size()]))
        .thenApply(v -&gt; cfs
            .stream()
            .map(CompletableFuture::join)
            .collect(Collectors.toList())
        );

    return allResultsCF.join();
[/code]</li>
</ol>
<pre>18:25:25.722 [main] Started
18:25:25.867 [ForkJoinPool.commonPool-worker-1] Downloading 1 and sleeping 3 second(s)
18:25:25.869 [ForkJoinPool.commonPool-worker-3] Downloading 3 and sleeping 1 second(s)
18:25:25.868 [ForkJoinPool.commonPool-worker-2] Downloading 2 and sleeping 2 second(s)
18:25:26.871 [ForkJoinPool.commonPool-worker-3] Downloaded 3
18:25:26.872 [ForkJoinPool.commonPool-worker-3] Parsing 3 and sleeping 3 second(s)
18:25:27.871 [ForkJoinPool.commonPool-worker-2] Downloaded 2
18:25:27.871 [ForkJoinPool.commonPool-worker-2] Parsing 2 and sleeping 2 second(s)
18:25:28.871 [ForkJoinPool.commonPool-worker-1] Downloaded 1
18:25:28.871 [ForkJoinPool.commonPool-worker-1] Parsing 1 and sleeping 1 second(s)
18:25:29.871 [ForkJoinPool.commonPool-worker-1] Parsed 1
18:25:29.871 [ForkJoinPool.commonPool-worker-2] Parsed 2
18:25:29.872 [ForkJoinPool.commonPool-worker-3] Parsed 3
18:25:29.874 [main] Finished in 4 seconds, results=[1, 2, 3]</pre>
If we provide our own pool we get:

[code language="java"]
CompletableFuture.supplyAsync(() -&gt; download(n, numbers.size() - n + 1), executorService)
    .thenApplyAsync(id -&gt; parse(id, n), executorService)
[/code]
<pre>18:31:47.902 [main] Started
18:31:47.995 [pool-1-thread-1] Downloading 1 and sleeping 3 second(s)
18:31:47.997 [pool-1-thread-3] Downloading 3 and sleeping 1 second(s)
18:31:47.997 [pool-1-thread-2] Downloading 2 and sleeping 2 second(s)
18:31:48.999 [pool-1-thread-3] Downloaded 3
18:31:48.999 [pool-1-thread-3] Parsing 3 and sleeping 3 second(s)
18:31:49.999 [pool-1-thread-2] Downloaded 2
18:31:49.999 [pool-1-thread-2] Parsing 2 and sleeping 2 second(s)
18:31:50.999 [pool-1-thread-1] Downloaded 1
18:31:50.999 [pool-1-thread-1] Parsing 1 and sleeping 1 second(s)
18:31:51.999 [pool-1-thread-1] Parsed 1
18:31:51.999 [pool-1-thread-3] Parsed 3
18:31:51.999 [pool-1-thread-2] Parsed 2
18:31:52.001 [main] Finished in 4 seconds, results=[1, 2, 3]</pre>
&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2953</wp:post_id>
  <wp:post_date>2016-06-21 17:12:32</wp:post_date>
  <wp:post_date_gmt>2016-06-21 15:12:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>multiple-approaches-to-concurrent-processing-in-java</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="callable"><![CDATA[Callable]]></category>
  <category domain="post_tag" nicename="completablefuture"><![CDATA[CompletableFuture]]></category>
  <category domain="post_tag" nicename="completionservice"><![CDATA[CompletionService]]></category>
  <category domain="post_tag" nicename="executioncompletionservice"><![CDATA[ExecutionCompletionService]]></category>
  <category domain="post_tag" nicename="executorservice"><![CDATA[ExecutorService]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="java8"><![CDATA[java8]]></category>
  <category domain="post_tag" nicename="jdk8"><![CDATA[jdk8]]></category>
  <category domain="post_tag" nicename="parallel-stream"><![CDATA[parallel stream]]></category>
  <category domain="post_tag" nicename="thread"><![CDATA[thread]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[24049328028]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Git logs for particular user within specific date range</title>
  <link>https://bmwieczorek.wordpress.com/2016/07/01/git-logs-for-particular-user-within-specific-date-range/</link>
  <pubDate>Fri, 01 Jul 2016 13:02:07 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2976</guid>
  <description/>
  <content:encoded><![CDATA[Assuming you are in the local git repo dir, you can get git logs for particular user within specific date range:

[code language="bash"]
git log --author=&quot;Bartosz Wieczorek&quot; --pretty=format:https://git.mycompany.com/projects/repos/project1/commits/%H --since=&quot;2016-06-01 00:00:00&quot; --until=&quot;2016-06-30 23:59:59&quot;
[/code]

Output:

[code language="bash"]
https://git.mycompany.com/projects/repos/project1/commits/b85766e7d0ac2b59c0f4598864d63fc79d0f9e08
https://git.mycompany.com/projects/repos/project1/commits/63cbea050cef6b223f77f67914d16fc4192f16e1
[/code]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2976</wp:post_id>
  <wp:post_date>2016-07-01 15:02:07</wp:post_date>
  <wp:post_date_gmt>2016-07-01 13:02:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>git-logs-for-particular-user-within-specific-date-range</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="git"><![CDATA[git]]></category>
  <category domain="post_tag" nicename="git-log"><![CDATA[git log]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_oembed_1f8c481386dfd17e8241408838b7850d</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_b4d4c998c4631c8c587be94540caa784</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_1e27d2f84d366338725f1a18a703cd0c</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_fac39de460a16b10f9c8c4ea71c648e1</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[24372748318]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_78ddf40eba613d5ec595afb2e42526af</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_47182e6b6363c93cae8212bef9646982</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_d5748d65db2c6b83db571b29d242dd1d</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_680708889828ba292bfc9b1e42b7a2ce</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_3f9be9988fc3bc3588cad5b7e4f6be28</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_858fbc371ce51fcfc2317a169d805431</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_2bbca84e249062a2f6213a21d9d20d14</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_16da123957519fa93ec979fbe0f21fb7</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_0a33fe67d3a9cb4dc7feac1d9cb8b0b6</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c1bed48214f4f357ee90176326424bf1</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_49541df1a5b89af74cc89a4a53c38fac</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_eb0c63504ff15492b4a609cd2aa18544</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_8a2286efe7394fb7bd7fb0f8a561eaf9</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_a67c378366083ac60f7304c3c31c51b0</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_b8bb6c865d17c845cf9d29285acc3dbc</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_9572d91dd71fcd73ae87eccfabdaf7b7</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_a6c8e6a1a56b4ad5d60917dd61b2bcdf</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_39fcd5733d645b7ea67a69bd505562e4</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>My ubuntu proxy on virtual box</title>
  <link>https://bmwieczorek.wordpress.com/2016/07/09/my-ubuntu-proxy-on-virtual-box/</link>
  <pubDate>Fri, 08 Jul 2016 22:01:23 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2983</guid>
  <description/>
  <content:encoded><![CDATA[sudo apt-get install cntlm
sudo apt-get install docker.io
sudo apt-get install git vim

#add bartek to vboxsf group to access shared folder on vbox (relogin after)
sudo usermod -a -G vboxsf bartek

./no-proxy.sh:

#!/bin/bash
sudo cp ~/proxy/environment.orig /etc/environment
sudo rm /etc/apt/apt.conf.d/95proxies
sudo cp ~/proxy/resolv.conf.orig /etc/resolv.conf
cp ~/proxy/prefs.js.orig ~/.mozilla/firefox/q6dhtkuv.default/prefs.js
#cp ~/proxy/cntlm.conf.orig /etc/cntlm.conf
gsettings reset org.gnome.system.proxy mode
gsettings reset org.gnome.system.proxy.http port
gsettings reset org.gnome.system.proxy.http host
gsettings reset org.gnome.system.proxy use-same-proxy

./proxy.sh:

#!/bin/bash
sudo cp ~/proxy/environment.sabre-proxy /etc/environment
sudo cp ~/proxy/95proxies /etc/apt/apt.conf.d/
sudo cp ~/proxy/resolv.conf.proxy /etc/resolv.conf
cp ~/proxy/prefs.js.proxy ~/.mozilla/firefox/q6dhtkuv.default/prefs.js
#cp ~/proxy/cntlm.conf.proxy /etc/cntlm.conf
gsettings set org.gnome.system.proxy mode 'manual'
gsettings set org.gnome.system.proxy.http port 3128
gsettings set org.gnome.system.proxy.http host 'localhost'
gsettings set org.gnome.system.proxy use-same-proxy false

&nbsp;

&nbsp;

&nbsp;

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2983</wp:post_id>
  <wp:post_date>2016-07-09 00:01:23</wp:post_date>
  <wp:post_date_gmt>2016-07-08 22:01:23</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>my-ubuntu-proxy-on-virtual-box</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="proxy"><![CDATA[proxy]]></category>
  <category domain="category" nicename="ubuntu"><![CDATA[ubuntu]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[24604233993]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Install and submit jobs on Apache Spark on Linux (Ubuntu) and Windows 7</title>
  <link>https://bmwieczorek.wordpress.com/2016/07/14/install-and-submit-jobs-on-apache-spark-on-linux-ubuntu-and-windows-7/</link>
  <pubDate>Thu, 14 Jul 2016 10:46:32 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=2990</guid>
  <description/>
  <content:encoded><![CDATA[Download Apache Spark from http://spark.apache.org/downloads.html. Choose latest release (today: 1.6.2), package type Pre-built for Hadoop 2.6, direct download spark-1.6.2-bin-hadoop2.6.tgz.

I have JDK 1.8 and Spark extracted locally to c:\dev\env. I have sample spark project on my github https://github.com/bmwieczorek/my-projects.git so that locally it available under: c:\dev\my-projects\my-apache-spark with target\spark-example-0.3-SNAPSHOT.jar build using maven.

In order to avoid uploading 180MB of spark-1.6.2-bin-hadoop2.6\lib\spark-assembly-1.6.2-hadoop2.6.0.jar to hdfs every time I call spark-submit I have set variable SPARK_JAR=hdfs:///user/bdaldr/apps/spark/spark-assembly-1.6.1-hadoop2.6.0.jar poiniting to the spark assemly that I have manually uploaded in advance.

As I am setting master to yarn in spark-submit I need to specify HADOOP_CONF_DIR or YARN_CONF_DIR. In my project I have pointing it to dir with core-site.xml with

[code language="xml"]
&lt;property&gt;
&lt;name&gt;fs.defaultFS&lt;/name&gt;
&lt;value&gt;hdfs://hadoop01:8020&lt;/value&gt;
&lt;/property&gt;
[/code]

(or specify the host and port explicitly in hdfs://hadoop01:8020/user... in spark-submit parameters)
and yarn-site.xml with:

[code language="xml"]
&lt;property&gt;
&lt;name&gt;yarn.resourcemanager.address&lt;/name&gt;
&lt;value&gt;hadoop01:8032&lt;/value&gt;
&lt;/property&gt;
[/code]

and other yarn properties.
For windows only, In order to get rid of null\bin\winutils.exe warining I have added winutils.exe to my-projects\my-apache-spark\bin and I am setting HADOOP_HOME to the parent folder of bin (so here my-apache-spark).

Windows output (from Intellij terminal but can be also from CMD):

Microsoft Windows [Version 6.1.7601]
Copyright (c) 2009 Microsoft Corporation. All rights reserved.

[code]
C:\dev&gt;echo %JAVA_HOME%
C:\dev\env\jdk1.8.0_92

C:\dev&gt;java -version
java version &quot;1.8.0_92&quot;
Java(TM) SE Runtime Environment (build 1.8.0_92-b14)
Java HotSpot(TM) 64-Bit Server VM (build 25.92-b14, mixed mode)

C:\dev&gt;set HADOOP_HOME=C:\dev\my-projects\my-apache-spark

C:\dev&gt;set SPARK_HOME=c:\dev\env\spark-1.6.2-bin-hadoop2.6

C:\dev&gt;set YARN_CONF_DIR=c:\dev\env\hadoop01-hadoop-conf

C:\dev&gt;set SPARK_JAR=hdfs:///user/bdaldr/apps/spark/spark-assembly-1.6.1-hadoop2.6.0.jar

C:\dev&gt;c:\dev\env\spark-1.6.2-bin-hadoop2.6\bin\spark-submit --class com.geekcap.javaworld.sparkexample.WordCount --master yarn --deploy-mode cluster c:\dev\my-projects\my-apache-spark\target\spark-ex
ample-0.3-SNAPSHOT.jar hdfs:///user/bdaldr/bartek/pom.xml
16/07/14 12:27:14 INFO client.RMProxy: Connecting to ResourceManager at hadoop01/10.14.236.209:8032
16/07/14 12:27:15 INFO yarn.Client: Requesting a new application from cluster with 4 NodeManagers
16/07/14 12:27:15 INFO yarn.Client: Verifying our application has not requested more than the maximum memory capability of the cluster (8192 MB per container)
16/07/14 12:27:15 INFO yarn.Client: Will allocate AM container, with 1408 MB memory including 384 MB overhead
16/07/14 12:27:15 INFO yarn.Client: Setting up container launch context for our AM
16/07/14 12:27:15 INFO yarn.Client: Setting up the launch environment for our AM container
16/07/14 12:27:15 WARN yarn.Client: SPARK_JAR detected in the system environment. This variable has been deprecated in favor of the spark.yarn.jar configuration variable.
16/07/14 12:27:15 INFO yarn.Client: Preparing resources for our AM container
16/07/14 12:27:17 WARN yarn.Client: SPARK_JAR detected in the system environment. This variable has been deprecated in favor of the spark.yarn.jar configuration variable.
16/07/14 12:27:17 INFO yarn.Client: Source and destination file systems are the same. Not copying hdfs:/user/bdaldr/apps/spark/spark-assembly-1.6.1-hadoop2.6.0.jar
16/07/14 12:27:17 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
16/07/14 12:27:19 INFO yarn.Client: Uploading resource file:/c:/dev/my-projects/my-apache-spark/target/spark-example-0.3-SNAPSHOT.jar -&gt; hdfs://hadoop01:8020/user/me/.sparkStaging/applica
tion_1466685646767_2830/spark-example-0.3-SNAPSHOT.jar
16/07/14 12:27:22 INFO yarn.Client: Uploading resource file:/C:/Users/me/AppData/Local/Temp/spark-07500b5c-eebd-4f46-ab53-b0dec0c009b1/__spark_conf__6038219904436967197.zip -&gt; hdfs://hadoop01:8020/user/me/.sparkStaging/application_1466685646767_2830/__spark_conf__6038219904436967197.zip
16/07/14 12:27:25 INFO spark.SecurityManager: Changing view acls to: me
16/07/14 12:27:25 INFO spark.SecurityManager: Changing modify acls to: me
16/07/14 12:27:25 INFO spark.SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: Set(me); users with modify permissions: Set(me)
16/07/14 12:27:25 INFO yarn.Client: Submitting application 2830 to ResourceManager
16/07/14 12:27:26 INFO impl.YarnClientImpl: Submitted application application_1466685646767_2830
16/07/14 12:27:27 INFO yarn.Client: Application report for application_1466685646767_2830 (state: ACCEPTED)
16/07/14 12:27:27 INFO yarn.Client:
client token: N/A
diagnostics: N/A
ApplicationMaster host: N/A
ApplicationMaster RPC port: -1
queue: root.me
start time: 1468492046168
final status: UNDEFINED
tracking URL: http://hadoop01:8088/proxy/application_1466685646767_2830/
user: me
16/07/14 12:27:28 INFO yarn.Client: Application report for application_1466685646767_2830 (state: ACCEPTED)
16/07/14 12:27:30 INFO yarn.Client: Application report for application_1466685646767_2830 (state: RUNNING)
16/07/14 12:27:30 INFO yarn.Client:
client token: N/A
diagnostics: N/A
ApplicationMaster host: 10.14.236.212
ApplicationMaster RPC port: 0
queue: root.me
start time: 1468492046168
final status: UNDEFINED
tracking URL: http://hadoop01:8088/proxy/application_1466685646767_2830/
user: me
16/07/14 12:27:31 INFO yarn.Client: Application report for application_1466685646767_2830 (state: RUNNING)
16/07/14 12:27:32 INFO yarn.Client: Application report for application_1466685646767_2830 (state: RUNNING)
16/07/14 12:27:33 INFO yarn.Client: Application report for application_1466685646767_2830 (state: RUNNING)
16/07/14 12:27:34 INFO yarn.Client: Application report for application_1466685646767_2830 (state: RUNNING)
16/07/14 12:27:36 INFO yarn.Client: Application report for application_1466685646767_2830 (state: RUNNING)
16/07/14 12:27:37 INFO yarn.Client: Application report for application_1466685646767_2830 (state: FINISHED)
16/07/14 12:27:37 INFO yarn.Client:
client token: N/A
diagnostics: N/A
ApplicationMaster host: 10.14.236.212
ApplicationMaster RPC port: 0
queue: root.me
start time: 1468492046168
final status: SUCCEEDED
tracking URL: http://hadoop01:8088/proxy/application_1466685646767_2830/A
user: me
16/07/14 12:27:37 INFO util.ShutdownHookManager: Shutdown hook called
16/07/14 12:27:37 INFO util.ShutdownHookManager: Deleting directory C:\Users\me\AppData\Local\Temp\spark-07500b5c-eebd-4f46-ab53-b0dec0c009b1
[/code]

Here is the result output:

[code language="bash"]
$ ssh bdaldr@hadoop01 &quot;hadoop fs -ls /user/me&quot;
Found 2 items
drwxr-xr-x - me supergroup 0 2016-07-14 07:11 /user/me/.sparkStaging
drwxr-xr-x - me supergroup 0 2016-07-14 07:11 /user/me/output

$ ssh bdaldr@hadoop01 &quot;hadoop fs -ls /user/me/output&quot;
Found 3 items
-rw-r--r-- 3 me supergroup 0 2016-07-14 07:11 /user/me/output/_SUCCESS
-rw-r--r-- 3 me supergroup 978 2016-07-14 07:11 /user/me/output/part-00000
-rw-r--r-- 3 me supergroup 669 2016-07-14 07:11 /user/me/output/part-00001

$ ssh bdaldr@hadoop01 &quot;hadoop fs -cat /user/me/output/part-00000&quot;
(&lt;build&gt;,1)
(&lt;id&gt;copy&lt;/id&gt;,1)
(&lt;mainClass&gt;com.geekcap.javaworld.sparkexample.WordCount&lt;/mainClass&gt;,1)
(&lt;/executions&gt;,1)
(--&gt;,1)
(&lt;groupId&gt;org.apache.spark&lt;/groupId&gt;,1)
(&lt;/dependency&gt;,1)
(&lt;plugins&gt;,1)
(&lt;url&gt;http://maven.apache.org&lt;/url&gt;,1)
(xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;,1)
(&lt;version&gt;1.6.2&lt;/version&gt;,1)
(&lt;/manifest&gt;,1)
(&lt;/project&gt;,1)
(&lt;version&gt;2.10&lt;/version&gt;,1)
(,888)
(xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0,1)
(&lt;archive&gt;,1)
(&lt;version&gt;3.5.1&lt;/version&gt;,1)
(&lt;groupId&gt;com.geekcap.javaworld&lt;/groupId&gt;,1)
(&lt;source&gt;1.8&lt;/source&gt;,1)
(&lt;/dependencies&gt;,1)
(&lt;goals&gt;,1)
(&lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;,1)
(&lt;target&gt;1.8&lt;/target&gt;,1)
(&lt;artifactId&gt;maven-dependency-plugin&lt;/artifactId&gt;,1)
(&lt;version&gt;3.0.2&lt;/version&gt;,1)
(&lt;goal&gt;copy-dependencies&lt;/goal&gt;,1)
(&lt;/plugin&gt;,3)
(&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;,3)
(&lt;packaging&gt;jar&lt;/packaging&gt;,1)
(&lt;configuration&gt;,3)
(&lt;phase&gt;install&lt;/phase&gt;,1)
(&lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;,1)
(&lt;execution&gt;,1)

$ ssh bdaldr@hadoop01 &quot;hadoop fs -cat /user/me/output/part-00001&quot;
(xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;,1)
(&lt;/archive&gt;,1)
(Spark,1)
(http://maven.apache.org/maven-v4_0_0.xsd&quot;&gt;,1)
(&lt;addClasspath&gt;true&lt;/addClasspath&gt;,1)
(&lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;,1)
(&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;,1)
(&lt;/goals&gt;,1)
(&lt;/configuration&gt;,3)
(&lt;plugin&gt;,3)
(&lt;manifest&gt;,1)
(&lt;classpathPrefix&gt;lib/&lt;/classpathPrefix&gt;,1)
(Import,1)
(&lt;dependency&gt;,1)
(&lt;executions&gt;,1)
(&lt;/plugins&gt;,1)
(&lt;artifactId&gt;spark-example&lt;/artifactId&gt;,1)
(&lt;dependencies&gt;,1)
(&lt;project,1)
(&lt;/build&gt;,1)
(&lt;name&gt;spark-example&lt;/name&gt;,1)
(&lt;!--,1)
(&lt;artifactId&gt;spark-core_2.11&lt;/artifactId&gt;,1)
(&lt;outputDirectory&gt;${project.build.directory}/lib&lt;/outputDirectory&gt;,1)
(&lt;/execution&gt;,1)
[/code]

At the end of each run I need to clear the output folder by:

[code language="bash"]
ssh bdaldr@hadoop01 &quot;hadoop fs -rm -r /user/me&quot;
[/code]

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2990</wp:post_id>
  <wp:post_date>2016-07-14 12:46:32</wp:post_date>
  <wp:post_date_gmt>2016-07-14 10:46:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>install-and-submit-jobs-on-apache-spark-on-linux-ubuntu-and-windows-7</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[24774989537]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Local installation of Oracle 11g Express Edition XE on Windows 7</title>
  <link>https://bmwieczorek.wordpress.com/2016/08/10/local-installation-of-oracle-11g-express-edition-xe-on-windows-7/</link>
  <pubDate>Wed, 10 Aug 2016 12:05:07 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=3013</guid>
  <description/>
  <content:encoded><![CDATA[<ol>
	<li>Download "latest" http://www.oracle.com/technetwork/database/database-technologies/express-edition/overview/index.html</li>
	<li>Install to dir without spaces e.g. c:/dev/env/</li>
	<li>Type"services" in Windows programs search to start services program. View service names starting with Oracle. You should see:
<ol>
	<li>OracleJobSchedulerXE</li>
	<li>OracleMTSRecoveryService</li>
	<li>OracleServiceXE</li>
	<li>OracleXEClrAgent</li>
	<li>OracleXETNSListener</li>
</ol>
</li>
	<li>Change startup type to manual for all of them. When you want to start Oracle XE just start manually: OracleServiceXE and OracleXETNSListener</li>
	<li>When you cannot connect to the listener due to:
[code]
Caused by: oracle.net.ns.NetException: Listener refused the connection with the following error:
ORA-12514, TNS:listener does not currently know of service requested in connect descriptor
[/code]
then check port and hostname in listener.ora and tnsanmes.org (present for my installation in C:\dev\env\oracle11gXE\app\oracle\product\11.2.0\server\network\ADMIN) :
[code]
...

LISTENER =
 (DESCRIPTION_LIST =
 (DESCRIPTION =
 (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1))
 (ADDRESS = (PROTOCOL = TCP)(HOST = DCNU251B78K.mydomain.com)(PORT = 1521))
 )
 )

DEFAULT_SERVICE_LISTENER = (XE)
[/code]

and

[code] XE =
 (DESCRIPTION =
 (ADDRESS = (PROTOCOL = TCP)(HOST = DCNU251B78K.mydomain.com)(PORT = 1521))
 (CONNECT_DATA =
 (SERVER = DEDICATED)
 (SERVICE_NAME = XE)
 )
 )
...
[/code]

Here my host is DCNU251B78K.mydomain.com and port 1521</li>
	<li>Then make sure you SqlDeveloper settions are:
<ol>
	<li>Connection type: Basic</li>
	<li>Role: default</li>
	<li>Hostname: localhost</li>
	<li>Port: 1521</li>
	<li>Selected SID: XE</li>
</ol>
</li>
	<li>If you still cannot connect due to listener problem then open Windows command line (type CMD in Windows program) and type:
[code]
Microsoft Windows [Version 6.1.7601]
Copyright (c) 2009 Microsoft Corporation. All rights reserved.

C:\Users\me&gt;sqlplus &quot;/as sysdba&quot;

SQL*Plus: Release 11.2.0.2.0 Production on Wed Aug 10 13:27:24 2016

Copyright (c) 1982, 2014, Oracle. All rights reserved.

Connected to:
Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production

SQL&gt; alter system set LOCAL_LISTENER='(ADDRESS=(PROTOCOL=TCP)(HOST=localhost)(PORT=1521))' scope=both;

System altered.

SQL&gt; alter system register;

System altered.

SQL&gt;

[/code]</li>
</ol>
and try to reconnect using SqlDeveloper or your app. Alternatively restart OracleServiceXE and OracleXETNSListener services and run the SQL alter statements.

8. Output of the command below should list now XE (which was missing earlier for ORA-12514)

[code]
C:\Users\me&gt;lsnrctl status

LSNRCTL for 64-bit Windows: Version 11.2.0.2.0 - Production on 10-AUG-2016 14:09:27

Copyright (c) 1991, 2014, Oracle. All rights reserved.

Connecting to (DESCRIPTION=(ADDRESS=(PROTOCOL=IPC)(KEY=EXTPROC1))) STATUS of the LISTENER
------------------------
Alias LISTENER
Version TNSLSNR for 64-bit Windows: Version 11.2.0.2.0 - Production
Start Date 10-AUG-2016 13:03:59
Uptime 0 days 1 hr. 5 min. 34 sec
Trace Level off
Security ON: Local OS Authentication
SNMP OFF
Default Service XE
Listener Parameter File C:\dev\env\oracle11gXE\app\oracle\product\11.2.0\server\network\admin\listener.ora
Listener Log File C:\dev\env\oracle11gXE\app\oracle\diag\tnslsnr\DCNU251B78K\listener\alert\log.xml
Listening Endpoints Summary...
(DESCRIPTION=(ADDRESS=(PROTOCOL=ipc)(PIPENAME=\\.\pipe\EXTPROC1ipc)))
(DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=DCNU251B78K.mycompany.com)(PORT=1521)))
(DESCRIPTION=(ADDRESS=(PROTOCOL=tcp)(HOST=127.0.0.1)(PORT=1521)))
Services Summary...
Service &quot;CLRExtProc&quot; has 1 instance(s).
Instance &quot;CLRExtProc&quot;, status UNKNOWN, has 1 handler(s) for this service...
Service &quot;PLSExtProc&quot; has 1 instance(s).
Instance &quot;PLSExtProc&quot;, status UNKNOWN, has 1 handler(s) for this service...
Service &quot;XEXDB&quot; has 1 instance(s).
Instance &quot;xe&quot;, status READY, has 1 handler(s) for this service...
Service &quot;xe&quot; has 1 instance(s).
Instance &quot;xe&quot;, status READY, has 1 handler(s) for this service...
The command completed successfully
[/code]

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3013</wp:post_id>
  <wp:post_date>2016-08-10 14:05:07</wp:post_date>
  <wp:post_date_gmt>2016-08-10 12:05:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>local-installation-of-oracle-11g-express-edition-xe-on-windows-7</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="11g"><![CDATA[11g]]></category>
  <category domain="post_tag" nicename="ora-12514"><![CDATA[ORA-12514]]></category>
  <category domain="category" nicename="oracle"><![CDATA[Oracle]]></category>
  <category domain="post_tag" nicename="oracle-express-edition"><![CDATA[Oracle Express Edition]]></category>
  <category domain="post_tag" nicename="oracle-xe"><![CDATA[Oracle XE]]></category>
  <category domain="post_tag" nicename="oracleservicexe"><![CDATA[OracleServiceXE]]></category>
  <category domain="post_tag" nicename="oraclexetnslistener"><![CDATA[OracleXETNSListener]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[25648897524]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Mac shortcuts</title>
  <link>https://bmwieczorek.wordpress.com/2016/09/21/mac-shortcuts/</link>
  <pubDate>Wed, 21 Sep 2016 10:56:18 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=3073</guid>
  <description/>
  <content:encoded><![CDATA[cmd+W - close window
cmd+Q - quit window
cmd+tab - switch windows

alt + cmd + space - open finder
cmd + shift + m - toggle zoom: maximize/minimize window
cmd + m - minimize application to dock icon (un-minize - select app with cmd+tab, while pressing cmd, start pressing alt and release cmd)
F5 for Reload This Page - System Preferences/Keyboad/Shortcuts/App Shortcuts/+ to add Google Chrome application, title Reload This Page/shortcut F5
F11 - show desktop
F3 - show mission control (all windows) or 3 fingers swipe up
ctrl+ down arrow - show Application Windows for (App Expose) or 3 fingers swipe down
ctrl + up arrow - show Mission control
ctrl + F8 + down arrow + down arrow + enter - lock screen (Utilities/KeyChain Access/Preferences/General: check: Show keychain status in menu bar)

<strong>Terminal</strong>:
alt + right/left arrow - move one word forward / backward
ctrl + A / E (or fn + shift + left/right arrow) - move to the begin / end of line

<strong>TextEdit/Browser</strong> (alt and cmd):
alt + right/left arrow - move cursor one word forward/backward
cmd + right/left arrow - move to end/begin of line (also ctrl + right/left when disabled remapped Mission Control)
cmd + up/down arrow  - move cursor to home/end
fn+right/left arrow - go to home/end
fn+up/down arrow - page up/down (curson does not move)
shift + alt +right/left - select one word from cursor to right/left
shift + cmd + right/left - select words from cursor to end/begin of line
cmd + c / v / x - copy / paste / remove
ctrl + tab - move between tabs in chrome
cmd + alt + shift + v - paste formatted text but adjust to the format of target text

<strong>Vim</strong> (fn and ctrl, does not use cmd so be able use the same keys in Windows/Linux):
fn + right/left - move to the begin/end of line (fn since no home/end button)
ctrl + right/left - move to the one word forward/backward (with disabled/remapped Mission Control)
cmd + shift + v - paste selected text (needs to be selected via mouse)

<strong>My Intellij</strong> (fn and ctrl, does not use cmd so be able use the same keys in Windows/Linux):
fn + right/left - move to the begin/end of line (fn since no home/end button)
ctrl + right/left - move one word forward/backward (with disabled/remapped Mission Control)
shift + fn + right/left - select words from curson to the begin/end of line
shift + ctrl + right/left - select one word forward/backward (with disabled/remapped Mission Control)
ctrl + c / v / x - copy / paste / remove

Setup
<ol>
<ol>
	<li>Turn off AutoCorrect: Apple Menu &gt; System Preferences &gt; Keyboard &gt; Text and turn  Autocorrect off by unchecking Correct spelling automatically</li>
	<li>Add ssh autocompletion for bash by appending ~/.bash_profile or ~/.bashrc:</li>
</ol>
</ol>
[code language="bash"]
_complete_ssh_hosts ()
{
    COMPREPLY=()
    cur=&quot;${COMP_WORDS[COMP_CWORD]}&quot;
    comp_ssh_hosts=`
#        cat ~/.ssh/known_hosts | \
#        cut -f 1 -d ' ' | \
#        sed -e s/,.*//g | \
#        grep -v ^# | \
#        uniq | \
#        grep -v &quot;\[&quot; ;
        cat ~/.ssh/config | \
        grep &quot;^Host &quot; | \
        awk '{print $2}'
    `
    COMPREPLY=( $(compgen -W &quot;${comp_ssh_hosts}&quot; -- $cur))
    return 0
}
complete -F _complete_ssh_hosts ssh
[/code]
<ol>
<ol>
	<li>Terminal prompt structure and colors:</li>
</ol>
</ol>
[code language="bash"]
export PS1=&quot;\[&#092;&#048;33[01;32m\]\u@MacBook\[&#092;&#048;33[00m\]:\[&#092;&#048;33[01;34m\]\w\[&#092;&#048;33[00m\]\$ &quot;
export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad
alias ls='ls -Gh'
[/code]

brew install svn (append .bash_profile: export PATH=/usr/local/bin:${PATH})
brew install maven
brew install cntlm

Settings -&gt; Keyboard/Text: disable use smart quotes and dashes

Finder -&gt; Preferences/Advanced/Show all filename extensions]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3073</wp:post_id>
  <wp:post_date>2016-09-21 12:56:18</wp:post_date>
  <wp:post_date_gmt>2016-09-21 10:56:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>mac-shortcuts</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="mac"><![CDATA[mac]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[2565591]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[27052903195]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Backup rsync</title>
  <link>https://bmwieczorek.wordpress.com/2016/10/28/backup/</link>
  <pubDate>Fri, 28 Oct 2016 19:15:24 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=3110</guid>
  <description/>
  <content:encoded><![CDATA[1. Initial source folder structure:
[code language="bash"]
me@MacBook:~/tmp$ find source
source
source/.DS_Store
source/a
source/b
source/dev
source/dev/.DS_Store
source/dev/x
source/dev/y.orig.vhd
source/dev/y.vhd
[/code]

2. Lets backup source folder to destination folder using rsync
[code language="bash"]
me@MacBook:~/tmp$ rsync -abvP  --backup-dir=backup_`date +%Y-%m-%d--%H-%M-%S` --include=*.orig.vhd --exclude={/backup_*,.DS_Store,*.vhd} --delete source/ destination/
building file list ... 
6 files to consider
created directory destination
./
a
           1 100%    0.00kB/s    0:00:00 (xfer#1, to-check=4/6)
b
           1 100%    0.98kB/s    0:00:00 (xfer#2, to-check=3/6)
dev/
dev/x
           1 100%    0.98kB/s    0:00:00 (xfer#3, to-check=1/6)
dev/y.orig.vhd
           1 100%    0.98kB/s    0:00:00 (xfer#4, to-check=0/6)

sent 343 bytes  received 120 bytes  926.00 bytes/sec
total size is 4  speedup is 0.01
[/code]
explanation:
[code language="bash"]--include=*.orig.vhd[/code] do not exclude files *.orig.vhd for any source (sub)directories (since include is before exclude then inclusion will first match rather then exclusion from *.vhd)

[code language="bash"]--exclude={/backup_*,.DS_Store,*.vhd}[/code] copy all files excluding ~/tmp/backup_* files, excluding all .DS_Store and *.vhd files in any (sub)directories


3. The destination directory content:
[code language="bash"]
me@MacBook:~/tmp$ find destination
destination
destination/a
destination/b
destination/dev
destination/dev/x
destination/dev/y.orig.vhd
[/code]


4. Lets modify one file and delete another and then run the same rsync command:
[code language="bash"]
me@MacBook:~/tmp$ echo &quot;2&quot; &gt; source/a 
me@MacBook:~/tmp$ rm source/dev/x
me@MacBook:~/tmp$ rsync -abvP  --backup-dir=backup_`date +%Y-%m-%d--%H-%M-%S` --include=*.orig.vhd --exclude={/backup_*,.DS_Store,*.vhd} --delete source/ destination/
building file list ... 
5 files to consider
deleting dev/x
./
a
           2 100%    0.00kB/s    0:00:00 (xfer#1, to-check=3/5)
dev/

sent 195 bytes  received 54 bytes  498.00 bytes/sec
total size is 4  speedup is 0.02
[/code]
[code language="bash"]--backup-dir=backup_`date +%Y-%m-%d--%H-%M-%S`[/code] creates a backup folder in destination dir with previous versions of modified or deleted files
[code language="bash"]--delete[/code] deletes the file in destination folder if they were deleted in the source dir

5. Then the destination folder will contain backup_2016-10-29--12-26-06 with previous version of a and dev/x before deletion:
[code language="bash"]
me@MacBook:~/tmp$ find destination
destination
destination/a
destination/b
destination/backup_2016-10-29--12-26-06
destination/backup_2016-10-29--12-26-06/a
destination/backup_2016-10-29--12-26-06/dev
destination/backup_2016-10-29--12-26-06/dev/x
destination/dev
destination/dev/y.orig.vhd
[/code]


]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3110</wp:post_id>
  <wp:post_date>2016-10-28 21:15:24</wp:post_date>
  <wp:post_date_gmt>2016-10-28 19:15:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>backup</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="backup"><![CDATA[backup]]></category>
  <category domain="category" nicename="linux"><![CDATA[Linux]]></category>
  <category domain="category" nicename="mac"><![CDATA[mac]]></category>
  <category domain="post_tag" nicename="rsync"><![CDATA[rsync]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>timeline_notification</wp:meta_key>
    <wp:meta_value><![CDATA[1477682132]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[28335410470]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Docker quickstart cloudera</title>
  <link>https://bmwieczorek.wordpress.com/2016/12/23/docker-quickstart-cloudera/</link>
  <pubDate>Fri, 23 Dec 2016 10:37:15 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=3128</guid>
  <description/>
  <content:encoded><![CDATA[me@MacBook:~$ docker pull cloudera/quickstart:latest
latest: Pulling from cloudera/quickstart
1d00652ce734: Pull complete
Digest: sha256:f91bee4cdfa2c92ea3652929a22f729d4d13fc838b00f120e630f91c941acb63
Status: Downloaded newer image for cloudera/quickstart:latest

docker images

docker run --hostname=quickstart.cloudera --privileged=true -t -i --hostname=quickstart.cloudera --privileged=true -t -i -p 8888:8888 -p80:80 -p7180:7180 --name quickstart.cloudera -d 4239cd2958c6 /usr/bin/docker-quickstart

me@MacBook:~/dev/env$ docker ps
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
da0050c427c3 4239cd2958c6 "/usr/bin/docker-quic" 3 hours ago Up 3 hours 0.0.0.0:80-&gt;80/tcp, 0.0.0.0:7180-&gt;7180/tcp, 0.0.0.0:8888-&gt;8888/tcp quickstart.cloudera

docker attach quickstart.cloudera

ctrl + p + ctrl + q (detach the tty)

docker start quickstart.cloudera

me@MacBook:~$ docker stop -t 120 quickstart.cloudera
quickstart.cloudera

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3128</wp:post_id>
  <wp:post_date>2016-12-23 11:37:15</wp:post_date>
  <wp:post_date_gmt>2016-12-23 10:37:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>docker-quickstart-cloudera</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="cloudera"><![CDATA[cloudera]]></category>
  <category domain="category" nicename="docker"><![CDATA[docker]]></category>
  <category domain="post_tag" nicename="quickstart"><![CDATA[quickstart]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[13284382]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>grep egrep sed match replace part of the text</title>
  <link>https://bmwieczorek.wordpress.com/2016/12/30/grep-egrep-sed-match-replace-part-of-the-text/</link>
  <pubDate>Fri, 30 Dec 2016 18:57:48 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=3137</guid>
  <description/>
  <content:encoded><![CDATA[[code language="bash"]
url=http://svn.dev.mycompany.com/svn/myproject/branches/mybranch
svn log $url -r {2016-12-01}:{2016-12-30} --search Bartosz
[/code]
<pre>------------------------------------------------------------------------
r324 | bartosz@mycompany.com | 2016-12-14 17:11:44 +0100 (Wed, 14 Dec 2016) | 1 line

created mybranch
------------------------------------------------------------------------</pre>
expected output:
<pre>http://svn.dev.mycompany.com/svn/myproject/branches/mybranch/?p=123 | bartosz@mycompany.com | 2016-12-14 17:11:44 +0100 (Wed, 14 Dec 2016)</pre>
[code language="bash"]
url=http://svn.dev.mycompany.com/svn/myproject/branches/mybranch
svn log $url -r {2016-12-01}:{2016-12-30} --search Bartosz | egrep '^r[0-9]+' | sed &quot;s|\(^r\)\([0-9]*\)|$url/?p=\2|&quot; | sed 's/ | [0-9]* line.*$//'
[/code]

where

[code language="bash"]egrep '^r[0-9]+'[/code]

is equivalent to extended grep -E and matches begging of line with rRev e.g r123

[code language="bash"]sed &quot;s|\(^r\)\([0-9]*\)|$url/?p=\2|&quot;[/code]

- with '/' replaced by '|' and taking only revision number (skipping 'r' in the beginning) and adding the url: 'r123' -&gt; 'http://svn.dev.mycompany.com/svn/myproject/branches/mybranch/?p=123'

[code language="bash"]sed 's/ | [0-9]* line.*$//'[/code]

- removes last part of message e.g.: ' | 1 line']]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3137</wp:post_id>
  <wp:post_date>2016-12-30 19:57:48</wp:post_date>
  <wp:post_date_gmt>2016-12-30 18:57:48</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>grep-egrep-sed-match-replace-part-of-the-text</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="egrep"><![CDATA[egrep]]></category>
  <category domain="category" nicename="grep"><![CDATA[grep]]></category>
  <category domain="post_tag" nicename="parts"><![CDATA[parts]]></category>
  <category domain="post_tag" nicename="pattern"><![CDATA[pattern]]></category>
  <category domain="category" nicename="sed"><![CDATA[sed]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[238836908]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>My text editors for xml and json - sublime and notepad++</title>
  <link>https://bmwieczorek.wordpress.com/2017/01/05/my-text-editors-for-xml-and-json-sublime-and-notepad/</link>
  <pubDate>Thu, 05 Jan 2017 15:36:29 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=3148</guid>
  <description/>
  <content:encoded><![CDATA[Notepad++ - install version 32 bit since 64bit does not support plugin manager and some other plugins. Then go to plugins/plugin manager/ install: xml tools and go to '?' to go to Get more plugins and search for 'Json Viewer', download the zip file, extract it and place dll file to C:/Program Files(x64)/Notepad++/plugins dir

Sublime Text editor 3:  ensure that 'Package Control' is installed by going to https://packagecontrol.io/installation, go to View -&gt; console, copy and paste text, restart sublime, then go to Preferences/Package Control, and type 'install package', hit enter, type xpath for list of plugins and choose 'xpath' and 'Indent-xml']]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3148</wp:post_id>
  <wp:post_date>2017-01-05 16:36:29</wp:post_date>
  <wp:post_date_gmt>2017-01-05 15:36:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>my-text-editors-for-xml-and-json-sublime-and-notepad</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="text-editor"><![CDATA[text editor]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[435754630]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>curl download file from ftp with user and password</title>
  <link>https://bmwieczorek.wordpress.com/2017/05/05/curl-download-file-from-ftp-with-user-and-password/</link>
  <pubDate>Fri, 05 May 2017 07:31:07 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=3173</guid>
  <description/>
  <content:encoded><![CDATA[[code language="bash"]
me@MacBook:~/Downloads$ curl -OLv -u myusername:mypassword ftp://myftphost/myfile
% Total % Received % Xferd Average Speed Time Time Time Current
Dload Upload Total Spent Left Speed
0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0* Trying myftpip...
0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0* Connected to myftphost (myftpip) port 21 (#0)
&lt; 220 FTP server ready
&gt; USER myusername
&lt; 331 Password required for myusername
&gt; PASS mypassword
&lt; 230 User myusername logged in
&gt; PWD
&lt; 257 &quot;/&quot; is the current directory
* Entry path is '/'
&gt; EPSV
* Connect data stream passively
* ftp_perform ends with SECONDARY: 0
&lt; 229 Entering Extended Passive Mode (|||44363|)
* Trying myftpip...
* Connecting to myftpip (myftpip) port 44363
0 0 0 0 0 0 0 0 --:--:-- 0:00:01 --:--:-- 0* Connected to myftphost (myftpip) port 21 (#0)
&gt; TYPE I
&lt; 200 Type set to I
&gt; SIZE myfile
&lt; 213 173938503
&gt; RETR myfile
&lt; 150 Opening BINARY mode data connection for myfile (173938503 bytes)
* Maxdownload = -1
* Getting file with size: 173938503
{ [1448 bytes data]
99 165M 99 164M 0 0 3881k 0 0:00:43 0:00:43 --:--:-- 3925k* Remembering we are in dir &quot;&quot;
&lt; 226 Transfer complete
100 165M 100 165M 0 0 3885k 0 0:00:43 0:00:43 --:--:-- 4004k
* Connection #0 to host myftphost left intact
[/code]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3173</wp:post_id>
  <wp:post_date>2017-05-05 09:31:07</wp:post_date>
  <wp:post_date_gmt>2017-05-05 07:31:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>curl-download-file-from-ftp-with-user-and-password</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="curl"><![CDATA[curl]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[4719853242]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Unions and default value in apache avro serialization and deserialization</title>
  <link>https://bmwieczorek.wordpress.com/2017/05/29/unions-and-default-value-in-apache-avro-serialization-and-deserialization/</link>
  <pubDate>Mon, 29 May 2017 19:53:30 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=3179</guid>
  <description/>
  <content:encoded><![CDATA[Initial avro schema (<code>schema/user.avsc</code>) defines a <code>User</code> record with a <code>name</code> field only.

[code language="bash"]
{
  &quot;namespace&quot;: &quot;com.bawi.avro.model&quot;,
  &quot;type&quot;: &quot;record&quot;,
  &quot;name&quot;: &quot;User&quot;,
  &quot;fields&quot;: [
    {
      &quot;name&quot;: &quot;name&quot;,
      &quot;type&quot;: &quot;string&quot;
    }
  ]
}
[/code]

Maven pom.xml defines avro dependency
[code language="xml"]
        &lt;dependency&gt;
            &lt;groupId&gt;org.apache.avro&lt;/groupId&gt;
            &lt;artifactId&gt;avro&lt;/artifactId&gt;
            &lt;version&gt;1.8.1&lt;/version&gt;
        &lt;/dependency&gt;
[/code]

so we can serialize the <code>User</code> data in Java to disc to <code>user.avro</code> file
[code language="java"]
        Schema schema = new Schema.Parser().parse(new File(&quot;schema/user.avsc&quot;));
        File avroFile = new File(&quot;target/user.avro&quot;);
        GenericRecord user = new GenericData.Record(schema);
        user.put(&quot;name&quot;, &quot;Alyssa&quot;);
        DatumWriter&lt;GenericRecord&gt; datumWriter = new GenericDatumWriter&lt;&gt;(schema);
        DataFileWriter&lt;GenericRecord&gt; dataFileWriter = new DataFileWriter&lt;&gt;(datumWriter);
        dataFileWriter.create(schema, avroFile);
        dataFileWriter.append(user);
        dataFileWriter.close();
[/code]

we can read (deserialize) <code>User</code> from the disc either by Java
[code language="java"]
        DatumReader&lt;GenericRecord&gt; datumReader = new GenericDatumReader&lt;&gt;(schema);
        DataFileReader&lt;GenericRecord&gt; dataFileReader = new DataFileReader&lt;&gt;(avroFile, datumReader);
        GenericRecord user = null;
        while (dataFileReader.hasNext()) {
            user = dataFileReader.next(user);
            System.out.println(user);
        }
[/code]

or by using avro-utils jar that can be downloaded by maven when declared maven test dependency:
[code language="xml"]
        &lt;dependency&gt;
            &lt;groupId&gt;org.apache.avro&lt;/groupId&gt;
            &lt;artifactId&gt;avro-tools&lt;/artifactId&gt;
            &lt;version&gt;1.8.1&lt;/version&gt;
            &lt;scope&gt;test&lt;/scope&gt;
        &lt;/dependency&gt;
[/code]

and running with 'tojson' argument
[code language="bash"]
me@MacBook:~/dev/my-projects/my-avro$ java -jar /Users/me/.m2/repository/org/apache/avro/avro-tools/1.8.1/avro-tools-1.8.1.jar tojson users.avro 
{&quot;name&quot;:&quot;Alyssa&quot;}
[/code]

Then we will add a new <code>favorite_number</code> element to the schema:
[code language="bash"]
{
  &quot;namespace&quot;: &quot;com.bawi.avro.model&quot;,
  &quot;type&quot;: &quot;record&quot;,
  &quot;name&quot;: &quot;User&quot;,
  &quot;fields&quot;: [
    {
      &quot;name&quot;: &quot;name&quot;,
      &quot;type&quot;: &quot;string&quot;
    },
    {
      &quot;name&quot;: &quot;favorite_number&quot;,
      &quot;type&quot;: &quot;int&quot;
    }
  ]
}
[/code]

and run the deserialization Java code for existing data in the <code>user.avro</code> but against the new schema, then we get:
<pre>Exception in thread "main" org.apache.avro.AvroTypeException: Found com.bawi.avro.model.User, expecting com.bawi.avro.model.User, missing required field favorite_number</pre> 
since the <code>favorite_number</code> does not exist in avro file.

Adding only a <strong>union</strong> of <code>int</code> and <code>null</code> value does not help to get rid the error above. 

The solution is to add a <strong>default value</strong> with a <strong>union</strong> for <code>favorite_number</code> e.g.:
[code language="bash"]
    {
      &quot;name&quot;: &quot;favorite_number&quot;,
      &quot;type&quot;: [
        &quot;null&quot;,
        &quot;int&quot;
      ],
      &quot;default&quot;: null
    }
[/code]
to get: {"name": "Alyssa", "favorite_number": null}
or add
[code language="bash"]
    {
      &quot;name&quot;: &quot;favorite_number&quot;,
      &quot;type&quot;: &quot;int&quot;,
      &quot;default&quot;: 0
    }
[/code]
to get: {"name": "Alyssa", "favorite_number": 0}


Please note that placing <code>int</code> as first argument of a <strong>union</strong> and having <code>null</code> as <strong>default value</strong> such as: 
[code language="bash"]
    {
      &quot;name&quot;: &quot;favorite_number&quot;,
      &quot;type&quot;: [
        &quot;int&quot;,
        &quot;null&quot;
      ],
      &quot;default&quot;: null
    }
[/code]
gives an error: <pre>Exception in thread "main" org.apache.avro.AvroTypeException: Non-numeric default value for int: null</pre>
or 
<pre>Exception in thread "main" org.apache.avro.AvroTypeException: Non-null default value for null type: 0</pre> when
[code language="bash"]
    {
      &quot;name&quot;: &quot;favorite_number&quot;,
      &quot;type&quot;: [
        &quot;null&quot;,
        &quot;int&quot;
      ],
      &quot;default&quot;: 0
    }
[/code]
as described in https://avro.apache.org/docs/1.7.7/spec.html#Unions 
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3179</wp:post_id>
  <wp:post_date>2017-05-29 21:53:30</wp:post_date>
  <wp:post_date_gmt>2017-05-29 19:53:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>unions-and-default-value-in-apache-avro-serialization-and-deserialization</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="apache-avro"><![CDATA[apache-avro]]></category>
  <category domain="post_tag" nicename="avro"><![CDATA[avro]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="java-2"><![CDATA[java]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[5567913919]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>1836</wp:comment_id>
    <wp:comment_author><![CDATA[Hive external table creation, data partitioning and avro schema evolution &#8211; Bartosz Wieczorek&#039;s blog]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>https://bmwieczorek.wordpress.com/2017/05/30/hive-external-table-creation-data-partitioning-and-avro-schema-evolution/</wp:comment_author_url>
    <wp:comment_author_IP>192.0.91.51</wp:comment_author_IP>
    <wp:comment_date>2017-05-30 12:06:16</wp:comment_date>
    <wp:comment_date_gmt>2017-05-30 10:06:16</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] Read first: https://bmwieczorek.wordpress.com/2017/05/29/unions-and-default-value-in-apache-avro-serialization-a&#8230; [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:2:{s:4:"time";d:1496138776.9510700702667236328125;s:5:"event";s:9:"check-ham";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1496138810</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:3:{s:4:"time";d:1496138810.1584389209747314453125;s:5:"event";s:15:"status-approved";s:4:"user";s:11:"bmwieczorek";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Hive external table creation, data partitioning and avro schema evolution</title>
  <link>https://bmwieczorek.wordpress.com/2017/05/30/hive-external-table-creation-data-partitioning-and-avro-schema-evolution/</link>
  <pubDate>Tue, 30 May 2017 10:06:13 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=3276</guid>
  <description/>
  <content:encoded><![CDATA[Read first: <a href="https://bmwieczorek.wordpress.com/2017/05/29/unions-and-default-value-in-apache-avro-serialization-and-deserialization/">https://bmwieczorek.wordpress.com/2017/05/29/unions-and-default-value-in-apache-avro-serialization-and-deserialization/</a>

Create avro schema user.avsc for User with single string property name and serialize it to users.avro and upload it to hdfs:
[code language="bash"]
[cloudera@quickstart ~]$ hdfs dfs -copyFromLocal /media/sf_vbox-shared/user.avsc /schema/
[cloudera@quickstart ~]$ hdfs dfs -mkdir -p /data/users/year=2017/month=05/day=24/hour=09
[cloudera@quickstart ~]$ hdfs dfs -copyFromLocal /media/sf_vbox-shared/users/year\=2017/month\=05/day\=24/hour\=09/users.avro /data/users/year=2017/month=05/day=24/hour=09/
[/code]

Connect to Hive via beeline, create external table, load it with users.avro file, repair it via msck repair table and display the hive table content: 
[code language="bash"]
[cloudera@quickstart ~]$ beeline
Beeline version 1.1.0-cdh5.10.0 by Apache Hive
beeline&gt; !connect jdbc:hive2://localhost:10000
scan complete in 1ms
Connecting to jdbc:hive2://localhost:10000
Enter username for jdbc:hive2://localhost:10000: cloudera
Enter password for jdbc:hive2://localhost:10000: ********
Connected to: Apache Hive (version 1.1.0-cdh5.10.0)
Driver: Hive JDBC (version 1.1.0-cdh5.10.0)
Transaction isolation: TRANSACTION_REPEATABLE_READ
0: jdbc:hive2://localhost:10000&gt; CREATE EXTERNAL TABLE Users PARTITIONED BY (year String, month String, day String, hour String) ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.avro.AvroSerDe' STORED AS INPUTFORMAT 'org.apache.hadoop.hive.ql.io.avro.AvroContainerInputFormat' OUTPUTFORMAT 'org.apache.hadoop.hive.ql.io.avro.AvroContainerOutputFormat' LOCATION '/data/users' TBLPROPERTIES ('avro.schema.url'='hdfs:///schema/user.avsc');
INFO  : Compiling command(queryId=hive_20170530023737_04121f8c-8e27-4b6f-8816-6fa8ccf7d993): CREATE EXTERNAL TABLE Users PARTITIONED BY (year String, month String, day String, hour String) ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.avro.AvroSerDe' STORED AS INPUTFORMAT 'org.apache.hadoop.hive.ql.io.avro.AvroContainerInputFormat' OUTPUTFORMAT 'org.apache.hadoop.hive.ql.io.avro.AvroContainerOutputFormat' LOCATION '/data/users' TBLPROPERTIES ('avro.schema.url'='hdfs:///schema/user.avsc')
INFO  : Semantic Analysis Completed
INFO  : Returning Hive schema: Schema(fieldSchemas:null, properties:null)
INFO  : Completed compiling command(queryId=hive_20170530023737_04121f8c-8e27-4b6f-8816-6fa8ccf7d993); Time taken: 0.028 seconds
INFO  : Concurrency mode is disabled, not creating a lock manager
INFO  : Executing command(queryId=hive_20170530023737_04121f8c-8e27-4b6f-8816-6fa8ccf7d993): CREATE EXTERNAL TABLE Users PARTITIONED BY (year String, month String, day String, hour String) ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.avro.AvroSerDe' STORED AS INPUTFORMAT 'org.apache.hadoop.hive.ql.io.avro.AvroContainerInputFormat' OUTPUTFORMAT 'org.apache.hadoop.hive.ql.io.avro.AvroContainerOutputFormat' LOCATION '/data/users' TBLPROPERTIES ('avro.schema.url'='hdfs:///schema/user.avsc')
INFO  : Starting task [Stage-0:DDL] in serial mode
INFO  : Completed executing command(queryId=hive_20170530023737_04121f8c-8e27-4b6f-8816-6fa8ccf7d993); Time taken: 0.073 seconds
INFO  : OK
No rows affected (0.117 seconds)
0: jdbc:hive2://localhost:10000&gt; SELECT * FROM Users;
INFO  : Compiling command(queryId=hive_20170530023838_cc15d926-28e7-477d-8de3-948a1a7c00a3): SELECT * FROM Users
INFO  : Semantic Analysis Completed
INFO  : Returning Hive schema: Schema(fieldSchemas:[FieldSchema(name:users.name, type:string, comment:null), FieldSchema(name:users.year, type:string, comment:null), FieldSchema(name:users.month, type:string, comment:null), FieldSchema(name:users.day, type:string, comment:null), FieldSchema(name:users.hour, type:string, comment:null)], properties:null)
INFO  : Completed compiling command(queryId=hive_20170530023838_cc15d926-28e7-477d-8de3-948a1a7c00a3); Time taken: 0.087 seconds
INFO  : Concurrency mode is disabled, not creating a lock manager
INFO  : Executing command(queryId=hive_20170530023838_cc15d926-28e7-477d-8de3-948a1a7c00a3): SELECT * FROM Users
INFO  : Completed executing command(queryId=hive_20170530023838_cc15d926-28e7-477d-8de3-948a1a7c00a3); Time taken: 0.0 seconds
INFO  : OK
+-------------+-------------+--------------+------------+-------------+--+
| users.name  | users.year  | users.month  | users.day  | users.hour  |
+-------------+-------------+--------------+------------+-------------+--+
+-------------+-------------+--------------+------------+-------------+--+
No rows selected (0.128 seconds)
0: jdbc:hive2://localhost:10000&gt; MSCK REPAIR TABLE Users;
INFO  : Compiling command(queryId=hive_20170530023939_b04b73a2-e03e-4b4b-826d-e00214ffbe50): MSCK REPAIR TABLE Users
INFO  : Semantic Analysis Completed
INFO  : Returning Hive schema: Schema(fieldSchemas:null, properties:null)
INFO  : Completed compiling command(queryId=hive_20170530023939_b04b73a2-e03e-4b4b-826d-e00214ffbe50); Time taken: 0.004 seconds
INFO  : Concurrency mode is disabled, not creating a lock manager
INFO  : Executing command(queryId=hive_20170530023939_b04b73a2-e03e-4b4b-826d-e00214ffbe50): MSCK REPAIR TABLE Users
INFO  : Starting task [Stage-0:DDL] in serial mode
INFO  : Completed executing command(queryId=hive_20170530023939_b04b73a2-e03e-4b4b-826d-e00214ffbe50); Time taken: 0.155 seconds
INFO  : OK
No rows affected (0.175 seconds)
0: jdbc:hive2://localhost:10000&gt; SELECT * FROM Users;
INFO  : Compiling command(queryId=hive_20170530023939_392a3a78-0f40-45b7-b227-fa6cfdc69fce): SELECT * FROM Users
INFO  : Semantic Analysis Completed
INFO  : Returning Hive schema: Schema(fieldSchemas:[FieldSchema(name:users.name, type:string, comment:null), FieldSchema(name:users.year, type:string, comment:null), FieldSchema(name:users.month, type:string, comment:null), FieldSchema(name:users.day, type:string, comment:null), FieldSchema(name:users.hour, type:string, comment:null)], properties:null)
INFO  : Completed compiling command(queryId=hive_20170530023939_392a3a78-0f40-45b7-b227-fa6cfdc69fce); Time taken: 0.064 seconds
INFO  : Concurrency mode is disabled, not creating a lock manager
INFO  : Executing command(queryId=hive_20170530023939_392a3a78-0f40-45b7-b227-fa6cfdc69fce): SELECT * FROM Users
INFO  : Completed executing command(queryId=hive_20170530023939_392a3a78-0f40-45b7-b227-fa6cfdc69fce); Time taken: 0.0 seconds
INFO  : OK
+-------------+-------------+--------------+------------+-------------+--+
| users.name  | users.year  | users.month  | users.day  | users.hour  |
+-------------+-------------+--------------+------------+-------------+--+
| Alyssa      | 2017        | 05           | 24         | 09          |
+-------------+-------------+--------------+------------+-------------+--+
[/code]

Change the User schema to include additional property favorite_color (union null and string with default null), generate new users.avro file and upload the avro file to hdfs to different partition (different hour) 
[code language="bash"]
[cloudera@quickstart dev]$ hdfs dfs -mkdir -p /data/users/year=2017/month=05/day=24/hour=10
[cloudera@quickstart dev]$ hdfs dfs -copyFromLocal /media/sf_vbox-shared/users/year\=2017/month\=05/day\=24/hour\=10/users.avro /data/users/year=2017/month=05/day=24/hour=10/
[/code]

Repair hive table and select results with all rows but yet without new column favorite_color:
[code language="bash"]
0: jdbc:hive2://localhost:10000&gt; SELECT * FROM Users;
INFO  : Compiling command(queryId=hive_20170530024040_5f1a6880-61b2-4c87-bb35-0c643cd511ba): SELECT * FROM Users
INFO  : Semantic Analysis Completed
INFO  : Returning Hive schema: Schema(fieldSchemas:[FieldSchema(name:users.name, type:string, comment:null), FieldSchema(name:users.year, type:string, comment:null), FieldSchema(name:users.month, type:string, comment:null), FieldSchema(name:users.day, type:string, comment:null), FieldSchema(name:users.hour, type:string, comment:null)], properties:null)
INFO  : Completed compiling command(queryId=hive_20170530024040_5f1a6880-61b2-4c87-bb35-0c643cd511ba); Time taken: 0.068 seconds
INFO  : Concurrency mode is disabled, not creating a lock manager
INFO  : Executing command(queryId=hive_20170530024040_5f1a6880-61b2-4c87-bb35-0c643cd511ba): SELECT * FROM Users
INFO  : Completed executing command(queryId=hive_20170530024040_5f1a6880-61b2-4c87-bb35-0c643cd511ba); Time taken: 0.0 seconds
INFO  : OK
+-------------+-------------+--------------+------------+-------------+--+
| users.name  | users.year  | users.month  | users.day  | users.hour  |
+-------------+-------------+--------------+------------+-------------+--+
| Alyssa      | 2017        | 05           | 24         | 09          |
+-------------+-------------+--------------+------------+-------------+--+
1 row selected (0.105 seconds)
0: jdbc:hive2://localhost:10000&gt; MSCK REPAIR TABLE Users;
INFO  : Compiling command(queryId=hive_20170530024040_2db31c0d-7f15-4f72-934a-a7b0dfacc045): MSCK REPAIR TABLE Users
INFO  : Semantic Analysis Completed
INFO  : Returning Hive schema: Schema(fieldSchemas:null, properties:null)
INFO  : Completed compiling command(queryId=hive_20170530024040_2db31c0d-7f15-4f72-934a-a7b0dfacc045); Time taken: 0.002 seconds
INFO  : Concurrency mode is disabled, not creating a lock manager
INFO  : Executing command(queryId=hive_20170530024040_2db31c0d-7f15-4f72-934a-a7b0dfacc045): MSCK REPAIR TABLE Users
INFO  : Starting task [Stage-0:DDL] in serial mode
INFO  : Completed executing command(queryId=hive_20170530024040_2db31c0d-7f15-4f72-934a-a7b0dfacc045); Time taken: 0.114 seconds
INFO  : OK
No rows affected (0.128 seconds)
0: jdbc:hive2://localhost:10000&gt; SELECT * FROM Users;
INFO  : Compiling command(queryId=hive_20170530024040_4f0cbff8-4c54-4e72-ada0-c7ea2100be71): SELECT * FROM Users
INFO  : Semantic Analysis Completed
INFO  : Returning Hive schema: Schema(fieldSchemas:[FieldSchema(name:users.name, type:string, comment:null), FieldSchema(name:users.year, type:string, comment:null), FieldSchema(name:users.month, type:string, comment:null), FieldSchema(name:users.day, type:string, comment:null), FieldSchema(name:users.hour, type:string, comment:null)], properties:null)
INFO  : Completed compiling command(queryId=hive_20170530024040_4f0cbff8-4c54-4e72-ada0-c7ea2100be71); Time taken: 0.07 seconds
INFO  : Concurrency mode is disabled, not creating a lock manager
INFO  : Executing command(queryId=hive_20170530024040_4f0cbff8-4c54-4e72-ada0-c7ea2100be71): SELECT * FROM Users
INFO  : Completed executing command(queryId=hive_20170530024040_4f0cbff8-4c54-4e72-ada0-c7ea2100be71); Time taken: 0.0 seconds
INFO  : OK
+-------------+-------------+--------------+------------+-------------+--+
| users.name  | users.year  | users.month  | users.day  | users.hour  |
+-------------+-------------+--------------+------------+-------------+--+
| Alyssa      | 2017        | 05           | 24         | 09          |
| Alyssa      | 2017        | 05           | 24         | 10          |
+-------------+-------------+--------------+------------+-------------+--+
2 rows selected (0.119 seconds)
0: jdbc:hive2://localhost:10000&gt; --delete old schema and upload new schema with favorite color to hdfs
[/code]

Delete old schema from hdfs and replace it with new one containing new column
[code language="bash"]
[cloudera@quickstart dev]$ hdfs dfs -rm -skipTrash /schema/user.avsc
Deleted /schema/user.avsc
[cloudera@quickstart dev]$ hdfs dfs -copyFromLocal /media/sf_vbox-shared/schema-with-favorite-color/user.avsc /schema/
[/code]

Fix hive table and display all results with new column
[code language="bash"]
0: jdbc:hive2://localhost:10000&gt; MSCK REPAIR TABLE Users;
INFO  : Compiling command(queryId=hive_20170530024444_0bb2c55f-7e12-4cde-8154-e77ce491e035): MSCK REPAIR TABLE Users
INFO  : Semantic Analysis Completed
INFO  : Returning Hive schema: Schema(fieldSchemas:null, properties:null)
INFO  : Completed compiling command(queryId=hive_20170530024444_0bb2c55f-7e12-4cde-8154-e77ce491e035); Time taken: 0.001 seconds
INFO  : Concurrency mode is disabled, not creating a lock manager
INFO  : Executing command(queryId=hive_20170530024444_0bb2c55f-7e12-4cde-8154-e77ce491e035): MSCK REPAIR TABLE Users
INFO  : Starting task [Stage-0:DDL] in serial mode
INFO  : Completed executing command(queryId=hive_20170530024444_0bb2c55f-7e12-4cde-8154-e77ce491e035); Time taken: 0.047 seconds
INFO  : OK
No rows affected (0.061 seconds)
0: jdbc:hive2://localhost:10000&gt; SELECT * FROM Users;
INFO  : Compiling command(queryId=hive_20170530024545_e9142a48-92c5-41c9-a6c6-f2a611fa4e4f): SELECT * FROM Users
INFO  : Semantic Analysis Completed
INFO  : Returning Hive schema: Schema(fieldSchemas:[FieldSchema(name:users.name, type:string, comment:null), FieldSchema(name:users.favorite_number, type:int, comment:null), FieldSchema(name:users.year, type:string, comment:null), FieldSchema(name:users.month, type:string, comment:null), FieldSchema(name:users.day, type:string, comment:null), FieldSchema(name:users.hour, type:string, comment:null)], properties:null)
INFO  : Completed compiling command(queryId=hive_20170530024545_e9142a48-92c5-41c9-a6c6-f2a611fa4e4f); Time taken: 0.059 seconds
INFO  : Concurrency mode is disabled, not creating a lock manager
INFO  : Executing command(queryId=hive_20170530024545_e9142a48-92c5-41c9-a6c6-f2a611fa4e4f): SELECT * FROM Users
INFO  : Completed executing command(queryId=hive_20170530024545_e9142a48-92c5-41c9-a6c6-f2a611fa4e4f); Time taken: 0.0 seconds
INFO  : OK
+-------------+------------------------+-------------+--------------+------------+-------------+--+
| users.name  | users.favorite_number  | users.year  | users.month  | users.day  | users.hour  |
+-------------+------------------------+-------------+--------------+------------+-------------+--+
| Alyssa      | NULL                   | 2017        | 05           | 24         | 09          |
| Alyssa      | 256                    | 2017        | 05           | 24         | 10          |
+-------------+------------------------+-------------+--------------+------------+-------------+--+
2 rows selected (0.118 seconds)
0: jdbc:hive2://localhost:10000&gt;
[/code]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3276</wp:post_id>
  <wp:post_date>2017-05-30 12:06:13</wp:post_date>
  <wp:post_date_gmt>2017-05-30 10:06:13</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>hive-external-table-creation-data-partitioning-and-avro-schema-evolution</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="avro"><![CDATA[avro]]></category>
  <category domain="category" nicename="big-data"><![CDATA[big data]]></category>
  <category domain="post_tag" nicename="data-partitioning"><![CDATA[data partitioning]]></category>
  <category domain="post_tag" nicename="hive"><![CDATA[hive]]></category>
  <category domain="post_tag" nicename="msck-repair-table"><![CDATA[msck repair table]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[5587995423]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Hibernate n+1 selects and lazy loading vs eager</title>
  <link>https://bmwieczorek.wordpress.com/2017/06/08/hibernate-n1-selects-and-lazy-loading-vs-eager/</link>
  <pubDate>Thu, 08 Jun 2017 20:00:28 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=3304</guid>
  <description/>
  <content:encoded><![CDATA[Assuming a shop can have many products we want to display shops along with products:
1) with one select query using join - we need to annotate in @OneToMany fetchType to EAGER to produce:
<pre>Hibernate:
select
this_.id as id1_1_1_,
this_.shipment_address as shipment2_1_1_,
products2_.shop_id as shop_id4_0_3_,
products2_.id as id1_0_3_,
products2_.id as id1_0_0_,
products2_.name as name2_0_0_,
products2_.price as price3_0_0_,
products2_.shop_id as shop_id4_0_0_
from
Shop this_
left outer join
Product products2_
on this_.id=products2_.shop_id
</pre>
when calling

[code language="java"]
            Session session = sessionFactory.openSession();
            Criteria criteria = session.createCriteria(Shop.class).setResultTransformer(Criteria.DISTINCT_ROOT_ENTITY);
            List list = criteria.list();
[/code]

2) when we set fetch type to LAZY (default) then we get one select for shops and optionally additional selects for products for particular shop(s):
<pre>
Hibernate:
select
this_.id as id1_1_0_,
this_.shipment_address as shipment2_1_0_
from
Shop this_
</pre>
when retrieving shops
and when we want to retrieve products for particular shop(s)

[code language="java"]
            Shop shop = shops.get(0);
            List products = shop.getProducts();
[/code]
then we get:
<pre>
Hibernate:
select
products0_.shop_id as shop_id4_0_0_,
products0_.id as id1_0_0_,
products0_.id as id1_0_1_,
products0_.name as name2_0_1_,
products0_.price as price3_0_1_,
products0_.shop_id as shop_id4_0_1_
from
Product products0_
where
products0_.shop_id=?
</pre>

for code

[code language="java"]
@Entity
public class Shop extends BaseEntity {

    @Column(name = &quot;shipment_address&quot;, nullable = false)
    private String shipmentAddress;

    @OneToMany(mappedBy = &quot;shop&quot;, fetch = FetchType.LAZY, cascade = CascadeType.ALL)
    private List products = new ArrayList&lt;&gt;();

    Shop() {
        // default constructor needed for ORM
    }

    public Shop(String shipmentAddress, Product... products) {
        this.shipmentAddress = shipmentAddress;
        for (Product product : products) {
            product.addShop(this);
            this.products.add(product);
        }
    }

    public List getProducts() {
        return products;
    }

    @Override
    public String toString() {
        return &quot;Shop{&quot; +
                super.toString() +
                &quot;, shipmentAddress='&quot; + shipmentAddress + '\'' +
                //&quot;, products=&quot; + products +
                '}';
    }
}

@Entity
public class Product extends BaseEntity {

    @Column
    private String name;

    @Column
    private BigDecimal price;

    @ManyToOne
    @JoinColumn(name = &quot;shop_id&quot;, foreignKey = @ForeignKey(name = &quot;fk_product_shop&quot;))
    private Shop shop;

    Product() {
        // default constructor needed for ORM
    }

    public Product(String name, BigDecimal price) {
        this.name = name;
        this.price = price;
    }

    void addShop(Shop shop) {
        this.shop = shop;
    }

    @Override
    public String toString() {
        return &quot;Product{&quot; +
                super.toString() +
                &quot;, name='&quot; + name + '\'' +
                &quot;, price=&quot; + price +
                &quot;, shop.id=&quot; + shop.getId() + '}';
    }
}

[/code]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3304</wp:post_id>
  <wp:post_date>2017-06-08 22:00:28</wp:post_date>
  <wp:post_date_gmt>2017-06-08 20:00:28</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>hibernate-n1-selects-and-lazy-loading-vs-eager</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="eager-loading"><![CDATA[eager loading]]></category>
  <category domain="category" nicename="hibernate"><![CDATA[Hibernate]]></category>
  <category domain="category" nicename="java"><![CDATA[Java]]></category>
  <category domain="post_tag" nicename="lazy-loading"><![CDATA[lazy loading]]></category>
  <category domain="post_tag" nicename="n1-selects"><![CDATA[n+1 selects]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[5915920226]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Understanding java jdk8 Optional</title>
  <link>https://bmwieczorek.wordpress.com/2017/06/14/understanding-java-jdk8-optional/</link>
  <pubDate>Wed, 14 Jun 2017 19:45:37 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=3337</guid>
  <description/>
  <content:encoded><![CDATA[[code language="java"]
        System.out.println( Optional.empty() ); // Optional.empty
        System.out.println( Optional.ofNullable(null) ); // Optional.empty
        System.out.println( Optional.ofNullable(&quot;a&quot;) ); // Optional[a]
        System.out.println( Optional.ofNullable(&quot;a&quot;).get() ); // a


        System.out.println( Optional.ofNullable(&quot;a&quot;).filter(s -&gt; true) ); // Optional[a] (filter match)
        System.out.println( Optional.ofNullable(&quot;a&quot;).filter(s -&gt; false) ); // Optional.empty (filter not match)

        System.out.println( Optional.ofNullable(&quot;a&quot;).map(s -&gt; null)); // Optional.empty (mapper function returning null)
        System.out.println( Optional.ofNullable(&quot;a&quot;).map(s -&gt; &quot;b&quot;)); // Optional[b] (re-map)
        System.out.println( Optional.ofNullable(&quot;a&quot;).map(s -&gt; &quot;b&quot;.equals(s) ? s : null) ); // Optional.empty (filtering using map)
        System.out.println( Optional.ofNullable(&quot;a&quot;).map(s -&gt; Optional.of(&quot;b&quot;)) ); // Optional[Optional[b]] (mapper function returning optional)
        System.out.println( Optional.empty().map(s -&gt; { System.out.print(&quot;map&quot;); return &quot;b&quot;; }) ); // Optional.empty (mapper not run)

        System.out.println( Optional.ofNullable(&quot;a&quot;).flatMap(s -&gt; Optional.of(&quot;b&quot;)) ); // Optional[b] (mapper function returning optional)

        System.out.println( Optional.of(&quot;a&quot;).orElse(&quot;c&quot;) ); // a
        System.out.println( Optional.empty().orElse(&quot;c&quot;) ); // c


        System.out.println( Optional.ofNullable(null)
                .map(s -&gt; printAndReturn(&quot;map: &quot;, &quot;b&quot;))
                .orElse(printAndReturn(&quot;orElse: &quot;, &quot;c&quot;)) ); // orElse: c (executed only orElse branch, returned value c)

        System.out.println( Optional.of(&quot;a&quot;)
                                    .map(s -&gt; printAndReturn(&quot;map: &quot;, &quot;b&quot;))
                                    .orElse(printAndReturn(&quot;orElse: &quot;, &quot;c&quot;)) ); // map: orElse: b (executed both branches, returned value b)

        System.out.println( Optional.of(&quot;a&quot;)
                .map(s -&gt; printAndReturn(&quot;map: &quot;, &quot;b&quot;))
                .orElseGet(() -&gt; printAndReturn(&quot;orElse: &quot;, &quot;c&quot;)) ); // map: b (executed only map branch, returned value b)
[/code]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3337</wp:post_id>
  <wp:post_date>2017-06-14 21:45:37</wp:post_date>
  <wp:post_date_gmt>2017-06-14 19:45:37</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>understanding-java-jdk8-optional</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java8"><![CDATA[java8]]></category>
  <category domain="category" nicename="jdk8"><![CDATA[jdk8]]></category>
  <category domain="post_tag" nicename="optional"><![CDATA[Optional]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[6113231224]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Jdk8 Java 8 print different strings based on a condition</title>
  <link>https://bmwieczorek.wordpress.com/2017/06/22/jdk8-java-8-print-different-strings-based-on-a-condition/</link>
  <pubDate>Thu, 22 Jun 2017 08:52:31 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=3343</guid>
  <description/>
  <content:encoded><![CDATA[[code language="java"]
    List&lt;String&gt; strings = Arrays.asList(&quot;a&quot;, &quot;b&quot;, &quot;c&quot;);
    System.out.println(string
                          .stream()
                          .filter(&quot;a&quot;::equals)
                          .findAny()
                          .map(s -&gt; &quot;Found a&quot;) // only executed when found any
                          .orElse(&quot;a not found&quot;));
[/code]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3343</wp:post_id>
  <wp:post_date>2017-06-22 10:52:31</wp:post_date>
  <wp:post_date_gmt>2017-06-22 08:52:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>jdk8-java-8-print-different-strings-based-on-a-condition</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="filter"><![CDATA[filter]]></category>
  <category domain="post_tag" nicename="findany"><![CDATA[findAny]]></category>
  <category domain="category" nicename="java8"><![CDATA[java8]]></category>
  <category domain="post_tag" nicename="jdk8"><![CDATA[jdk8]]></category>
  <category domain="post_tag" nicename="map"><![CDATA[map]]></category>
  <category domain="post_tag" nicename="orelse"><![CDATA[orElse]]></category>
  <category domain="post_tag" nicename="stream"><![CDATA[stream]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[6367987754]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Java 8 jdk8 constructor reference</title>
  <link>https://bmwieczorek.wordpress.com/2017/06/22/java-8-jdk8-constructor-reference/</link>
  <pubDate>Thu, 22 Jun 2017 19:03:51 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=3352</guid>
  <description/>
  <content:encoded><![CDATA[[code language="java"]
static class Person {
        private int id;

        public Person(int id) {
            this.id = id;
        }

        @Override
        public String toString() {
            return &quot;Person{id=&quot; + id + '}';
        }
    }

    public static void main(String[] args) {
        IntStream
                .range(0, 3)
                // .map(n -&gt; new Person(n)) // does not compile since lambda return type is expected to be int
                .mapToObj(Person::new) // alternative to .mapToObj(n -&gt; new Person(n))
                .forEach(System.out::println);
    }
[/code]
Output:
<pre>
Person{id=0}
Person{id=1}
Person{id=2}
</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3352</wp:post_id>
  <wp:post_date>2017-06-22 21:03:51</wp:post_date>
  <wp:post_date_gmt>2017-06-22 19:03:51</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>java-8-jdk8-constructor-reference</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="constructor-reference"><![CDATA[constructor reference]]></category>
  <category domain="post_tag" nicename="intstream"><![CDATA[IntStream]]></category>
  <category domain="category" nicename="java8"><![CDATA[java8]]></category>
  <category domain="category" nicename="jdk8"><![CDATA[jdk8]]></category>
  <category domain="post_tag" nicename="map"><![CDATA[map]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[6384415766]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Java 8 Lambda returning lambda</title>
  <link>https://bmwieczorek.wordpress.com/2017/06/22/java-8-lambda-returning-lambda/</link>
  <pubDate>Thu, 22 Jun 2017 21:18:20 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=3360</guid>
  <description/>
  <content:encoded><![CDATA[[code language="java"]
import java.util.Arrays;
import java.util.List;
import java.util.function.Function;
import java.util.function.Predicate;

public class LamdaReturningLambda {

    public static void main(String[] args) {
        List&lt;String&gt; strings = Arrays.asList(&quot;Bob&quot;, &quot;Alice&quot;);

        // first approach
        strings
            .stream()
            .filter(e -&gt; e.contains(&quot;i&quot;))
            .filter(e -&gt; e.contains(&quot;c&quot;))
            .forEach(System.out::println);


        // second approach
        Predicate&lt;String&gt; contains_i = name -&gt; name.contains(&quot;i&quot;);
        Predicate&lt;String&gt; contains_c = name -&gt; name.contains(&quot;c&quot;);

        strings
            .stream()
            .filter(contains_i)
            .filter(contains_c)
            .forEach(System.out::println);


        // third approach
        strings
            .stream()
            .filter(containsString(&quot;i&quot;))
            .filter(containsString(&quot;c&quot;))
            .forEach(System.out::println);

        // fourth approach
        Function&lt;String, Predicate&lt;String&gt;&gt; containsFunc = s -&gt; name -&gt; name.contains(s); // lambda returning predicate
        strings
            .stream()
            .filter(containsFunc.apply(&quot;i&quot;))
            .filter(containsFunc.apply(&quot;c&quot;))
            .forEach(System.out::println);
    }

    static Predicate&lt;String&gt; containsString(String s) {
        return name -&gt; name.contains(s);
    }

}
[/code]

Output:
<pre>
Alice
Alice
Alice
Alice
</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3360</wp:post_id>
  <wp:post_date>2017-06-22 23:18:20</wp:post_date>
  <wp:post_date_gmt>2017-06-22 21:18:20</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>java-8-lambda-returning-lambda</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java8"><![CDATA[java8]]></category>
  <category domain="category" nicename="jdk8"><![CDATA[jdk8]]></category>
  <category domain="post_tag" nicename="lambda"><![CDATA[lambda]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[6387819510]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Java 8 Lambda returning lambda part 2</title>
  <link>https://bmwieczorek.wordpress.com/2017/06/23/java-8-lambda-returning-lambda-part-2/</link>
  <pubDate>Fri, 23 Jun 2017 19:40:53 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=3365</guid>
  <description/>
  <content:encoded><![CDATA[[code language="java"]
        Function&lt;Integer, Function&lt;Integer, Integer&gt;&gt; f = i1 -&gt; i2 -&gt; i1 - i2;
        List&lt;Integer&gt; ints = Arrays.asList(1, 2, 3);
        Integer res = 0;
        for (int ii = ints.size() - 1; ii &gt;= 0; ii--) {
            Integer t = ints.get(ii); // 3 // 2 // 1
            Function&lt;Integer, Integer&gt; ff = f.apply(t); // i2 -&gt; 3 - i2 // i2 -&gt; 2 - i2 // i2 -&gt; 1 - i2
            res = ff.apply(res); // 3 - 0 = 3 // 2 - 3 = -1 // 1 - -1 = 2
            System.out.println(&quot;intermediate res=&quot; + res);
        }
        System.out.println(&quot;final res=&quot; + res); // 2
[/code]

Output:
<pre>
intermediate res=3
intermediate res=-1
intermediate res=2
final res=2
</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3365</wp:post_id>
  <wp:post_date>2017-06-23 21:40:53</wp:post_date>
  <wp:post_date_gmt>2017-06-23 19:40:53</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>java-8-lambda-returning-lambda-part-2</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="java8"><![CDATA[java8]]></category>
  <category domain="category" nicename="jdk8"><![CDATA[jdk8]]></category>
  <category domain="post_tag" nicename="lambda"><![CDATA[lambda]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[6419676127]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[java-8-lambda-returning-labdba-part-2]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>My Mac OSX custom Intellij shortcuts</title>
  <link>https://bmwieczorek.wordpress.com/2017/07/04/my-mac-osx-custom-intellij-shortcuts/</link>
  <pubDate>Tue, 04 Jul 2017 21:00:25 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=3373</guid>
  <description/>
  <content:encoded><![CDATA[Navigate: class cmd O, additional ctrl shift T
Navigate file: cmd shift O, added ctrl shift R (removed run context configuration)
Navigate declaration, cmd B, added F3 (removed toggle bookmark)

Find usages: alt F7, added ctrl + shift + G (removed: unselect occurrences)

Find: cmd +F, added ctrl+ F (removed: right in editor actions)
Navigate File structure: cmd + F12, added ctrl + O (removed: override methods)

Refactor this: ctrl +T , added alt + shift + T (removed: switch task)
Rename: shift + F6, added alt + shift + R (removed: rerun tests)
Extract variable: alt+cmd+V, added alt + shift + L
Extract method: alt+cmd + M, added alt + shift + M
Duplicate line: added: alt+shift+D (removed cmd+D)
Hide all tool windows: shift + cmd + F12, added ctrl + M (removed: move caret to matching brace and commit message history)
Preferences: cmd + , added ctrl + alt + s
Show intention actions: alt + enter, added ctrl + 1 (Remove Go to bookmark 1)
Next highlighted error: F2, added ctrl+ . (removed: Choose lookup item and insert dot), added alt + .
Previous highlighted error: shift + F2, added ctrl+ , added alt + .
Reformat code: alt + cmd + L, added: ctrl + shift + F
Inline: added: alt + shift + I
Inline: alt + cmd + N, added alt + shift + I (removed: inspect code with editor settings)
Source code generate: cmd + N, ctrl + Enter, additionally: alt + shift + S
Extract field: alt + cmd + F, additionally alt + shift + F(removed: add to favorites)
Extract constant: alt + cmd + C, additionally: alt + shift + C (removed: recent changes)
**Extend/shrink selection: original: alt + up arrow/alt + down arrow changed to: alt + shift + arrow Up/Down, added additionally ctrl +W / ctrl + shift + W
Find in path: shift + cmd + F, added additionally: ctrl + alt + shift + F
Replace in path: shift + cmd + R, added additionally: ctrl + alt + shift + R
**Move line up: original: alt + shift + arrow Up/Down changed to: alt + arrow Up/Down
Organize imports: ctrl + alt + O, additionally: ctrl + shift + O, alt+shift+O
Navigate to Test/Junit (junit) added: ctrl + shift + J (removed: join lines), ctrl+shift+alt+T
Join lines: added: alt+shift+J
Navigate type declaration: shift + cmd + B (removed shift + ctrl +B), added: shift + ctrl + D
Navigate declaration: added F3
Navigate Super method: added: ctrl + shift + U or added: ctrl + shift + M
Navigate bookmark show: added shift + ctrl + B, added alt + shift + B, S
Bookmark add: added ctrl + B, added alt+ shift +B, A
Navigate bookmark menu: added ctrl + shift + alt + B, added alt+ shift +B, B (removed navigate type declaration)
Complete statement: ctrl + shift + Enter
Navigate to last edit location: ctrl + shift + E
Navigate line number: ctrl + shift + L

** Rename: alt + shift + R (removed: rerun tests)

** Run/Debug context configuration original: run context configuration alt + shift + R,(removed: run/debug in main menu)

ctrl+R/D - run/debug selected class in editor
ctrl+alt+R/D - run selected class in run/debug menu
ctrl+alt+cmd+R/D - serun/debug from menu

Added cmd+0, alt+0 terminal

Existing:
cmd + shift + T: navigate/create test
ctrl + Enter -&gt; accept highlighted button in popup

VCS
Update: added cmd + U, added ctrl + U or added alt + shift + V, U
Diff: existing cmd + D (compare with local in vcs view)
Compare with same repository version: cmd+shift+D
Compare with local version: alt+shift+V, D
Compare with latest repo version: alt+shift+V, Shift+D

Prev/next difference: added ctrl + alt + ,/.
Push: existing alt + shift + K, or added: alt + P, or added: alt + shift + V, P
Revert: added alt + shift + V, R or added alt + R
History: added alt + H or added: alt + shift + H

Existing: View Parameter Info: cmd + P, added ctrl + P

Run: alt + shift + X, R
Run…: alt + shift + X, Shift + R
Debug: alt + shift + X, D
Debug…: alt + shift + X, Shift + D
Rerun tests: alt + shift + X, T
Rerun failed tests: alt + shift + X, Shift + T or alt + shift + X, F

Quick documentation: ctrl + Q
Navigate back/forward: added ctrl+alt+left/right arrow, added: alt+cmd+left/right arrow
Navigate Last edit location added: ctrl+shift+L
Navigate to line: cmd + L or added ctrl + L
Navigate bookmark: added ctrl + shift + B
Navigate to recently edited files: cmd+shift + E, ctrl+shift+E
Navigate to recent files: cmd+E, ctrl+E

Highlight usages in file: ctrl + F, ctrl + G

Generate source: added alt + shift + G
Find by action: added ctrl + shift + A
Ctrl + N added: new (Java, Scala)

Project Defaults -&gt; Project Structure -&gt; search sdk

Scala
Preferences-&gt; Languages and Frameworks/Scala -&gt; Show type info on mouse hover
Alt+Enter when cursor on valu/method -&gt; Add type annotation to value definition
run scala console: cmd+shift+S]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3373</wp:post_id>
  <wp:post_date>2017-07-04 23:00:25</wp:post_date>
  <wp:post_date_gmt>2017-07-04 21:00:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>my-mac-osx-custom-intellij-shortcuts</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="custom"><![CDATA[custom]]></category>
  <category domain="category" nicename="intellij"><![CDATA[intellij]]></category>
  <category domain="category" nicename="mac"><![CDATA[mac]]></category>
  <category domain="post_tag" nicename="osx"><![CDATA[osx]]></category>
  <category domain="post_tag" nicename="shortcuts"><![CDATA[shortcuts]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[6769531401]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Scala recursive method and tail recursion in factorial</title>
  <link>https://bmwieczorek.wordpress.com/2017/07/07/scala-recursive-method-and-tail-recursion-in-factorial/</link>
  <pubDate>Fri, 07 Jul 2017 15:00:08 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=3378</guid>
  <description/>
  <content:encoded><![CDATA[[code language="scala"]
object Functorial {

  def main(args: Array[String]): Unit = {
    println(factorial(3))
    println(factorialWithTailRecursion(3))
  }

  def factorial(n: Int): Int = {
    if (n == 0) 1
    else n * factorial(n - 1)
  }

  def factorialWithTailRecursion(n: Int): Int = {
    def func(acc: Int, n: Int): Int = {
      if (n == 0) acc
      else func(acc * n, n - 1)
    }
    func(1, 3)
  }

}
[/code]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3378</wp:post_id>
  <wp:post_date>2017-07-07 17:00:08</wp:post_date>
  <wp:post_date_gmt>2017-07-07 15:00:08</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>scala-recursive-method-and-tail-recursion-in-factorial</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="factorial"><![CDATA[factorial]]></category>
  <category domain="post_tag" nicename="recursion"><![CDATA[recursion]]></category>
  <category domain="category" nicename="scala"><![CDATA[scala]]></category>
  <category domain="post_tag" nicename="tail-recursion"><![CDATA[tail recursion]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[6864345357]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>XSD schema validation of XML</title>
  <link>https://bmwieczorek.wordpress.com/2017/07/17/xsd-schema-validation-of-xml/</link>
  <pubDate>Mon, 17 Jul 2017 20:52:34 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=3382</guid>
  <description/>
  <content:encoded><![CDATA[Note the schema and the generated valid xml below (demonstrating different xsd schema syntax features):
[code language="xml"]
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;xs:schema xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; elementFormDefault=&quot;qualified&quot; attributeFormDefault=&quot;unqualified&quot;&gt;
	&lt;xs:element name=&quot;MyRootElement&quot;&gt;
		&lt;xs:annotation&gt;
			&lt;xs:documentation&gt;Comment describing your root element&lt;/xs:documentation&gt;
		&lt;/xs:annotation&gt;
		&lt;xs:complexType&gt;
			&lt;xs:sequence&gt;
				&lt;xs:element name=&quot;MySubElement&quot;/&gt;
				&lt;xs:element name=&quot;MySubElementString&quot; type=&quot;xs:string&quot;/&gt;
				
				&lt;!-- by default elements are required --&gt;
				&lt;xs:element name=&quot;MySubElementOptional&quot; minOccurs=&quot;0&quot;/&gt;

				&lt;xs:element name=&quot;MySubElementRequiring3CharString&quot;&gt;
					&lt;xs:simpleType&gt;
					
						&lt;!-- restriction needs to have base type --&gt;
						&lt;xs:restriction base=&quot;xs:string&quot;&gt;
							&lt;xs:length value=&quot;3&quot;/&gt;
						&lt;/xs:restriction&gt;
					&lt;/xs:simpleType&gt;
				&lt;/xs:element&gt;
				
				&lt;xs:element name=&quot;MySubElementDisallowingText&quot;&gt;
					&lt;xs:complexType&gt;
					&lt;/xs:complexType&gt;
				&lt;/xs:element&gt;
				
				&lt;xs:element name=&quot;MySubElementWithOptionalAttrAndOptionalText&quot; type=&quot;MySubElementWithOptionalAttrAndOptionalText&quot; /&gt;

			&lt;/xs:sequence&gt;
			
			&lt;!-- attribute needs to be below sequence --&gt;
			
			&lt;xs:attribute name=&quot;myAttribute&quot; type=&quot;xs:integer&quot;/&gt;
			
			&lt;!-- by default attributes are optional --&gt;
			&lt;xs:attribute name=&quot;myRequiredAttribute&quot; type=&quot;xs:integer&quot; use=&quot;required&quot;/&gt;
			
		&lt;/xs:complexType&gt;
	&lt;/xs:element&gt;
	
	&lt;xs:complexType name=&quot;MySubElementWithOptionalAttrAndOptionalText&quot;&gt;
		&lt;xs:simpleContent&gt;
			&lt;xs:extension base=&quot;xs:string&quot;&gt;
				&lt;xs:attribute name=&quot;myIntegerAttribute&quot; /&gt;
			&lt;/xs:extension&gt;
		&lt;/xs:simpleContent&gt;
	&lt;/xs:complexType&gt;
&lt;/xs:schema&gt;
[/code]

Here is a sample xml (valid to the schema above)

[code language="xml"]
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;MyRootElement xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; myAttribute=&quot;0&quot; myRequiredAttribute=&quot;0&quot; xsi:noNamespaceSchemaLocation=&quot;my-schema.xsd&quot;&gt;
	&lt;MySubElement&gt;text&lt;/MySubElement&gt; &lt;!-- can be replaced with: &lt;MySubElement /&gt; --&gt;
	&lt;MySubElementString&gt;String&lt;/MySubElementString&gt; &lt;!-- can be replaced with: &lt;MySubElementString /&gt; --&gt;
	&lt;MySubElementOptional&gt;text&lt;/MySubElementOptional&gt; &lt;!-- can be completely removed --&gt;
	&lt;MySubElementRequiring3CharString&gt;aaa&lt;/MySubElementRequiring3CharString&gt;
	&lt;MySubElementDisallowingText/&gt;
	&lt;MySubElementWithOptionalAttrAndOptionalText myIntegerAttribute=&quot;text&quot;&gt;String&lt;/MySubElementWithOptionalAttrAndOptionalText&gt;
	&lt;!-- can be replaced with: 	&lt;MySubElementWithOptionalAttrAndOptionalText /&gt; --&gt;
&lt;/MyRootElement&gt;
[/code]

<img src="https://bmwieczorek.files.wordpress.com/2017/07/my-schema-xsd.png" alt="my-schema.xsd" width="716" height="392" class="alignnone size-full wp-image-3389" />]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3382</wp:post_id>
  <wp:post_date>2017-07-17 22:52:34</wp:post_date>
  <wp:post_date_gmt>2017-07-17 20:52:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>xsd-schema-validation-of-xml</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="validation"><![CDATA[validation]]></category>
  <category domain="category" nicename="xml"><![CDATA[xml]]></category>
  <category domain="category" nicename="xsd"><![CDATA[xsd]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[7193432979]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>sed replace append character match pattern case insensitive</title>
  <link>https://bmwieczorek.wordpress.com/2017/07/21/sed-replace-append-character-match-pattern-case-insensitive/</link>
  <pubDate>Fri, 21 Jul 2017 19:42:52 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=3391</guid>
  <description/>
  <content:encoded><![CDATA[<strong>Problem:</strong>
replace Date to _Date in text in file:
<pre> &lt;xs:attribute name="Date" type="xs:date" /&gt;</pre>
to get:
<pre>&lt;xs:attribute name="_Date" type="xs:date" /&gt;</pre>
<strong>Solution:</strong>
<code>sed -i 's/name="\(Date\)"/name="_\1"/gI' file
t=date &amp;&amp; sed -i "s/name=\"\($t\)\"/name=\"_\1\"/gI" file</code>

where:
gI means replace globally case insensitive
\1 means matched date within: name="Date"]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3391</wp:post_id>
  <wp:post_date>2017-07-21 21:42:52</wp:post_date>
  <wp:post_date_gmt>2017-07-21 19:42:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>sed-replace-append-character-match-pattern-case-insensitive</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="append"><![CDATA[append]]></category>
  <category domain="post_tag" nicename="case-insensitive"><![CDATA[case insensitive]]></category>
  <category domain="post_tag" nicename="replace"><![CDATA[replace]]></category>
  <category domain="category" nicename="sed"><![CDATA[sed]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[7340040921]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>xsd schema declaring xml only with attributes</title>
  <link>https://bmwieczorek.wordpress.com/2017/07/27/xsd-schema-declaring-xml-only-with-attributes/</link>
  <pubDate>Thu, 27 Jul 2017 20:20:59 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=3415</guid>
  <description/>
  <content:encoded><![CDATA[For schema
[code language="xml"]
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;xs:schema xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns=&quot;http://www.bawi.com/schema&quot; targetNamespace=&quot;http://www.bawi.com/schema&quot; elementFormDefault=&quot;qualified&quot;&gt;
  &lt;xs:element name=&quot;MyRootElement&quot;&gt;
    &lt;xs:complexType&gt;
      &lt;xs:sequence&gt;
        &lt;xs:element name=&quot;MyElement&quot;&gt;
          &lt;xs:complexType&gt;
            &lt;xs:attribute name=&quot;myAttribute&quot;/&gt;
          &lt;/xs:complexType&gt;
        &lt;/xs:element&gt;
      &lt;/xs:sequence&gt;
    &lt;/xs:complexType&gt;
  &lt;/xs:element&gt;
&lt;/xs:schema&gt;
[/code]
<img src="https://bmwieczorek.files.wordpress.com/2017/07/screen-shot-2017-07-27-at-22-06-15.png" alt="Screen Shot 2017-07-27 at 22.06.15" width="778" height="166" class="alignnone size-full wp-image-3424" />
we have valid xml:
[code language="xml"]
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;MyRootElement xmlns=&quot;http://www.bawi.com/schema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.bawi.com/schema schema.xsd&quot;&gt;
  &lt;MyElement myAttribute=&quot;anyType&quot;/&gt;
&lt;/MyRootElement&gt;
[/code]
but when we add text body (e.g. 'aaa') to the xml:
[code language="xml"]
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;MyRootElement xmlns=&quot;http://www.bawi.com/schema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.bawi.com/schema schema.xsd&quot;&gt;
  &lt;MyElement myAttribute=&quot;anyType&quot;&gt;aaa&lt;/MyElement&gt;
&lt;/MyRootElement&gt;
[/code]
then we get validation error:
<pre>
lineNumber: 3; columnNumber: 51; cvc-complex-type.2.1: Element 'MyElement' must have no character or element information item [children], because the type's content type is empty.
</pre>


In order to fix it we need to add simepleContent and extension to the schema:
[code language="xml"]
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;xs:schema xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns=&quot;http://www.bawi.com/schema&quot; targetNamespace=&quot;http://www.bawi.com/schema&quot; elementFormDefault=&quot;qualified&quot;&gt;
  &lt;xs:element name=&quot;MyRootElement&quot;&gt;
    &lt;xs:complexType&gt;
      &lt;xs:sequence&gt;
        &lt;xs:element name=&quot;MyElement&quot;&gt;
          &lt;xs:complexType&gt;
            &lt;xs:simpleContent&gt;
              &lt;xs:extension base=&quot;xs:string&quot;&gt;
                &lt;xs:attribute name=&quot;myAttribute&quot;/&gt;
              &lt;/xs:extension&gt;
            &lt;/xs:simpleContent&gt;
          &lt;/xs:complexType&gt;
        &lt;/xs:element&gt;
      &lt;/xs:sequence&gt;
    &lt;/xs:complexType&gt;
  &lt;/xs:element&gt;
&lt;/xs:schema&gt;
[/code]
Then both xml above with be valid. 
Note text-like information in the MyElement icon:
<img src="https://bmwieczorek.files.wordpress.com/2017/07/screen-shot-2017-07-27-at-22-19-43.png" alt="Screen Shot 2017-07-27 at 22.19.43" width="770" height="150" class="alignnone size-full wp-image-3446" />

Empty elements such as [code language="xml"]&lt;MyElement/&gt;[/code] is allowed when schema defines it as [code language="xml"]&lt;xs:element name=&quot;MyElement&quot;/&gt;[/code] or [code language="xml"]&lt;xs:element name=&quot;MyElement&quot; type=&quot;xs:string&quot;/&gt;[/code]. However, when we change schema to int type such as [code language="xml"]&lt;xs:element name=&quot;MyElement&quot; type=&quot;xs:int&quot;/&gt;[/code] then we get validation error: <pre>lineNumber: 3; columnNumber: 15; cvc-datatype-valid.1.2.1: '' is not a valid value for 'integer'.</pre>


]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3415</wp:post_id>
  <wp:post_date>2017-07-27 22:20:59</wp:post_date>
  <wp:post_date_gmt>2017-07-27 20:20:59</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>xsd-schema-declaring-xml-only-with-attributes</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="schema"><![CDATA[schema]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="validation"><![CDATA[validation]]></category>
  <category domain="category" nicename="xml"><![CDATA[xml]]></category>
  <category domain="category" nicename="xsd"><![CDATA[xsd]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[7565449390]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>xsd schema - repeating elements via unbouned choice and sequence</title>
  <link>https://bmwieczorek.wordpress.com/2017/08/07/xsd-schema-repeating-elements-via-unbouned-choice-and-sequence/</link>
  <pubDate>Mon, 07 Aug 2017 11:38:35 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=3453</guid>
  <description/>
  <content:encoded><![CDATA[For the schema below with choice:
[code language="xml"]
&lt;xs:schema xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns=&quot;http://www.bawi.com/schema&quot; targetNamespace=&quot;http://www.bawi.com/schema&quot; elementFormDefault=&quot;qualified&quot;&gt;
    &lt;xs:element name=&quot;MyRootElement&quot;&gt;
        &lt;xs:complexType&gt;

	    &lt;!-- allow either (zero or more of A) or (only exactly single B) --&gt;	
            &lt;xs:choice&gt;
                &lt;xs:element name=&quot;A&quot; maxOccurs=&quot;unbounded&quot;/&gt;
                &lt;xs:element name=&quot;B&quot; /&gt;
            &lt;/xs:choice&gt;
        &lt;/xs:complexType&gt;
    &lt;/xs:element&gt;
&lt;/xs:schema&gt;
[/code]

<img src="https://bmwieczorek.files.wordpress.com/2017/08/screen-shot-2017-08-07-at-13-33-10.png" alt="Screen Shot 2017-08-07 at 13.33.10" width="522" height="196" class="alignnone size-full wp-image-3459" />

we get valid xmls:
- no children
[code language="xml"]
&lt;MyRootElement xmlns=&quot;http://www.bawi.com/schema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.bawi.com/schema schema.xsd&quot;&gt;
&lt;/MyRootElement&gt;
[/code]

- zero or more A element(s)
[code language="xml"]
&lt;MyRootElement xmlns=&quot;http://www.bawi.com/schema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.bawi.com/schema schema.xsd&quot;&gt;
  &lt;A&gt;&lt;/A&gt;
  &lt;A/&gt;
&lt;/MyRootElement&gt;
[/code]

- exactly one B element
[code language="xml"]
&lt;MyRootElement xmlns=&quot;http://www.bawi.com/schema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.bawi.com/schema schema.xsd&quot;&gt;
  &lt;B/&gt;
&lt;/MyRootElement&gt;
[/code]

However, combination of A and B is not possible:
[code language="xml"]
&lt;MyRootElement xmlns=&quot;http://www.bawi.com/schema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.bawi.com/schema schema.xsd&quot;&gt;
  &lt;A&gt;&lt;/A&gt;
  &lt;B/&gt;
&lt;/MyRootElement&gt;
[/code]
as we get
<pre>Invalid content was found starting with element 'B'. One of '{"http://www.bawi.com/schema":A}' is expected.</pre>

and also not valid xml:
[code language="xml"]
&lt;MyRootElement xmlns=&quot;http://www.bawi.com/schema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.bawi.com/schema schema.xsd&quot;&gt;
  &lt;B/&gt;
  &lt;A&gt;&lt;/A&gt;
&lt;/MyRootElement&gt;
[/code]
due to 
<pre>Invalid content was found starting with element 'A'. No child element is expected at this point.</pre>

In order to get xml with many A elements and single B we would define a sequence:

[code language="xml"]
&lt;xs:schema xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns=&quot;http://www.bawi.com/schema&quot; targetNamespace=&quot;http://www.bawi.com/schema&quot; elementFormDefault=&quot;qualified&quot;&gt;
    &lt;xs:element name=&quot;MyRootElement&quot;&gt;
        &lt;xs:complexType&gt;
            &lt;xs:sequence&gt;
                &lt;xs:element name=&quot;A&quot; minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;/&gt;
                &lt;xs:element name=&quot;B&quot; /&gt;
            &lt;/xs:sequence&gt;
        &lt;/xs:complexType&gt;
    &lt;/xs:element&gt;
&lt;/xs:schema&gt;
[/code]

<img src="https://bmwieczorek.files.wordpress.com/2017/08/screen-shot-2017-08-07-at-13-47-48.png" alt="Screen Shot 2017-08-07 at 13.47.48" width="526" height="184" class="alignnone size-full wp-image-3473" />

so that the xml below is valid:

[code language="xml"]
&lt;MyRootElement xmlns=&quot;http://www.bawi.com/schema&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.bawi.com/schema schema.xsd&quot;&gt;
  &lt;A&gt;&lt;/A&gt;
  &lt;B/&gt;
&lt;/MyRootElement&gt;
[/code]

For validation I have used the following code:
[code language="java"]
import org.xml.sax.SAXException;

import javax.xml.XMLConstants;
import javax.xml.transform.Source;
import javax.xml.transform.stream.StreamSource;
import javax.xml.validation.Schema;
import javax.xml.validation.SchemaFactory;
import javax.xml.validation.Validator;
import java.io.File;
import java.io.IOException;

public class MyValidator {
    public static void main(String[] args) throws SAXException, IOException {
        File schemaFile = new File(&quot;schema.xsd&quot;);
        Source xmlFile = new StreamSource(&quot;generated.xml&quot;);
        SchemaFactory schemaFactory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);
        Schema schema = schemaFactory.newSchema(schemaFile);
        Validator validator = schema.newValidator();
        validator.validate(xmlFile);
        System.out.println(xmlFile.getSystemId() + &quot; is valid&quot;);
    }
}
[/code]



]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3453</wp:post_id>
  <wp:post_date>2017-08-07 13:38:35</wp:post_date>
  <wp:post_date_gmt>2017-08-07 11:38:35</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>xsd-schema-repeating-elements-via-unbouned-choice-and-sequence</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="choice"><![CDATA[choice]]></category>
  <category domain="post_tag" nicename="schema"><![CDATA[schema]]></category>
  <category domain="post_tag" nicename="sequence"><![CDATA[sequence]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="xml"><![CDATA[xml]]></category>
  <category domain="category" nicename="xsd"><![CDATA[xsd]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[7997826749]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Remapping winkey windows key when running Windows and Ubuntu in VirtualBox on Mac OSX</title>
  <link>https://bmwieczorek.wordpress.com/2017/09/05/remapping-winkey-windows-key-when-running-windows-and-ubuntu-in-virtualbox-on-mac-osx/</link>
  <pubDate>Tue, 05 Sep 2017 18:54:27 +0000</pubDate>
  <dc:creator>bmwieczorek</dc:creator>
  <guid isPermaLink="false">https://bmwieczorek.wordpress.com/?p=3480</guid>
  <description/>
  <content:encoded><![CDATA[If you are used to Mac keyboard and you want to keep using command key for copy, paste, select etc.. also while running Windows or Ubuntu in VirtualBox then you could remap left windows key to left control key by running for:
<ol>
<li><strong>Ubuntu</strong>
<code>gsettings set org.gnome.desktop.input-sources xkb-options "['altwin:ctrl_win']"</code>
and optionally set terminal as well
<code>gsettings set org.gnome.Terminal.Legacy.Keybindings:/org/gnome/terminal/legacy/keybindings/ paste 'v'</code>
</li>
<li><strong>Windows</strong>
by adding registry entry:
<code>Windows Registry Editor Version 5.00
[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layout]
"Scancode Map"=hex:00,00,00,00,00,00,00,00,02,00,00,00,1d,00,5b,e0,00,00,00,00</code>

based on <a href="https://superuser.com/questions/1190329/can-i-switch-the-alt-and-ctrl-keys-on-my-keyboard">https://superuser.com/questions/1190329/can-i-switch-the-alt-and-ctrl-keys-on-my-keyboard</a>
</li>
</ol>
and restarting the Ubuntu or Windows.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>3480</wp:post_id>
  <wp:post_date>2017-09-05 20:54:27</wp:post_date>
  <wp:post_date_gmt>2017-09-05 18:54:27</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>remapping-winkey-windows-key-when-running-windows-and-ubuntu-in-virtualbox-on-mac-osx</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="mac"><![CDATA[mac]]></category>
  <category domain="post_tag" nicename="osx"><![CDATA[osx]]></category>
  <category domain="post_tag" nicename="remap-winkey-windows-key-to-ctrlkey-ctrl-key"><![CDATA[remap winkey windows key to ctrlkey ctrl key]]></category>
  <category domain="category" nicename="ubuntu"><![CDATA[ubuntu]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="virtualbox"><![CDATA[virtualbox]]></category>
  <category domain="post_tag" nicename="windows"><![CDATA[windows]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[8987367984]]></wp:meta_value>
  </wp:postmeta>
</item>
  </channel>
</rss>
