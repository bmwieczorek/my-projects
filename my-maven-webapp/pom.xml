<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>my-parent-pom</artifactId>
        <groupId>com.bawi</groupId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../my-parent-pom/pom.xml</relativePath>
    </parent>
    <artifactId>my-maven-webapp</artifactId>
    <packaging>war</packaging>

    <build>
        <finalName>my-maven-webapp</finalName>
        <plugins>

            <!-- fileter web.xml with project release version -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
                </configuration>
            </plugin>

            <!-- itests starting and stoping tomcat  -->
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <configuration>

                    <!-- waiter after cargo start; default true -->
                    <wait>false</wait>

                    <container>
                        <containerId>tomcat6x</containerId>

                        <!--
                            'installed' = present on local file system, default (as opposed to 'embedded' =
                            supported only by jetty )
                        -->
                        <type>installed</type>
                        <home>${tomcat.home}</home>

                        <!-- logging to file, instead console (default) -->
                        <!--
                            <log>${project.build.directory}/cargo.log</log>
                            <output>${project.build.directory}/catalina.out</output>
                        -->

                    </container>
                    <configuration>

                        <!--
                            'standalone' = recreated for every build (unlike 'existing' = shared across
                            builds)
                        -->
                        <type>standalone</type>

                        <!--
                            for 'standalone' configuration specify target dir where to deploy webapp
                            (different from tomcat home location), for 'existing' configuration use tomcat
                            home location as used in container
                        -->
                        <home>${project.build.directory}/tomcat6x</home>

                        <properties>
                            <cargo.logging>high</cargo.logging>
                            <!--
                                <cargo.jvmargs><![CDATA[-Xdebug
                                -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n]]></cargo.jvmargs>
                            -->
                        </properties>

                    </configuration>
                </configuration>
                <executions>
                    <execution>
                        <id>start-container</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-container</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--
                <plugin> <groupId>org.codehaus.cargo</groupId> <artifactId>cargo-maven2-plugin</artifactId>
                <configuration> <wait>false</wait> <container> <containerId>tomcat6x</containerId>
                <zipUrlInstaller> <url>http://localhost/apache-tomcat-${tomcat.version}.zip</url>
                <installDir>${installDir}</installDir> </zipUrlInstaller> </container> <deployables>
                <deployable> <groupId>com.bawi</groupId> <artifactId>my-maven-webapp</artifactId>
                <type>war</type> </deployable> </deployables> <configuration>
                <home>${project.build.directory}/tomcat6x/container</home> </configuration> </configuration>
                <executions> <execution> <id>start-container</id> <phase>pre-integration-test</phase> <goals>
                <goal>start</goal> </goals> </execution> <execution> <id>stop-container</id>
                <phase>post-integration-test</phase> <goals> <goal>stop</goal> </goals> </execution>
                </executions> </plugin>
            -->

            <!-- run *.itest.* package in integration test phase -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>**/itest/**</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>surefire-itest</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <excludes>
                                <exclude>none</exclude>
                            </excludes>
                            <includes>
                                <include>**/itest/**</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <!-- remove '@', part of email address, from default filtering delimiters  -->
                    <delimiters>
                        <delimiter>${*}</delimiter>
                    </delimiters>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                </configuration>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.outputDirectory}/log4j</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/log4j</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unzip tomcat</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <unzip src="../apache-tomcat-${tomcat.version}.zip" dest="../"
                                    overwrite="true" />
                            </tasks>
                        </configuration>
                    </execution>
                    <execution>
                        <id>delete directory with unzipped tomcat</id>
                        <phase>install</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <delete dir="../apache-tomcat-${tomcat.version}" />
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


        </plugins>

        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>
                <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-antrun-plugin</artifactId>
                                        <versionRange>[1.6,)</versionRange>
                                        <goals>
                                            <goal>run</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <dependencies>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
        </dependency>
    </dependencies>

    <properties>
        <tomcat.home>${basedir}/../apache-tomcat-${tomcat.version}</tomcat.home>
        <myapp.build.release.version>RC1-2010.06</myapp.build.release.version>
    </properties>

</project>